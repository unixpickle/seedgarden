// Code generated by go-bindata.
// sources:
// assets/index.html
// assets/images/back.svg
// assets/images/loader.svg
// assets/images/magnet.svg
// assets/images/pause.svg
// assets/images/play.svg
// assets/script/script.js
// assets/style/style.css
// DO NOT EDIT!

package main

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x51\x4b\x6e\xc3\x20\x10\x5d\x27\xa7\xa0\xac\x63\x93\x2c\x2a\x55\x15\xf8\x12\x3d\x01\x81\x97\x32\x2d\x60\x0b\x26\x4e\x72\xfb\xca\xc6\x52\xab\xae\xb2\x01\xde\x0f\xc4\x3c\xfd\xe2\x47\xc7\x8f\x09\x22\x70\x8a\xc3\x5e\xb7\x6d\xa7\x03\xac\x1f\xf6\xbb\x9d\x4e\x60\x2b\x5c\xb0\xa5\x82\x8d\xbc\xf2\xa5\x7b\x93\xbf\x42\xb6\x09\x46\xce\x84\xdb\x34\x16\x96\xc2\x8d\x99\x91\xd9\xc8\x1b\x79\x0e\xc6\x63\x26\x87\x6e\x05\x07\x41\x99\x98\x6c\xec\xaa\xb3\x11\xe6\xd4\x1f\x0f\x22\xd9\x3b\xa5\x6b\xfa\x4b\x5d\x2b\xca\x8a\xed\x39\xc2\xe4\xb1\xbd\xc6\xc4\x11\xc3\x07\xe0\x3f\x6d\xf1\xc8\x5a\x35\x66\xbf\x88\x91\xf2\xb7\x28\x88\x46\x56\x7e\x44\xd4\x00\xb0\x14\xa1\xe0\xb2\x31\x6a\x5d\x7b\x57\xab\x14\xcb\x6f\x8d\x64\xdc\x59\x2d\xb8\xdd\x50\x5d\xa1\x89\x45\x2d\xce\xc8\xc0\x3c\xd5\x77\xa5\x2e\xe7\x3e\x41\x15\x58\xc7\xdd\xe9\xb5\x3f\xf6\xc7\xfe\xab\xca\x41\xab\x66\x1e\x9e\xc9\xf9\x31\x3d\x95\x6d\xe7\x4d\xfd\x6f\xd5\x6a\x6b\x43\x9f\x47\xff\x58\xb3\x9e\x66\x41\xde\xc8\x6d\xde\x6d\x46\xca\xd3\xbc\xda\x9b\x4d\xab\x56\xe6\x4f\x00\x00\x00\xff\xff\x55\xab\x4e\xde\xe4\x01\x00\x00")

func assetsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsIndexHtml,
		"assets/index.html",
	)
}

func assetsIndexHtml() (*asset, error) {
	bytes, err := assetsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/index.html", size: 484, mode: os.FileMode(420), modTime: time.Unix(1511579925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesBackSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8e\x41\x4e\xec\x30\x0c\x86\xf7\x39\x85\xe5\x75\xdb\x24\xed\xd3\x13\x83\x9a\x8e\xc4\x82\xdd\xec\xe0\x00\xd1\xd4\x34\x11\x19\xa7\x34\xa1\xe9\xf1\x51\x06\x04\x96\xbd\xf9\x6c\xf9\xfb\xc7\xf3\x71\x0b\xb0\xd3\x96\x7c\x64\x83\xba\x53\x08\xc4\xd7\x38\x7b\x5e\x0c\xbe\xbe\x3c\xb7\x0f\x08\x29\x5b\x9e\x6d\x88\x4c\x06\x39\xe2\x79\x12\x63\xda\x17\x01\x00\xc7\x2d\x70\x32\xe8\x72\x5e\x1f\xa5\x2c\xa5\x74\x65\xe8\xe2\xb6\xc8\x5e\x29\x25\xd3\xbe\x60\xbd\xda\x3d\x95\xa7\x78\x18\x54\xa0\xe0\x5f\xed\x6f\xfc\x67\xd5\x38\x09\x80\x71\xb5\xd9\x41\xca\x5b\x7c\x27\x83\xc5\xf9\x4c\x08\x6f\x3e\x84\xaa\x65\xc2\x9f\x55\x5b\xfc\x9c\x9d\xc1\xe1\x17\x04\xcf\x74\xb5\xab\xc1\xf4\xf1\x69\x37\xba\x7f\xbf\xd7\x6c\xf0\xa2\xff\x37\x5a\x43\x68\x4f\xcd\x09\xea\x5c\x06\xd5\xf4\x0a\x5c\xdb\x0f\x08\x72\x12\x63\xcd\x39\x89\xaf\x00\x00\x00\xff\xff\xad\x09\x57\xb3\x0a\x01\x00\x00")

func assetsImagesBackSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesBackSvg,
		"assets/images/back.svg",
	)
}

func assetsImagesBackSvg() (*asset, error) {
	bytes, err := assetsImagesBackSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/back.svg", size: 266, mode: os.FileMode(420), modTime: time.Unix(1511656400, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesLoaderSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\xcd\x41\x6e\xc3\x20\x14\x04\xd0\x3d\xa7\x18\xfd\x6e\x1d\x03\x69\x5a\xa1\x0a\x88\x7a\x80\x1e\xa2\x0d\x04\xa3\x12\xb0\x0c\x35\x3e\x7e\x65\xc9\x8b\xcc\xec\x66\xf1\x46\x5f\xb7\x47\xc2\xea\x97\x1a\x4b\x36\x24\x47\x41\xf0\xf9\x56\x5c\xcc\xc1\xd0\x5f\xbb\x9f\x14\xe1\x6a\x99\xae\x6b\xc0\xf6\x48\xb9\x1a\x9a\x5a\x9b\x3f\x38\xef\xbd\x8f\xfd\x75\x2c\x4b\xe0\x67\x21\x04\xaf\x6b\x20\x86\x3d\x4f\x9c\x24\xcb\x00\x3d\x7f\xb7\x09\xb5\x2d\xe5\xd7\x1b\x7a\x79\x7f\xfb\xb9\xb9\x0b\x1d\xc3\xa9\x47\xd7\x26\x43\x17\xc2\x3d\xa6\x64\x28\x97\xec\x0f\x09\x80\x33\xf4\x75\x1e\xa4\xc0\xa7\x1a\x14\x04\xe4\x5e\x31\x48\x45\xe0\x96\xe9\xfd\xd6\xb2\xff\x00\x00\x00\xff\xff\x24\x9c\x62\x4d\xc7\x00\x00\x00")

func assetsImagesLoaderSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesLoaderSvg,
		"assets/images/loader.svg",
	)
}

func assetsImagesLoaderSvg() (*asset, error) {
	bytes, err := assetsImagesLoaderSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/loader.svg", size: 199, mode: os.FileMode(420), modTime: time.Unix(1511579925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesMagnetSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x92\xcd\x6e\x5a\x31\x10\x85\xd7\x41\xe2\x1d\x2c\xaf\xc7\x83\x67\xc6\xe3\x9f\x2a\x97\x48\x65\x0b\xab\x3e\x41\x45\x08\x20\xdd\x40\x14\x28\x17\xf1\xf4\x95\x7d\x41\xa5\xbb\x23\x7b\x3c\xe7\x3b\x47\x7e\x7d\xbb\x7e\xf6\xe6\xb2\xf9\x3e\xed\x8f\x87\xce\x12\x7a\x6b\x36\x87\xf5\xf1\x7d\x7f\xd8\x76\xf6\xcf\xf9\xc3\x65\xfb\x36\x9f\x4e\x5e\x4f\x97\xed\xf3\x18\x59\x73\xfd\xec\x0f\xa7\xce\xee\xce\xe7\xaf\x1f\xb3\xd9\x30\x0c\x38\x08\x1e\xbf\xb7\x33\xf6\xde\xcf\x4e\x97\xad\x35\x97\xfd\x66\xf8\x79\xbc\x76\xd6\x1b\x6f\x72\x36\x39\xdb\xf9\x74\xf2\xf2\xfa\xf5\xfb\xbc\x33\x1f\xfb\xbe\xef\xec\xb0\xdb\x9f\x37\xd6\xbc\x77\x76\xa5\x01\x33\x33\x64\x41\x2e\x69\xed\x3c\x52\x10\x20\xd4\xa0\x40\xe8\x73\x00\xc6\x42\x19\x18\x13\x27\x10\xf4\xaa\x3d\x15\x2c\x1c\x81\x30\x4a\x9a\x4e\x5e\x5e\xd6\x84\x31\x08\x78\x24\xc9\x20\x48\x5e\x1d\xa1\xa7\xaa\x59\x1d\xa3\x46\xee\x09\x55\xd5\x51\xc4\x20\xdc\x3b\x56\x2c\x8e\x91\x84\x97\xff\xf9\xdf\xcc\x4a\x31\x31\x41\xcc\x58\x8a\xb6\x57\x09\xc6\x57\xcd\xe9\x1f\x5e\xa8\xfe\x3e\x55\xb0\xe6\x03\x77\x9f\xc6\xe6\x1a\x5b\xe5\x92\x52\x23\x49\x9d\xcb\x31\x39\x42\xa5\x31\x8b\x1b\xb3\xb8\x66\x31\x82\x85\xe5\xb3\xf9\xcd\xac\x04\x49\x03\x04\xc2\x42\x52\xed\x97\x01\x53\x04\xcd\x98\x63\xe8\x6b\x06\xcf\x2d\x05\x2d\xb9\xa0\xd7\x04\x52\x30\x2f\xaa\xe6\x2a\xa5\x08\x70\x01\xc9\x58\x12\xdd\x95\xaa\xae\xbd\x4b\x98\x52\x82\x88\x89\x8b\xa3\x50\x1b\x03\xd2\xbb\x3a\x91\x42\x44\xe1\x02\xa4\x30\x1e\x8d\xd1\xc1\x63\xa0\xe8\x7c\xdd\xee\x31\x4b\xae\xb2\xd6\x83\x1c\x62\x0d\x12\xeb\x9a\x88\x45\xf8\x0e\x07\x0d\xae\x6f\x37\x35\x62\x51\x5a\xe4\x80\x25\x24\x08\x1e\x53\x11\xc8\x5a\x41\x63\x2c\x4d\x35\xbc\x6a\xb6\xc8\x0a\x94\x90\x4b\x80\x18\x5b\xcd\x1e\x42\x00\xff\x4b\x1e\xc7\x72\x9f\x5e\xc8\x63\x41\xed\x53\x1e\x7b\x9f\x9b\xbb\xd9\x59\xfd\xcb\xf5\x73\xce\xa7\x93\xbf\x01\x00\x00\xff\xff\x19\xfb\x2d\xa3\xfc\x02\x00\x00")

func assetsImagesMagnetSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesMagnetSvg,
		"assets/images/magnet.svg",
	)
}

func assetsImagesMagnetSvg() (*asset, error) {
	bytes, err := assetsImagesMagnetSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/magnet.svg", size: 764, mode: os.FileMode(420), modTime: time.Unix(1511654043, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesPauseSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\x4d\x6f\xe2\x30\x10\x3d\x83\xc4\x7f\xb0\xbc\x57\x67\x32\x63\x8f\xbf\x2a\x42\xa5\xe5\xd2\xcb\x5e\xf7\xbe\x0a\x14\xd0\x52\xa8\x0a\x0b\x68\x7f\x7d\xe5\x0f\x68\x2a\x21\x12\xc9\xb1\x33\xe3\x37\x6f\xde\xb3\xa7\xcf\x97\xb7\xad\x38\x2d\x3f\x0e\x9b\xfd\xae\x93\x04\x28\xc5\x72\xd7\xef\x17\x9b\xdd\xaa\x93\xff\x8e\xaf\x4d\x90\xe2\x79\x36\x19\x4f\x0f\xa7\xd5\x30\x8f\xa4\xb8\xbc\x6d\x77\x87\x4e\xae\x8f\xc7\xf7\xa7\xb6\x3d\x9f\xcf\x70\x36\xb0\xff\x58\xb5\x1a\x11\xdb\xc3\x69\x55\x53\x9e\x2e\xdb\xcd\xee\xef\xbd\x44\x8a\x31\xb6\x39\x2a\x27\xe3\x91\x10\xe2\xb4\x59\x9e\x7f\xee\x2f\x9d\x44\x81\x82\x4d\x00\x6b\xdc\xf5\x2b\x67\x93\xf1\x68\xfa\xfe\xe7\xb8\x16\xaf\x9b\xed\xb6\x93\x3f\x16\x36\xbd\x52\x2c\x3a\xf9\x8b\x1c\x03\x5b\xa3\xf0\x85\x02\x68\xef\xe6\x64\xc0\x68\x56\xa8\x22\x20\x93\x22\x08\xe8\x95\x05\xd6\x36\x8f\x3c\x4f\x7f\x42\x8e\x2a\x04\x44\x52\x79\x87\xbe\x2e\x12\x0a\x9d\x18\x09\x62\xa4\xc9\x78\x94\xe8\xdd\x79\x7a\x54\x0c\x91\x43\x2d\x10\x41\x1b\x53\x0a\x28\xd2\x10\xd8\xf7\x06\x1c\x45\x95\x46\xaf\x3c\x44\xd4\x39\x1c\x72\xd8\x52\x59\xac\x89\x1d\x50\xa0\x3e\x61\xc5\x4c\x5a\x1b\x6a\x08\x02\x51\xc5\x69\x72\xe2\x03\x22\xb9\x42\x93\xc6\x4a\xa0\xf1\x10\x62\xa8\xf3\x02\xf2\xbb\xb4\xd5\x63\xc3\x10\xad\x6e\x32\xe9\xa6\x14\xcb\xf8\x35\x6f\x4e\xde\x80\x0b\xb6\x76\x45\x2e\x02\xa3\x56\xa8\x6e\x32\xff\x97\xed\x43\x3f\xd8\x18\xa0\x2b\x93\x39\xeb\x08\x1c\x5d\x85\x63\x6d\x41\x93\x55\xa8\x58\x23\x68\xe7\x15\xbe\x68\xcf\x80\xc1\xf5\x4d\x55\x20\x93\xf2\x65\x43\x25\x55\xb0\x1e\x28\x90\x9a\xd7\x94\xa5\xb6\xa9\x1d\xa3\x55\x96\xa0\xce\x0b\xca\xd5\xd2\xa1\x71\x44\x5f\xc6\xdd\x12\x93\xa0\xf8\x65\x5c\x88\x7e\x60\x5c\x65\x73\x33\xee\x01\xab\x52\x25\x5b\xaa\xe3\x1d\x4b\xb3\x71\x3c\x30\x8e\x06\xc6\xd1\x77\xe3\xe6\xe5\x2e\x70\x3e\xab\x14\x15\x1b\x07\xde\x94\x43\xfc\x4d\xf1\x62\xcf\x34\xdd\xc2\xd9\x64\xfc\x19\x00\x00\xff\xff\x95\x2f\x32\x11\xe6\x03\x00\x00")

func assetsImagesPauseSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesPauseSvg,
		"assets/images/pause.svg",
	)
}

func assetsImagesPauseSvg() (*asset, error) {
	bytes, err := assetsImagesPauseSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/pause.svg", size: 998, mode: os.FileMode(420), modTime: time.Unix(1511645360, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesPlaySvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x51\xcb\x6a\xc3\x30\x10\x3c\xc7\xe0\x7f\x10\xea\x55\x5e\xaf\xb4\xf2\x4a\x2a\x71\x02\xcd\xb9\xa7\x7e\x41\x71\x12\xc7\xe0\xd8\x21\x76\xed\xd0\xaf\x2f\x72\xd3\x17\x74\x05\xd2\x32\xcc\x8e\x34\xa3\xf5\xf6\x76\x6e\xc5\x74\xb8\x0e\x4d\xdf\x95\x52\x03\x4a\x71\xe8\xaa\x7e\xdf\x74\x75\x29\xdf\xc6\x63\xe6\xa5\xd8\x6e\xd2\x64\x3d\x4c\xf5\x6f\x9e\x96\x69\xb2\x12\x42\xdc\xce\x6d\x37\x94\xf2\x34\x8e\x97\xc7\x3c\x9f\xe7\x19\x66\x82\xfe\x5a\xe7\x06\x11\xf3\x61\xaa\xef\xbc\xa9\x39\xcc\x4f\xfd\xad\x94\x28\x50\x58\x0d\x21\x84\xfb\x21\x37\x69\xb2\x5a\x5f\x5e\xc7\x93\x38\x36\x6d\x5b\xca\x87\x7d\x11\x97\x14\xfb\x52\x3e\x13\x03\xb2\x57\x06\x41\x3b\x6e\x33\x13\x32\x83\x3b\x06\xc7\x3a\x43\x40\x2a\x14\x03\x31\xc5\xbe\x70\x8a\x17\x04\x41\x6b\xbb\x2b\xc0\x21\x2b\x04\xe3\x9d\x2a\x20\xa2\x6c\xbe\xba\x10\xc2\x64\x31\x4d\x56\x3f\x25\x84\x10\x15\x2a\x04\x72\x26\x4e\x2d\xb3\x4e\x93\x42\x28\x16\x4d\xef\xb9\x42\xd0\x36\xe2\xe8\xe2\x4e\x0b\x47\x6b\xab\x10\x2c\xdf\xef\x8d\x9c\x10\xd4\xa2\x14\x5c\x7c\x57\x24\x15\xec\xb3\xe8\xc0\xb5\x8b\x81\xcf\x48\xfe\xad\x0a\xc1\xb8\xe8\x4d\x7b\x17\x75\xc9\x64\x08\x36\xd8\xef\xde\x1b\x7a\x21\x06\xa2\x25\x14\x62\x52\x7f\x22\x7a\x97\x22\x8f\xdf\x15\xa3\xdf\xa4\xc9\x47\x00\x00\x00\xff\xff\x81\xc0\x9e\x0d\xe0\x01\x00\x00")

func assetsImagesPlaySvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesPlaySvg,
		"assets/images/play.svg",
	)
}

func assetsImagesPlaySvg() (*asset, error) {
	bytes, err := assetsImagesPlaySvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/play.svg", size: 480, mode: os.FileMode(420), modTime: time.Unix(1511641898, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsScriptScriptJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x3c\x6b\x73\xdb\x38\x92\xdf\xfd\x2b\x3a\x35\xb5\x26\xb5\x91\x19\x7b\x76\xf6\xee\x4a\x1e\x5d\x2a\x7e\x64\xe3\x5b\xe7\x51\x4e\x72\x57\x57\xa9\xd4\x14\x48\xb6\x2c\xc6\x14\xa1\x01\xa1\xd8\x1a\xaf\xfe\xfb\x15\x5e\x24\x00\x82\x92\xfc\x9a\xdd\xba\x9a\x2f\x96\x45\x02\xdd\x8d\x7e\xa1\xbb\xd1\x50\x56\x92\xba\x86\x23\xb2\xfc\x88\x84\x65\x53\xb8\xdd\x01\xc8\x68\x55\x73\xb6\xc8\x38\x65\xf1\xaf\x0b\x64\xcb\x21\x64\xe9\x40\xbe\x02\xe0\xd3\xa2\x4e\xe4\x53\x18\x83\xfc\x3c\x6c\x9f\xff\x92\xa5\x30\x86\x2c\x55\x8f\x5e\xbc\x80\x13\x2c\xc9\x12\xf8\x14\x81\xe1\xaf\x0b\xac\x39\xd4\x14\xf8\x94\x70\xb8\x46\xc8\x69\x15\x71\xa8\xe7\x64\x26\x47\xa4\x64\x69\xa6\x5d\x4f\x8b\x12\xe5\xc3\x45\x8d\x0c\xf8\x72\x8e\x35\xd0\x05\x07\x02\xb5\xa2\x53\x62\x4e\x6c\xcc\xa4\x2c\x3f\x15\x33\x14\xa3\xc6\x50\x23\xd7\x5f\xe2\x78\x00\xe3\xff\xd4\xc4\x87\x07\x57\x8b\xb2\x3c\xd4\xef\xe5\xab\x23\x92\x5d\x61\x95\xbf\xfa\x70\x16\x47\x2f\xc8\xbc\x78\x91\x92\xa5\xc2\xfb\x52\xe2\x1d\x47\xf0\x1c\xb0\xca\x68\x8e\x9f\x2f\xce\x8e\xe9\x6c\x4e\x2b\xac\xb8\x62\xd6\x60\x90\xf0\x29\x56\x31\x4d\xbf\xd9\x88\x5b\x0e\xc5\x02\xdf\x10\x68\xfa\x6d\x60\xb0\xae\x06\x49\x46\x78\x36\x8d\x91\xb1\x9e\x49\xc8\xd8\x50\x52\x6a\x4d\x52\xff\xad\x86\xad\xfc\x92\x93\xd3\xf3\x57\xff\x2b\x5f\xac\x76\x84\x28\x49\x95\x61\x19\x1b\xe1\x15\x13\x88\x3b\x1c\x18\x34\xe8\xb2\x12\x09\x33\x7c\xeb\x8e\xd3\xe8\x7c\x71\xc7\x37\x43\x58\x4a\x26\x1b\x46\x4a\xd4\x35\x27\xbc\xc8\xe0\x12\x39\x48\xa2\x1a\x22\x18\xf2\x05\xab\xe0\x60\x7f\x7f\x5f\x0d\x5e\xed\xec\x28\x35\x3c\x96\xd4\x92\xb4\xc4\x63\x52\x96\x1d\x5d\x5c\xb0\xb2\xa3\x89\xae\xc6\xf9\xd2\x5b\xb0\x32\x2c\x8d\x5e\x59\xf4\x49\xa2\x57\x0e\xab\x5e\x66\x6f\x60\x51\xb3\xea\x23\xb2\x3c\xa7\xf4\x6a\x31\x07\xbc\xe1\x58\xe5\x1b\xf9\x50\xe4\x36\x1b\xea\xc5\x1c\x59\xab\xa7\xa5\x04\xf5\xb2\xc8\xfb\x94\xb4\xc8\x07\x72\xba\x47\xc5\x79\x51\xf3\xd7\x45\x89\xf5\xb6\x54\x4c\x49\x3d\xed\xa3\x63\x22\x00\xbd\x14\x23\xfa\xa8\x10\xef\x3c\x3a\x26\x8b\x2a\xe3\x05\xad\x82\x52\x94\x48\xb4\xe6\x4c\x50\x08\x48\xca\x36\x20\x2b\xa1\xe3\xe2\x41\x51\xd5\x5c\xac\x80\x4e\xe0\xd3\x72\x8e\xa7\x8c\x51\xd6\xaa\xba\x06\xf5\x81\xd1\x59\x51\x63\xc2\xf0\x1b\x66\x3c\x8e\x32\x5a\x55\xa8\xa8\x98\x90\xa2\xc4\x3c\x32\x62\x06\x2c\x6b\xdc\x30\x1d\x19\xb3\x8c\x64\xa5\x55\x8f\x61\x3d\x77\xc9\x7b\x26\x1e\x25\xf4\x6a\x13\x39\x15\x5e\x83\xa4\x3b\x8e\x8c\xfb\x34\x54\x39\xc6\xa8\x67\x4b\xa8\xdf\x6a\x5a\xc5\x8a\xa9\x21\xd5\x17\xe8\x69\xfa\x2d\x99\x92\xfa\xfd\x75\xf5\x81\xd1\x39\x32\xbe\x8c\x23\x14\x68\xa2\xc1\x26\x8a\x68\xfa\xed\x8b\x1e\xfb\x35\x44\xc2\x2f\x25\xbd\x46\x96\x91\x1a\xdf\xa7\xdf\x62\x63\x56\xc2\x46\x1c\x01\x77\x46\x49\xb4\x82\xb6\x57\x8c\x91\x65\x52\xd4\xf2\x53\xbe\xf2\xdc\x86\x20\x7e\x46\xe6\xb1\x03\x43\x2b\x91\x56\x50\xc1\x88\x45\x29\x3c\xfb\xed\x4a\xbc\x78\x9f\x0a\xda\x93\x2b\x5c\xd6\x12\x62\x32\xa1\xec\x94\x64\xd3\xf8\xca\xe5\xcb\x15\x8c\xc7\x10\x9d\x9d\x44\x36\x17\x04\xa4\xa4\xc8\x61\x2c\x30\x7f\xb9\xfa\xda\xa3\x0e\x62\xd8\x97\xab\x2f\xfb\x5f\x13\x4e\xcf\x05\x65\xc7\xa4\xc6\x78\x00\xcf\xe1\x2a\xa9\x17\x69\xcd\x59\x7c\x30\xf8\xea\x43\xd9\x31\xfe\xa3\x95\xe0\xa2\xe4\x82\x59\xc6\x35\x64\x57\x1f\x39\xe1\xd8\xb1\x3e\xe1\x5d\xf1\xef\xb8\xac\x1d\x6f\xd3\x3c\x15\x5b\xa0\xf9\xff\x70\xc7\x6c\xab\x02\x1c\xa4\x0b\xce\x69\x05\x9c\xc2\x94\xce\x70\x4e\x2e\x11\xe2\x09\xa3\x33\x90\x26\x09\xf5\x94\x2e\xca\xbc\x8a\xb8\x99\xc4\x70\xc2\xb0\x9e\xca\xdd\x58\x8c\x4e\x1a\x7e\x95\x34\x23\x42\x9e\x42\x99\xa6\x92\x77\x16\xe7\xa6\x45\xcd\x29\x5b\x26\x0c\xe7\x25\xc9\x50\xae\x22\xbe\x5d\x0d\xe1\xba\xa8\x72\x7a\x9d\xf0\x82\x97\x38\xd4\x4e\x52\xd2\xfa\x89\xbe\x21\xf5\x34\xbe\x5d\xb5\xca\xdd\xae\x8c\x56\xc7\x53\x52\x5d\xa2\x59\x98\x90\xdc\x84\x94\x35\xaa\xa1\x1a\x28\xc9\xf3\xd3\xef\x58\x71\xe1\xcc\xb0\x12\xee\x68\x4e\xe7\x72\x7c\x34\x84\x40\x20\x60\xa0\xaa\xcd\x2e\x5b\x30\x86\x15\x57\xa4\x0e\x02\xfe\xdd\x79\xaf\x21\x79\x1a\xa7\xd6\x83\xb3\x39\x5f\xea\x71\x87\x61\x7e\x25\x25\x56\x97\x7c\x0a\x3f\xc3\x8f\x1d\xa3\x33\x6a\x60\x6d\xb7\x6c\xd9\x0c\xd2\xea\x4c\xea\xba\xb8\x94\xde\x65\x51\xf2\x21\xfc\xd7\xc7\xf7\xef\x92\x39\x61\x35\xc6\x39\x76\xdc\xad\x8b\xba\x51\xc8\x41\xb3\x4a\x90\x9e\x14\x62\x1c\xc0\xad\xef\x54\x34\x2d\x92\x07\xf3\x45\x3d\x55\x0b\x93\x6c\x35\xa4\x1b\x69\xb7\xaf\xb7\x11\xb5\x02\xd1\x32\xd8\xd1\x95\x27\x80\xef\xc8\x25\x2c\x3f\xe5\x31\x7c\x73\x72\x3d\x86\xb1\xf6\xaf\x3a\x76\xd4\x3c\x0c\x33\x2c\x40\x90\xc6\xfc\x9d\x30\xa8\x67\xa4\x2c\x95\x85\x6f\x87\x5b\x3e\x16\xa8\x77\x77\x21\x6e\x67\x2b\x62\xcc\xcb\x81\xa5\x74\xcf\x6c\xef\xd7\x4e\x18\x68\xfd\xeb\xe8\x5e\xf4\x43\x14\xf0\xeb\xd1\x0f\x3d\xfb\xb8\x54\xbb\x9a\xb3\xa2\xba\x2c\x26\x4b\x1b\x41\xb3\xb1\x37\x51\xce\x59\x35\xa1\x4d\x74\x71\x81\x24\xe3\x49\x03\xa8\xe3\xe0\xe6\x8c\xce\x6b\x37\xb6\x50\x8f\x7c\x1e\x09\xc6\xe9\x25\x94\x94\xe4\x45\x75\x39\x02\xce\x16\x38\xd4\x0f\xe5\x6e\x35\x92\x82\x32\x8f\x8a\x6a\x42\xd5\x13\xb5\x52\x3b\x83\x51\xf1\x93\x95\x15\x28\xd3\x37\x74\xfe\x4f\x51\x96\x6f\xe9\xa2\xe2\x5e\x98\xd7\x4e\xc3\xeb\x36\xa2\x53\x7e\x45\xd2\x9d\x88\xa8\x4d\x7e\x4d\xc9\x52\x04\x54\x29\xc9\xae\x92\xb4\xa8\x72\x39\xc8\xd2\x52\x07\xd7\xe7\x6a\xd6\x8b\x2d\x31\x01\xa7\x65\x40\x55\x8e\xac\x1b\xee\x4b\x46\x25\x9a\x3d\x1d\x91\x2b\x51\x64\x0c\x09\xc7\xd3\x12\x67\x42\xae\xe7\x94\xe4\xc8\x3e\x90\x0a\xdd\x68\x57\xed\x7b\x1e\x60\x0c\xc6\x56\x21\xb0\x4d\x5e\x13\xe5\xc5\xf7\x68\xd8\x7c\xbd\x05\xa9\x25\xef\xc8\x0c\x47\xa0\x02\x8c\xbd\x39\xa9\x30\x82\xd5\xd0\xcd\x85\x2c\x8c\xf0\x1c\xa2\x48\xbf\x5d\x1b\xa6\xdd\x9f\x92\x94\x2c\xf7\x84\xb6\x38\x74\xac\x05\x07\x10\x95\x24\xc5\xd2\x02\xd9\x07\x74\xaf\x22\x33\x77\x85\xce\x1a\xc5\x90\x44\x0c\x69\x5e\x0f\x9e\x80\x86\x1a\x31\x47\x56\x6f\x20\x43\x8f\x7a\x52\x4a\x4a\xc4\x6c\xba\x99\x14\x33\xec\x3e\xb4\xa8\xd8\x67\x1b\x62\x48\x9e\xef\x05\x46\x03\xd0\xea\xb8\x2c\xb2\xab\x91\x0e\x27\x2c\x03\xa7\xd5\xab\x3c\x8f\x7d\x72\x67\xe4\xb2\x42\xfe\xf9\xe2\x7c\xe0\x2e\x2b\x7a\x95\xe7\xf0\x89\xca\x88\x22\x6a\xd7\xe2\xa9\xb3\x31\x6c\xcb\x67\xc4\x52\xf7\x87\xd2\x89\xb9\xc1\x1f\xea\xd0\xe4\xb6\x75\x84\x32\x44\x1a\x1a\x1f\x68\xcd\x1c\xc9\xbf\x4d\x74\x63\xbc\xb4\x26\xe8\xb8\x2c\x42\x3e\xd9\x41\x67\x45\x64\x8a\x15\x3a\x1c\xb3\xdc\x54\x4e\xaf\x2b\x41\x4a\xed\x14\x59\xd4\xbb\x4b\xe4\xbc\xa8\x2e\x45\xa4\x06\x63\x3b\x94\x6b\x5e\x8b\x57\xc2\xb7\xa9\x1d\x00\xf9\x59\xc5\x91\x7d\x27\x65\x6c\x71\xbe\x1d\x37\x74\x69\x4f\x2e\x4e\x5f\x5f\x9c\x7e\x7c\xf3\xcb\xd9\xbb\x4f\xa7\x17\xff\xfd\xea\xbc\x75\x92\x0d\x55\x8e\x9f\x7c\xe6\x91\xdc\x71\x67\xed\x02\x9c\x9d\xd1\x9b\x26\x73\x13\x9d\x71\xb9\x81\x9a\x08\x58\x64\x3e\xd3\x12\x82\x25\x8a\xd0\x40\x92\xad\x32\x62\xc7\xcb\x73\xbd\x20\x52\x96\x71\xa4\x06\x47\x43\x15\xa6\xdb\x55\x16\xc6\xb7\x04\x21\xc7\x06\x20\xd0\xf9\xd6\x00\xe8\xbc\x33\x9f\xe4\xb9\x99\x6e\xe9\xba\x1d\x5c\x91\x3c\xff\x7c\x71\x0e\x63\x50\xc5\x01\x92\xe7\x2f\x17\xac\xec\xab\x0c\xb4\x40\xc2\x35\x1d\x05\x4d\xe7\xb6\x41\x55\xb0\x02\xbe\xe6\x59\xa7\x00\x66\xeb\xdf\x3f\xfe\xa1\x41\x10\x99\x9f\xd6\x1f\xb0\x12\xe6\x13\x77\xd2\xe1\x6e\x05\xcc\x55\x63\x11\x77\x84\xa9\x56\x4b\x6f\xd4\x24\xd2\xf4\xe7\x84\x93\x6e\x99\xa9\xd7\x36\xec\x05\xf4\xd3\xea\x52\x6b\xe8\x0d\x19\xa5\x40\x2f\x35\xf6\xc6\xad\x3a\xde\x24\x02\xfa\x77\x61\xdb\x37\x3a\xca\x7a\x36\x86\xfd\x43\x6f\x00\xad\x34\x76\x9f\xca\xc6\x3a\x6e\xfc\x62\x25\xd8\xa5\x59\xc7\x8f\x0c\x61\xbf\x53\x83\xbb\x13\x6b\x5e\xbc\x80\x4f\xef\x4f\xde\x8f\x60\x46\x96\x29\xc2\x94\x54\x79\x89\xca\xe7\xc1\x14\x19\x26\x49\xa2\x47\x0a\xb5\xa4\x25\x26\x9c\x91\x0c\x63\xec\x66\x7a\x1d\xe6\xba\x35\x08\x9f\x91\xbb\xbb\x1d\x37\x30\x11\x81\x9d\xe4\xaa\xc7\x2a\x0b\x89\x6d\x5b\x42\x5d\xb4\x65\x69\x5c\x13\xca\x20\x2e\x91\x43\x01\x82\xf5\x50\xc0\xcf\x1d\x2c\x2a\x86\x3f\x84\xe7\xcf\x0b\xab\x8a\x2b\x8d\x2e\x2f\x9b\x6c\xb4\x19\xff\xa5\xf8\x6a\xeb\x51\x5e\x36\x99\xbb\xfc\xdc\xdd\x85\x67\x79\xe9\x91\x6b\x69\x85\xff\xce\x51\xf8\x7e\xa5\x17\x76\x2e\x5e\x88\x70\x6d\x73\x4d\xd0\x31\xec\x5b\x6b\xc3\x0c\x60\xf7\x74\x6e\x1b\xdd\xf2\x74\xc9\xec\x31\xe6\x45\xa3\x7a\xf7\xc1\xbf\xb2\x00\x6d\x43\xc9\xca\xdd\xe3\xad\x82\xb9\xbf\x79\xf9\x0a\xf8\x57\xab\x76\xae\x36\xee\x13\x2d\xe3\x3b\xe5\x58\x6e\x7a\x15\xcc\xac\x40\x96\x72\xcf\x9d\xc4\x4a\x3d\x3b\xb5\xf2\x2a\xf5\x44\x7d\x71\xd2\x29\xf1\xfc\x02\x7f\xbd\x6b\x3a\x65\x4d\xc3\xeb\xb6\x34\x6d\xa7\x53\x46\xa9\x13\x55\x87\x6e\xa6\xd5\x0f\xcc\xad\x34\xea\x8d\xb9\x95\x6f\x65\x2e\x55\x87\xd6\x18\xbc\xe1\x8c\x1c\xc9\x58\xf2\x58\xca\x6a\xdc\xd5\xa5\x97\x10\x35\x71\x89\x0a\x40\xe7\xea\x4d\x04\x23\x88\xa2\xe6\x3c\x4d\x39\xb8\x7a\x4a\xaf\x61\xce\xe8\x25\xc3\xba\x86\x94\xb0\xc4\x56\x8e\x35\x41\xb0\x93\xeb\xb8\x91\xaf\x83\xdd\x0a\xc1\xef\x9f\x3b\xb9\xeb\x99\x22\x51\xeb\xb1\xa2\x60\xcd\x86\xef\x08\x2f\x1f\x1e\xba\x37\xe8\x44\x94\x62\x62\x77\xe1\x68\x3c\xf6\xf7\x84\xf3\x4e\x20\xff\x91\xd3\xb9\x17\xae\x8b\x47\x56\x9c\x0e\xa3\x47\xa5\x98\x30\xfe\x60\x92\x09\xe3\x1d\x9a\x45\xc0\xf7\x14\x49\x9b\x2b\xdb\x40\x1e\x9b\x97\x5e\xea\xba\xe3\xd1\xf0\x58\x7a\xc5\xe8\xf5\x9d\x92\x73\x17\xf2\x7a\xd8\x22\x3c\xf2\xd6\xb5\x01\x7c\x90\x75\xe0\x14\x9f\x8c\x6c\x8a\xdf\x70\x14\x59\xcf\x06\x4f\x81\x66\x42\xd9\x8c\x70\x81\x4b\xec\xf6\x75\xf1\x1b\x1e\x2d\x39\xd6\x03\x1b\xef\x7d\xf4\xe3\x5f\x85\x8b\x7f\x02\xb1\xbb\x89\xcc\xe8\xe9\x79\x19\x1f\xec\xef\xc3\x9f\x85\x66\x67\x1a\x67\x2e\x99\x09\x2f\xc0\xe1\x6d\xc2\xe9\xeb\xe2\x06\xf3\xf8\xc7\x81\x08\x79\xfe\x14\x85\x99\xfd\x87\x41\xb8\xc3\x4c\x04\x83\xf9\xef\x6d\x16\xae\x38\xff\xdf\xd8\xc6\x05\xf9\x3d\xac\x42\xb1\x52\xe0\x12\xac\x34\xab\x13\xdf\x7b\x18\xf9\x87\xde\xbb\xc3\x3e\xcf\xff\x39\x5a\xbf\x90\x78\x3f\x51\x4e\xca\x3f\x54\xfe\x1e\x7c\x34\x2a\xaf\xf8\xf8\x4f\x50\x78\x55\x11\xdc\xcb\x68\xc5\x49\x51\x21\xbb\x93\xf6\x6f\x1f\x9c\x6a\x34\x0f\x8b\x4e\x4f\x24\x10\x2f\x3c\x55\x0f\x03\xc5\x6f\x33\xaa\x4d\xea\xcc\x12\xd4\x90\x36\x29\x73\x5f\x86\x8f\xbd\xe4\x98\x47\x3c\x9d\x6a\x38\x23\x01\x3f\xea\xc9\x50\x28\x49\x02\x88\x64\xf2\x1b\x8c\xe3\xfd\x65\xb6\xc5\xbc\x4d\xa4\x10\x8f\x8c\x2b\x5c\x8e\xe0\x26\x29\x8b\xea\x6a\x08\x53\x86\x13\xf3\xcd\xa5\xe5\x26\x99\x13\x3e\x6d\x49\xf1\x0f\x2c\x82\xe7\x83\x6d\xbd\xe0\xc9\xc4\xb0\xa7\x9a\x92\x7a\x8e\x0b\x5b\x02\x7e\x87\x33\x43\x8f\x30\x7d\x16\xb3\x51\x4f\xd4\x89\xab\x3e\x6d\xf5\x28\x74\xd4\xdd\x3f\x08\x72\xf4\xdb\x3f\x09\x72\xcb\x37\xfa\x38\xc8\xae\xdf\xd8\x40\x46\xea\xc3\x3a\x15\x6a\x7b\xb6\xac\xcd\x23\x95\x61\x52\x5b\x4d\x82\x7a\x31\x99\x14\x37\x58\xc3\x18\xbe\x44\xf0\xf7\xa3\x68\x08\x11\xbc\x55\x1f\x7f\x53\x1f\x9f\x8e\x22\x59\x7b\x0c\x55\x35\xcd\xf4\x50\x39\xd3\x46\x00\xe3\x66\x68\x53\xc9\xd4\xef\x8b\xdf\x10\xc6\x90\xea\x70\xfc\x2d\xe1\xd3\x64\x4e\xaf\xe3\x83\xfd\x21\xfc\x05\xfe\x0c\x71\x01\xcf\xe1\xc0\x6e\x8b\x90\x33\x7e\x86\x83\xfd\x8e\x46\x8a\x37\x6e\x08\xaf\x90\x76\x14\xbc\x01\xb1\x01\xc6\xc1\x56\x30\xba\x40\xe4\x2a\x18\x5d\x54\xb9\x1c\xd6\x81\xa2\x5b\xde\xf4\x68\xb5\xf6\xe7\x10\xa9\xff\xa2\xc3\x80\xf4\xe4\x96\xc5\x9a\x16\x14\xd3\x4e\xd9\x4a\x56\xbd\x7b\x0e\xd1\x8b\x1a\x33\x09\xa2\x81\x60\xc2\x73\x59\x31\xb5\x9a\x33\xc4\x2a\xdc\xda\x97\x91\x23\x8c\xc7\x63\xd8\xf7\x2a\x97\xdb\x17\xa7\x8a\x7c\x04\x51\x45\xf7\xda\x33\x93\x6d\x8b\x52\xd3\x03\xcb\x36\xdd\xed\x3b\x7a\x47\x9b\x95\x34\x1e\xd5\xd9\x54\x8c\x4a\x95\xea\x84\xc1\x5f\x9a\xf0\xaf\x79\xd9\xd6\x86\xd7\x2c\xcb\xe0\x39\xad\x38\x5b\x0e\xe1\xb6\x29\xf0\x8d\x20\x6f\x48\x92\x6e\x57\x17\xe2\xcd\x33\xef\x88\xd9\xec\xa1\xf2\xa1\x29\xda\x0f\x8c\x91\x0e\x12\x86\xdf\x91\xd5\xba\xd3\x6c\x13\x9b\x23\x6a\xf6\x1f\xcd\xe1\x2e\x7b\xc5\xca\x77\x24\x3f\x6c\x0d\x72\x56\x63\x2b\x80\x55\x08\xf5\x6b\xa0\x3b\x00\xc2\xd4\x73\xe4\xa4\x28\x85\x77\xe8\xf3\x7b\x45\x75\x79\x44\x98\xe0\x91\xa9\x6a\x8e\x36\xe6\xd9\x43\x6d\xff\xa5\xf0\x62\x06\xa7\x72\xa2\xc7\xe2\x61\x9c\x97\x86\x49\xf2\x7c\xb7\x2d\x36\xee\xee\x06\x80\x0b\x65\x75\xd2\x78\x2d\xe0\xf5\xc4\x87\x55\xb7\x3f\x66\x4b\xe9\xcd\x13\xd4\x56\x27\x05\x96\xf9\x03\x03\x11\x3f\xcc\xf5\x0b\x54\x0f\x2a\x1e\xfa\xc0\x37\x96\xa5\x9e\x2c\x68\x7e\x12\x56\x05\x52\xb8\x27\x64\x57\x30\x71\x1b\x84\x7d\xd9\x46\x77\x50\x16\x8d\x3b\x08\x31\x4d\xc4\xfb\xda\xbd\xaf\x39\xb0\x98\x30\xfa\x1b\x56\xea\xa8\x62\xd0\xf1\x62\x8e\xff\x32\x9c\x5f\x67\x4c\x2e\x43\x7a\xa4\xe9\xd5\x9c\xed\x7a\xb3\x26\x41\x5b\xae\x71\x65\x8d\x27\x53\x3e\xc2\x76\x61\x1b\xb9\xd4\xea\x97\x4b\x8d\x14\x7b\x1b\x75\x46\xda\x97\x45\x5d\xf7\xd9\xf6\xd3\x3d\x22\x62\xb7\x45\x6e\x9b\xa0\x32\x40\x95\xf2\xbd\x5d\x8f\x5e\xf3\x65\xd9\x36\x57\x5e\x17\x39\x9f\x8e\x8c\x2e\x34\x67\x4f\x7f\x96\xe1\x4f\x13\xea\xfc\x45\x57\x3c\x15\x41\x22\x48\xbd\x94\x01\xcc\xb1\xf2\xd2\x6a\xb2\x74\xd9\x3b\xba\xed\xf2\x41\x1c\x28\xaa\xcb\xbd\x94\xb0\xb5\x1c\x50\x00\xfa\x27\x8b\x28\xbd\x44\x16\x0d\xd5\x82\x47\x7a\xdd\xab\x00\xb7\xfa\x36\x19\x13\x06\x75\x37\x95\x9f\x83\x5b\x8a\x1e\xab\x76\xa3\x40\x03\xee\xbf\xfd\x35\xcd\xf2\x9f\xa2\x75\xd9\x49\xf4\xc3\x04\xd3\x9f\xd2\x83\x28\x18\x0b\x46\x3f\x90\x7f\xc7\x9f\xfe\x23\x8d\xda\x9b\x04\x17\x94\xf2\xfb\x9f\x0b\xb7\xa9\x45\xda\xdc\x48\x30\xad\xae\xfa\x7b\xfc\x25\x32\xfd\xf1\xf2\x26\x9a\x88\xfa\xf5\x03\x13\x3a\xbc\x21\xb5\xfd\xf8\x88\x2c\xcf\x4e\x9a\x6b\x24\x2e\x74\xa7\xdf\xbf\x69\xf1\x69\xf2\x9a\x60\x17\xb0\x07\xc1\xed\xd6\xb7\xd7\xa0\x72\xc2\x35\xcd\x69\x99\x6a\x7f\xbb\xe3\xa1\x75\x3b\x0b\xaf\xdd\x66\x34\xe7\x68\x5d\x0d\xeb\xb6\xcf\xf9\x99\x5b\x43\xdf\xc8\x99\x67\x77\xaf\xad\x36\x9c\x4e\x67\xa4\x3a\xbd\x29\x9a\x6b\x09\xb5\xc3\x17\x75\x8f\xd2\xb4\x3e\x39\xef\x6c\x81\x85\x47\x48\xd9\x1d\xde\x27\xb0\xb7\xf7\x36\xb5\x2e\x5a\x71\xac\xb8\x74\x8d\x6b\xb7\xfb\x4f\x74\xae\x83\x44\x75\x17\x73\xd4\xbb\xaa\x76\xef\xd4\x1c\x18\x99\x7f\xda\x37\x54\xbf\xb0\x98\xaf\x3a\x86\xc4\xe3\x78\x60\x0f\x54\x40\x95\xb8\x46\x96\x3a\xaa\xf1\xf6\xdb\xb8\x16\x42\xd9\x2e\x66\xe9\x54\xe0\x74\x40\x6e\x77\x9e\x06\xbb\x4d\x15\xda\x57\xb2\x0d\x2e\x76\xba\x4a\x43\x3d\xa5\x7e\xc5\xcc\x61\x77\xa7\xff\xd1\x33\x8d\x07\xb5\x8a\x7b\x45\x20\x47\x42\x5b\x01\xd6\xc2\x84\xae\x2d\x78\x64\xb6\x1c\x90\x37\x70\xb7\x51\x0c\xcd\xd8\x93\x26\x25\x53\x9d\x50\xc6\x0c\xa7\xf4\xda\xbc\xd2\x57\x15\xfd\x99\x47\x64\x39\x82\x22\x77\xa6\x1c\x91\x65\x5c\xe4\x83\xf6\x66\x6e\xb0\x1a\x16\x30\x32\xbf\x79\xcb\xbd\x4e\xe4\xad\xd6\xea\x2d\xf3\x3b\xfe\xe0\xc6\x74\x74\x85\x4c\xde\xc6\xd8\xed\xcb\x13\x54\x2a\xbc\xdd\x4e\xc2\xb5\xf9\xed\x59\x35\xa1\x6e\x7a\xab\xef\x24\x59\x11\xac\xee\x4f\x70\xf4\x58\x3b\x34\xa7\x83\x55\xdf\xb7\xf3\x58\xae\xe6\xd3\x79\x78\x7a\xdb\xbe\xda\x3f\x5b\x95\x9a\x03\x66\x74\xe2\xf4\xe0\xda\x00\x2c\xd6\x78\x7b\xf0\x76\x35\xc2\x8d\xc7\x22\x3d\xb7\x1c\xac\xa3\x50\xc8\x29\xd6\x50\xc9\x9d\xbb\xa8\x79\x62\xa5\x17\x5e\x0f\xd9\x3a\x45\x93\xbe\x7a\x2b\x83\xd3\x77\x74\x86\xda\x15\xf5\x80\xb2\x4d\xe1\x55\x9e\x8f\x60\xd1\x75\x4d\xaf\x19\x9d\x09\x6b\x58\x74\x8c\x61\x0b\x32\xec\x52\xd3\x9d\xac\xbf\xf1\x96\x1b\x8c\xb9\xa5\xa9\xe9\xbd\xeb\x8e\xb1\x37\xd2\x0a\xaf\x9b\x4b\x5a\x10\xb0\x26\x8d\x71\x15\x0c\x65\xda\x3b\x6b\x06\x8c\x13\xbd\x98\x1d\x7f\x6d\xf8\x62\xb5\x6b\x5b\x7e\x66\x13\x89\x52\x5c\xd2\x4b\xfd\x1e\x94\x05\xb6\x43\xf5\x83\x08\x0e\x9d\xb4\xcc\x75\xe8\xd1\x1f\x95\x1c\x86\xd7\xe5\x47\x48\xce\x9c\x91\xf2\xfd\xb0\xf2\x2f\x7a\xca\x1b\xcf\x0d\xd2\xdd\x5d\x70\x88\x0a\x70\xc5\xb9\x85\xd8\x92\xd8\xef\x0d\x7a\xb9\x1a\x9a\xbc\x03\x6e\xab\xb1\x1d\x74\xd8\xd1\x64\x08\xde\xed\xea\xe1\xf2\x39\x59\x7f\xe9\xc0\x44\x99\xdd\x51\x16\x66\x9b\x66\x0f\x7c\x13\x96\xd8\x32\x5f\x30\x5d\x1d\x9c\xcd\x79\x1c\xbd\x95\x0d\xfe\xf0\xf9\xe2\x3c\xb2\x0a\xf2\xcd\x25\x7f\x9f\x14\xeb\x7e\x81\x18\xe3\x19\x6e\xd7\xe3\xb4\x70\x36\x42\xe9\x59\xcc\x6a\x67\xa7\xf7\x3e\xb1\x2c\x8a\x0c\xa1\xc9\x09\xf5\x4a\xa5\x1b\x3b\x79\xff\x36\xd1\x71\x78\xc8\xad\x89\x14\x4c\x47\x48\x43\xc8\x69\xb6\x10\x4f\x93\x4b\xe4\x7a\xc0\xd1\xf2\x2c\x97\xbf\x40\x20\xe2\x33\x79\xc3\x5f\x88\x5b\xa5\x6f\x5a\x7b\x9f\xf2\xf2\x64\x4a\x96\x17\x72\xfb\xab\xdd\xcb\x92\x29\x59\x9e\x87\xee\x55\xa6\x64\x69\xb5\x00\x2b\xa9\x38\x5e\x66\xd9\xd8\xf9\x9d\xd2\x28\x67\xa2\xba\x4c\xa9\xbe\xdb\xdd\xbf\xfa\x67\x69\x1e\xe9\x3e\x65\x83\xb2\xdb\xf5\xeb\x4c\xbe\xc0\x0c\x8b\xef\xf8\x41\x90\xe0\xf2\xb8\x3d\x05\x51\x5e\xe8\xd9\x78\xec\x83\xf6\xdc\xce\x1a\xc4\x5d\x0b\xbf\xed\x4a\xa7\x2b\x17\x4f\x22\x56\xfc\xb2\x81\xaf\x77\x62\xa9\x65\x7b\x5e\xce\xb9\x45\x22\x48\xfb\xca\x7a\x2a\xa3\xdb\x53\xf1\xd7\xa6\x93\x1e\x45\xf6\x1b\x75\x56\x3e\x34\x67\xd7\xe6\xf0\x7c\xef\x20\x1a\x02\xc7\x1b\x3e\x82\xe8\xac\x92\x3f\x5b\xa0\x7c\x40\x64\xa5\x66\x72\x95\xb9\x15\x67\xc8\x5b\x1e\x0f\x40\xfa\x63\x8b\xf4\x7d\x65\x7e\xce\xa8\x83\x51\xc8\xcc\x20\xf3\xf2\xb2\x0e\x31\x6e\x9f\xb9\x55\xac\x98\x14\x25\x47\xd6\x9c\x62\x85\x9a\xe2\xeb\x21\xf8\xc6\x32\x70\x5a\xd2\x4b\x9c\xc9\x3e\x74\xe7\x5c\x2b\xce\x87\x50\x38\x7b\xe7\xc6\xe4\x4c\x53\x2b\xf8\xb1\xee\x62\xa4\x93\x6b\xc5\xb9\x1f\xa1\x2b\x56\xe6\xe5\x5e\x04\xcf\xa1\x18\x42\x25\x95\x22\x97\x15\xdd\x36\x56\xf3\x4e\xba\xf4\x2f\xbd\x88\x95\xb4\x07\x8e\xd0\x3d\x46\xed\x27\xfe\x74\x36\xe7\xcb\x56\x94\x79\xb9\x27\x7f\x1f\x20\xda\x10\xb2\x4a\x94\xdd\xfb\x99\xbe\xe0\xbc\x60\xbc\x35\x60\x3f\xd9\x33\xc2\x08\x0e\x56\x82\x61\xbe\x60\x1e\x59\x34\x62\xe3\x64\x49\x91\x3b\x59\x93\xe2\x4a\x4a\x96\xae\x58\x98\x2b\x16\x3f\x85\xf4\x04\xe2\x48\xe4\xee\x32\x11\xd8\x3d\xa1\xf4\xa7\x63\x96\x60\xd6\x27\x46\xc6\x51\xde\x45\x57\x54\x9b\x84\x43\x97\xec\x38\x19\xc2\x0c\xeb\x9a\x5c\xe2\x08\x02\x18\xee\x91\xfd\x68\xe9\x51\xcf\xd1\x08\x8c\x6d\x2b\xc9\x16\xf7\x83\x99\xab\x6d\xea\x1e\xdc\x58\x7f\xee\xee\xaa\x7f\x12\x4e\x3f\xca\x1f\x6f\x88\x83\x91\xa5\xbb\xef\x68\x88\xee\xd6\xa3\x5b\x4a\xda\xbd\x07\xad\x75\xbb\x2d\x24\x8e\x0b\x7d\x94\x63\x10\xbd\x6d\xf8\x6d\x53\x4a\xb7\x85\x3b\xee\x16\xf1\x1d\xe3\x78\x4c\x22\x4a\x05\xd2\x2e\xda\x05\x4f\xbe\xd4\x43\x7d\x58\x15\x24\x4e\xda\x40\xfc\x38\x54\x19\xe3\xd1\x07\x54\xef\xa8\x91\x62\xe0\x8c\xca\xd1\xbc\x47\xc2\xef\x77\x3f\xdd\xe3\x90\xca\x32\xc0\xc7\x94\x97\xdb\x30\xa6\xa4\xa2\x4d\xb9\x4b\x83\xbf\xe7\x5a\x1b\xad\x15\xd7\x39\x3f\x8b\xe8\xfe\x10\x94\x75\xd6\x65\x17\xf2\x04\x54\x73\x4d\x54\xa8\x84\x3b\x29\x29\xaa\xac\x5c\xe4\x58\x9b\x5f\x16\x3c\xfc\x57\xcc\x4d\x54\x5d\xfe\x51\x2f\x1d\x2a\x11\xbd\xa6\xd9\xa2\xc6\x5c\xfb\x18\x95\x5d\xdc\x33\xf0\xec\xef\xcf\x90\x97\xc5\x08\x93\x07\xdd\xda\xf9\xc9\x20\xf9\x25\x44\xc0\xe9\x3c\x25\x6c\x4f\x3d\x69\x2e\xe3\x59\x25\x77\x6b\x27\x35\x67\x2d\xbb\xbb\x77\xaf\xfb\x07\xe8\xd9\xc3\x9b\x82\x07\xce\x01\x9c\xbd\x5b\x22\xb4\xeb\xff\x7f\xa3\xf0\x86\xce\x9a\x96\xda\xb5\x01\x6d\x54\x54\xf3\x05\xef\x1c\x8d\x1a\xfc\xda\x4a\x52\x7a\x13\xd9\x05\x36\x29\x93\x51\xcf\x91\x95\x27\x36\x91\x95\x58\x11\xb0\x98\x7e\x54\x2e\xd8\x96\xb3\xb5\xd0\xdd\xca\xbb\x3e\x83\xc1\x4e\x18\xe3\x94\x9d\x30\xe1\x84\x5d\x22\x4f\xbe\x93\x72\x81\x16\x04\xf9\xdd\x61\x62\xdd\x1c\x83\x45\xd6\x3a\x65\x01\x68\x4a\xcb\x1c\xd9\x08\x22\x7d\xa0\xa9\xce\x84\x9b\x98\x7d\xb5\xf3\x7f\x01\x00\x00\xff\xff\x76\x64\x08\xa3\x3c\x55\x00\x00")

func assetsScriptScriptJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsScriptScriptJs,
		"assets/script/script.js",
	)
}

func assetsScriptScriptJs() (*asset, error) {
	bytes, err := assetsScriptScriptJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/script/script.js", size: 21820, mode: os.FileMode(420), modTime: time.Unix(1511802456, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsStyleStyleCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x1a\xdd\x6e\xa3\xb8\xfa\x3e\x4f\x61\xa9\x3a\x6a\xe7\xa8\x64\x48\xd3\xa4\x1d\x7a\x33\x0f\x70\x74\x6e\xf6\x09\x1c\xf8\x48\xac\x3a\x36\xb2\x9d\x26\x99\x55\xde\x7d\x65\x83\xf9\x31\x18\x48\xca\xa8\xbb\xab\x19\x55\x18\xdb\xdf\xff\x7f\xd8\xf0\xe4\x8c\xfe\x9c\x21\x94\x72\xa6\x82\x14\xef\x09\x3d\x47\x48\x62\x26\x03\x09\x82\xa4\x6f\x33\x84\x36\x38\x7e\xdf\x0a\x7e\x60\x49\x10\x73\xca\x45\x84\xee\x92\x95\xfe\xf7\x36\xbb\xcc\xe6\xf1\x0e\x8b\xe0\x28\x70\x96\x41\x62\x20\x1d\xb9\x48\xcc\x8b\x08\x6d\x04\xe0\xf7\x40\xbf\x78\xb3\x1b\xe6\x95\xdd\xc1\x94\xe6\x30\x28\x60\x11\xa4\x94\x63\x15\x45\x38\x55\x20\x0c\xa4\x98\x33\x05\x4c\x45\xe8\x1e\xdd\x6b\x00\xe6\x58\x84\x36\x5c\xed\xf4\x72\x07\x64\xbb\x53\x11\x0a\xf5\x22\x21\x32\xa3\xf8\x1c\xa1\x0d\xe5\xf1\xbb\x81\x4a\x39\x4e\x0a\x48\xee\x2e\x42\x47\x92\xa8\x5d\x84\x9e\xc2\xec\x54\x87\x65\xd7\x05\xa3\x4a\x60\x26\x33\x2c\x80\xa9\x37\x2b\x24\x49\x7e\x41\x81\xb4\x26\x19\xb2\xc7\x5b\x88\xd0\x41\xd0\x87\xf9\xfc\xbb\x59\xc9\xef\x39\x05\x73\xf9\xb1\xfd\xe6\x1c\xcf\x81\x2c\xc2\xf0\x3f\xe6\x8f\xde\xc5\x8c\xec\xb1\x22\x9c\x05\x0c\xef\x21\x42\x82\x2b\xac\xa0\xb9\x93\x1c\x84\x79\x88\xd0\x42\x36\x77\x88\x82\x7c\x2b\x88\xf9\x41\xcb\x8c\xb0\x94\x30\xe2\x02\x50\x64\x4f\xd8\x36\x48\x0f\x2c\xce\xe1\x50\xc2\x00\x0b\x2d\xaf\x9f\xef\x70\x4e\x05\xde\x83\x2c\x50\xe7\x76\x21\xf8\xde\x3c\xa0\x5c\x18\x29\x17\x7b\x4b\xdb\x43\x98\x40\xce\xd9\x65\x86\x90\xe2\xde\x73\xcb\x75\xed\x64\xa1\x19\x4d\xc6\x06\xe7\xea\xc9\xb8\x24\x39\x39\x02\x28\x56\xe4\x03\xea\x3a\x79\xd6\x2a\x69\xde\x8a\xa2\x0d\xa4\x5c\xc0\x63\x13\x56\x7d\x11\xa4\x84\x52\x70\xe1\xe3\x8d\xe4\xf4\x90\x4b\x85\x42\x6a\xad\x67\x04\x2a\xc7\x22\xef\xbb\x8c\xae\x34\x2b\xab\xd3\x7e\xd7\x19\x43\x7a\x07\x84\xf5\x6a\x13\x27\xcf\x1a\xc2\xe6\xa0\x14\x67\xe6\x9c\xe5\x60\xb9\xce\x0d\x58\xeb\x35\x70\x5f\x6e\xb8\x48\x40\x44\x88\x71\x06\xd5\x3a\x10\x38\x21\x07\x59\x88\x22\xc3\x89\xa6\x23\x42\x61\xe9\x0c\x35\xb3\x5f\xbc\x36\xfc\xe3\xb8\x2b\x2c\xac\x83\xcc\x1f\x3f\x7e\x98\x93\x07\x21\xf5\x3a\xe3\x84\x29\x10\x15\xd9\xd1\x8e\x7f\xf8\x99\x7c\x79\x79\xa9\x1d\x4d\x79\x7c\x90\xe6\x28\x3f\x28\xcd\x9a\x21\xf6\x32\xbb\xc3\x49\x12\xd4\xa4\x50\x29\x3a\x25\x27\x48\x72\x1e\x95\xe2\x7b\xad\x92\x9c\x72\x91\x8b\xc4\x2e\x0b\x85\x3d\x3f\x37\xe3\x80\x5d\x3b\x12\x7a\x7a\xca\x5f\xef\xb1\xd8\x12\xd6\x92\x58\xa7\x8c\x5b\xbc\x39\x41\x65\x5c\xa8\x69\x89\xd1\x17\x7d\xee\xab\xf0\xb3\xc7\x5b\x06\x4a\x87\x9f\x7b\x37\xfe\xb8\xb6\xd4\x11\x9c\x2c\xaf\xb5\x0d\x01\x19\x60\xa5\x79\x2b\x1e\x9d\xfd\x4a\xfc\x31\x94\x54\xf2\x53\x20\x77\x38\xe1\x47\x6d\x52\x21\x7a\xc9\x4e\x48\x6c\x37\xf8\x21\x7c\x44\xc5\xff\xf9\xd2\x90\x67\x24\x50\xdc\xaf\x6e\xa1\x70\xbe\x90\xb5\x30\x55\x53\x79\xbf\x05\xd5\x58\x73\x48\xd0\xba\x6f\xd1\xb0\xfa\x96\xa7\xa2\xdc\xc3\x83\x0c\x33\xf0\x40\x2e\x8d\xbe\x3b\xac\x28\x9e\x45\x68\xf5\x5a\x37\x94\xc0\x35\x42\x43\x11\xf9\x65\xac\xa6\x30\xb1\x0d\x37\xa1\xe7\xe7\x1e\x12\x82\xd1\xc3\x1e\x9f\x82\xc2\x36\xd7\xfa\xd6\x37\x43\x4c\x9b\xbc\xd2\x82\x63\x4c\xe3\x07\x93\x50\x02\x64\x3c\xd7\xc8\xd4\x46\x39\x8b\xf8\x52\x47\x41\xd8\x75\x28\xd6\x61\x01\xc5\x42\x35\x38\x57\x39\xca\x65\x68\x71\x5e\xaa\xe4\xfb\x45\x62\xac\xfc\x78\x1d\x66\x63\xc4\xea\x52\x3b\xbd\x54\xbd\x18\x6e\x15\x6a\xbd\xbc\xe9\x91\xa0\x8d\xe1\x6d\xd8\x8b\x1c\xf4\x65\x36\x07\x21\xf8\xd7\xa9\xea\xda\x7a\xb1\x16\x70\x35\x73\x25\x06\x05\x27\x15\x60\x4a\xb6\x8d\xf0\x53\x70\x20\x74\x32\x18\x34\x03\x47\x10\xd3\x5b\x81\x0f\xc1\x55\x46\x40\xa4\x32\xb7\xf5\x43\x20\xd5\x99\x42\xa0\xce\x19\x54\x29\xc7\x9b\x9d\x2e\xb3\xbb\x84\x1f\x99\xb6\x1c\xf9\x15\xaa\xbe\x85\xe2\x7e\x95\x39\xfc\x4c\xae\x31\x1f\xfc\x2b\x14\x56\x03\x31\xb7\x8f\x3d\x55\x6f\x8f\xa3\x34\x6b\xcb\x52\x4c\x8b\x75\x2b\x51\x37\x95\xd9\x4d\x43\xc4\xb8\x7a\x88\x28\x96\x2a\x88\x77\x84\x26\x39\xc3\x25\xca\x42\xa7\xd9\x09\x49\x4e\x49\x52\x2f\x5c\x3b\xa1\xf5\xe6\xe2\x34\xd4\xff\x3c\xe5\x60\xa7\x80\xfe\x5b\x88\xc8\x9c\x0a\xe0\x03\x98\x92\xd6\x5e\x3c\x57\xca\x27\xd3\x40\xdd\xd4\x8b\x96\xf1\x22\xaf\x3f\xb5\x61\x96\x56\x97\xcb\xdd\x87\xdb\x6d\x69\x0a\xdf\x30\xfe\xb2\x58\xe5\x49\x68\x80\x6a\xc2\x52\xae\x75\xdd\xbe\x1f\x5e\x75\x7f\xba\x16\x7a\x2c\xc1\xce\xab\x94\x00\xcd\x4d\x3c\x6f\xe9\x8d\x8b\xd4\x02\x46\xa3\x04\xff\x24\x16\x8a\x37\x40\xa3\x94\x08\x6b\xc6\x05\xdb\x6e\x0d\xd8\x44\x7d\xa5\x42\x7a\x30\x57\xfe\xd3\x40\x5c\xb4\x2f\x77\x8c\x07\x5f\x1a\x71\xad\x82\x17\xe1\xa8\x42\xa8\x4d\xef\xf4\x11\xd5\x8f\xe2\x9a\xa0\xda\x80\xb2\x5b\xd4\x7c\xa6\xb3\x2b\x73\x62\x67\xa3\x3b\x5e\x84\xbd\x15\x44\xad\x13\x5b\xd6\x1b\xe2\xa3\x6d\xae\x43\x93\xa7\xe6\x8a\x67\x1d\x03\x8d\xb2\x0f\x35\x7a\x0c\x9d\xb9\x83\x43\x56\xd9\x7d\xbe\xfa\x22\x7a\xad\xf9\x2f\x11\xda\x87\x40\x02\x16\xf1\xae\x0c\x21\x3d\xf6\xd4\xdf\x0c\x3f\x85\xee\x54\xec\x75\xc8\xce\xdc\xae\xb7\x4a\x4e\xba\x42\x5b\xb7\xe7\x08\xeb\xce\xfe\x7a\x61\x07\x30\x3d\xbc\x79\x87\x01\xed\x4b\x70\x22\xaa\x7b\x3c\xe0\x95\x48\xd3\x9c\xad\x40\x5e\xbb\xe5\xf1\xcf\x18\x03\xe8\x03\x9d\x43\x80\x6a\x08\x69\xc4\x57\x88\x58\x80\x3c\x50\xf5\x2f\xa9\x0f\xbb\x98\x9a\xbe\xac\xef\x43\x72\x4d\x69\xef\xc0\xb1\xeb\x1d\x98\xda\x62\x8a\xa2\xb1\x11\xb9\xd6\x61\x53\x9e\x36\x21\x0f\xd0\x71\x7b\xe1\xe8\x03\xac\xf5\x4e\xd8\xf6\xd1\x7b\x00\xf6\x99\x3a\xf7\x6c\xeb\xb6\xea\xc6\x82\xaf\xe2\x7e\x55\x36\x93\x7e\x4a\x47\x13\x32\x85\x9e\x8c\x27\x44\x88\x28\x4c\x49\x3c\x48\x55\x4b\x2d\x03\x64\x4e\xaf\xc6\x8a\xfb\x66\xd7\x3d\xa0\xf6\xcf\xcb\x6b\x10\xc5\x6f\x33\xd9\x4f\xb4\x3d\x43\x52\xe9\xef\x80\xbc\xb7\xf9\x64\xb1\xc2\x66\xbb\xd5\x80\x4f\x14\x28\x7f\x83\x8c\x0b\x5e\x46\x8e\xba\xf2\x36\xab\x7f\xd4\xd5\x28\xe4\xbf\x22\xc5\xb5\x82\xed\x40\xfe\x6a\x13\x3c\x7d\xfa\xea\xc1\x71\x4d\xf6\x6a\x82\x71\x7a\xa6\x0c\x58\xcd\x2e\xbb\x6c\x1a\x21\x9e\xe1\x98\xa8\x73\x84\xc2\xf9\xaa\x43\x5b\x0e\xc4\xa1\xac\x38\xf6\x7e\xf5\x5a\x9a\xba\xd1\x94\x8b\x8f\x37\x5c\xc6\x62\x44\xb1\x59\xc8\x75\xe9\x54\xd8\xad\xa1\x4e\xd8\x2a\x7b\x3a\x1b\x08\xb7\xcc\x6c\xd5\x8b\x9d\x55\x65\xbb\x06\x5c\x4d\xf3\x5b\x4f\x7f\x91\x7b\x8b\x46\x1c\xa1\x0e\x16\xbb\x19\xc5\x67\x5b\xec\x7e\xca\x02\x46\xa2\xc3\x07\x09\xb7\xe3\x33\xaf\x3f\x31\xad\xf2\xc7\x99\x72\x98\x43\x98\x69\x76\xcb\x5f\xa8\xbb\x93\x82\x6b\x5c\xcb\x66\x03\xd4\x08\x35\x4b\xeb\xf5\xce\xac\xac\xb4\x5d\x5d\x48\x85\xe6\x6f\x31\x67\xe9\x17\x4b\x02\x14\x14\x04\x31\x67\x0a\x13\x56\xc4\xf9\xee\x5e\xbc\x3e\x15\x7b\x0a\xc7\x00\x17\xfc\xd8\x9a\xa7\x8d\xbe\x39\xdd\x24\xad\x23\xca\xaf\x42\x5f\x04\xf6\xb0\xd0\xf8\x6d\x7e\xd5\x1b\xdd\x3f\x07\x7b\x59\x4b\x1d\xc3\xd7\x5d\x6d\x62\x85\x27\xfc\x88\xe7\x16\xf4\x9e\xa1\x60\xfb\x6b\x8d\x62\x3c\xa9\x78\xf6\xd6\x37\x34\xb4\xd9\x7d\x94\x35\xf7\xd3\xe4\x8c\x0b\x0b\x02\x72\x04\x2d\x97\xba\x55\xfa\x2e\xe3\x8d\x29\xec\xad\x40\xbb\x29\x37\x03\xa4\x5e\xa0\x29\xa1\x20\x7b\xd2\xa9\xd9\xb7\xa5\xde\xe0\xb9\xaa\xc5\xb8\xca\xa1\x1b\x48\xc6\x7c\x72\xd4\x0c\x7f\x65\x97\x31\x0e\xfe\x70\xbd\xea\x2d\x51\x1b\xd3\xa8\x41\x84\x9f\xe9\x7b\xc7\xfc\x5c\xda\x8f\xde\x1b\xa7\x07\x2f\xce\xeb\xb5\x5b\xd7\x48\xe2\x4a\xc7\xcb\xa1\xe2\x1b\x25\xd1\x8e\x0b\x86\xa9\x04\x62\x6e\xbf\xb6\xb3\xe5\x55\x6f\xc6\x1b\x43\x62\xad\x5f\x6c\x7c\x27\x75\x99\xcd\x37\xf8\xfc\x77\xe9\x4a\x7c\x6a\x1d\xe8\x55\x1a\x1c\x4c\xdf\xa6\x74\x83\xbf\xa6\x43\x29\x21\x94\x4f\xa6\xf8\x7a\xec\xdc\x91\x00\x09\x08\xd9\xbd\x49\x01\xe2\x1d\x08\xe9\x49\x2c\x8e\x02\xca\xf8\xe4\x21\xa0\xf6\x39\xa3\x9f\x90\xfe\x43\x96\xa0\xc6\xe7\x8a\x6d\xd7\x1a\xa6\xc1\x49\xda\xff\x37\xdf\xa2\xde\xfb\x6e\x3a\xb4\x39\x97\xff\x28\x76\xfd\xf7\x3b\xc9\xae\x00\xfc\xcf\x6e\xfb\x21\xdc\x5c\x3d\x5f\x66\x7f\x05\x00\x00\xff\xff\xc2\xff\x63\x4e\xfd\x2c\x00\x00")

func assetsStyleStyleCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsStyleStyleCss,
		"assets/style/style.css",
	)
}

func assetsStyleStyleCss() (*asset, error) {
	bytes, err := assetsStyleStyleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/style/style.css", size: 11517, mode: os.FileMode(420), modTime: time.Unix(1511802457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/index.html": assetsIndexHtml,
	"assets/images/back.svg": assetsImagesBackSvg,
	"assets/images/loader.svg": assetsImagesLoaderSvg,
	"assets/images/magnet.svg": assetsImagesMagnetSvg,
	"assets/images/pause.svg": assetsImagesPauseSvg,
	"assets/images/play.svg": assetsImagesPlaySvg,
	"assets/script/script.js": assetsScriptScriptJs,
	"assets/style/style.css": assetsStyleStyleCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"images": &bintree{nil, map[string]*bintree{
			"back.svg": &bintree{assetsImagesBackSvg, map[string]*bintree{}},
			"loader.svg": &bintree{assetsImagesLoaderSvg, map[string]*bintree{}},
			"magnet.svg": &bintree{assetsImagesMagnetSvg, map[string]*bintree{}},
			"pause.svg": &bintree{assetsImagesPauseSvg, map[string]*bintree{}},
			"play.svg": &bintree{assetsImagesPlaySvg, map[string]*bintree{}},
		}},
		"index.html": &bintree{assetsIndexHtml, map[string]*bintree{}},
		"script": &bintree{nil, map[string]*bintree{
			"script.js": &bintree{assetsScriptScriptJs, map[string]*bintree{}},
		}},
		"style": &bintree{nil, map[string]*bintree{
			"style.css": &bintree{assetsStyleStyleCss, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
