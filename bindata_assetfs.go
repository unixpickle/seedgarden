// Code generated by go-bindata.
// sources:
// assets/index.html
// assets/images/back.svg
// assets/images/loader.svg
// assets/images/magnet.svg
// assets/images/pause.svg
// assets/images/play.svg
// assets/script/script.js
// assets/style/style.css
// DO NOT EDIT!

package main

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x51\x4b\x6e\xc3\x20\x10\x5d\x27\xa7\xa0\xac\x63\x93\x2c\x2a\x55\x15\xf8\x12\x3d\x01\x81\x97\x32\x2d\x60\x0b\x26\x4e\x72\xfb\xca\xc6\x52\xab\xae\xb2\x01\xde\x0f\xc4\x3c\xfd\xe2\x47\xc7\x8f\x09\x22\x70\x8a\xc3\x5e\xb7\x6d\xa7\x03\xac\x1f\xf6\xbb\x9d\x4e\x60\x2b\x5c\xb0\xa5\x82\x8d\xbc\xf2\xa5\x7b\x93\xbf\x42\xb6\x09\x46\xce\x84\xdb\x34\x16\x96\xc2\x8d\x99\x91\xd9\xc8\x1b\x79\x0e\xc6\x63\x26\x87\x6e\x05\x07\x41\x99\x98\x6c\xec\xaa\xb3\x11\xe6\xd4\x1f\x0f\x22\xd9\x3b\xa5\x6b\xfa\x4b\x5d\x2b\xca\x8a\xed\x39\xc2\xe4\xb1\xbd\xc6\xc4\x11\xc3\x07\xe0\x3f\x6d\xf1\xc8\x5a\x35\x66\xbf\x88\x91\xf2\xb7\x28\x88\x46\x56\x7e\x44\xd4\x00\xb0\x14\xa1\xe0\xb2\x31\x6a\x5d\x7b\x57\xab\x14\xcb\x6f\x8d\x64\xdc\x59\x2d\xb8\xdd\x50\x5d\xa1\x89\x45\x2d\xce\xc8\xc0\x3c\xd5\x77\xa5\x2e\xe7\x3e\x41\x15\x58\xc7\xdd\xe9\xb5\x3f\xf6\xc7\xfe\xab\xca\x41\xab\x66\x1e\x9e\xc9\xf9\x31\x3d\x95\x6d\xe7\x4d\xfd\x6f\xd5\x6a\x6b\x43\x9f\x47\xff\x58\xb3\x9e\x66\x41\xde\xc8\x6d\xde\x6d\x46\xca\xd3\xbc\xda\x9b\x4d\xab\x56\xe6\x4f\x00\x00\x00\xff\xff\x55\xab\x4e\xde\xe4\x01\x00\x00")

func assetsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsIndexHtml,
		"assets/index.html",
	)
}

func assetsIndexHtml() (*asset, error) {
	bytes, err := assetsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/index.html", size: 484, mode: os.FileMode(420), modTime: time.Unix(1511579925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesBackSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8e\x41\x4e\xec\x30\x0c\x86\xf7\x39\x85\xe5\x75\xdb\x24\xed\xd3\x13\x83\x9a\x8e\xc4\x82\xdd\xec\xe0\x00\xd1\xd4\x34\x11\x19\xa7\x34\xa1\xe9\xf1\x51\x06\x04\x96\xbd\xf9\x6c\xf9\xfb\xc7\xf3\x71\x0b\xb0\xd3\x96\x7c\x64\x83\xba\x53\x08\xc4\xd7\x38\x7b\x5e\x0c\xbe\xbe\x3c\xb7\x0f\x08\x29\x5b\x9e\x6d\x88\x4c\x06\x39\xe2\x79\x12\x63\xda\x17\x01\x00\xc7\x2d\x70\x32\xe8\x72\x5e\x1f\xa5\x2c\xa5\x74\x65\xe8\xe2\xb6\xc8\x5e\x29\x25\xd3\xbe\x60\xbd\xda\x3d\x95\xa7\x78\x18\x54\xa0\xe0\x5f\xed\x6f\xfc\x67\xd5\x38\x09\x80\x71\xb5\xd9\x41\xca\x5b\x7c\x27\x83\xc5\xf9\x4c\x08\x6f\x3e\x84\xaa\x65\xc2\x9f\x55\x5b\xfc\x9c\x9d\xc1\xe1\x17\x04\xcf\x74\xb5\xab\xc1\xf4\xf1\x69\x37\xba\x7f\xbf\xd7\x6c\xf0\xa2\xff\x37\x5a\x43\x68\x4f\xcd\x09\xea\x5c\x06\xd5\xf4\x0a\x5c\xdb\x0f\x08\x72\x12\x63\xcd\x39\x89\xaf\x00\x00\x00\xff\xff\xad\x09\x57\xb3\x0a\x01\x00\x00")

func assetsImagesBackSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesBackSvg,
		"assets/images/back.svg",
	)
}

func assetsImagesBackSvg() (*asset, error) {
	bytes, err := assetsImagesBackSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/back.svg", size: 266, mode: os.FileMode(420), modTime: time.Unix(1511656400, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesLoaderSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\xcd\x41\x6e\xc3\x20\x14\x04\xd0\x3d\xa7\x18\xfd\x6e\x1d\x03\x69\x5a\xa1\x0a\x88\x7a\x80\x1e\xa2\x0d\x04\xa3\x12\xb0\x0c\x35\x3e\x7e\x65\xc9\x8b\xcc\xec\x66\xf1\x46\x5f\xb7\x47\xc2\xea\x97\x1a\x4b\x36\x24\x47\x41\xf0\xf9\x56\x5c\xcc\xc1\xd0\x5f\xbb\x9f\x14\xe1\x6a\x99\xae\x6b\xc0\xf6\x48\xb9\x1a\x9a\x5a\x9b\x3f\x38\xef\xbd\x8f\xfd\x75\x2c\x4b\xe0\x67\x21\x04\xaf\x6b\x20\x86\x3d\x4f\x9c\x24\xcb\x00\x3d\x7f\xb7\x09\xb5\x2d\xe5\xd7\x1b\x7a\x79\x7f\xfb\xb9\xb9\x0b\x1d\xc3\xa9\x47\xd7\x26\x43\x17\xc2\x3d\xa6\x64\x28\x97\xec\x0f\x09\x80\x33\xf4\x75\x1e\xa4\xc0\xa7\x1a\x14\x04\xe4\x5e\x31\x48\x45\xe0\x96\xe9\xfd\xd6\xb2\xff\x00\x00\x00\xff\xff\x24\x9c\x62\x4d\xc7\x00\x00\x00")

func assetsImagesLoaderSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesLoaderSvg,
		"assets/images/loader.svg",
	)
}

func assetsImagesLoaderSvg() (*asset, error) {
	bytes, err := assetsImagesLoaderSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/loader.svg", size: 199, mode: os.FileMode(420), modTime: time.Unix(1511579925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesMagnetSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x92\xcd\x6e\x5a\x31\x10\x85\xd7\x41\xe2\x1d\x2c\xaf\xc7\x83\x67\xc6\xe3\x9f\x2a\x97\x48\x65\x0b\xab\x3e\x41\x45\x08\x20\xdd\x40\x14\x28\x17\xf1\xf4\x95\x7d\x41\xa5\xbb\x23\x7b\x3c\xe7\x3b\x47\x7e\x7d\xbb\x7e\xf6\xe6\xb2\xf9\x3e\xed\x8f\x87\xce\x12\x7a\x6b\x36\x87\xf5\xf1\x7d\x7f\xd8\x76\xf6\xcf\xf9\xc3\x65\xfb\x36\x9f\x4e\x5e\x4f\x97\xed\xf3\x18\x59\x73\xfd\xec\x0f\xa7\xce\xee\xce\xe7\xaf\x1f\xb3\xd9\x30\x0c\x38\x08\x1e\xbf\xb7\x33\xf6\xde\xcf\x4e\x97\xad\x35\x97\xfd\x66\xf8\x79\xbc\x76\xd6\x1b\x6f\x72\x36\x39\xdb\xf9\x74\xf2\xf2\xfa\xf5\xfb\xbc\x33\x1f\xfb\xbe\xef\xec\xb0\xdb\x9f\x37\xd6\xbc\x77\x76\xa5\x01\x33\x33\x64\x41\x2e\x69\xed\x3c\x52\x10\x20\xd4\xa0\x40\xe8\x73\x00\xc6\x42\x19\x18\x13\x27\x10\xf4\xaa\x3d\x15\x2c\x1c\x81\x30\x4a\x9a\x4e\x5e\x5e\xd6\x84\x31\x08\x78\x24\xc9\x20\x48\x5e\x1d\xa1\xa7\xaa\x59\x1d\xa3\x46\xee\x09\x55\xd5\x51\xc4\x20\xdc\x3b\x56\x2c\x8e\x91\x84\x97\xff\xf9\xdf\xcc\x4a\x31\x31\x41\xcc\x58\x8a\xb6\x57\x09\xc6\x57\xcd\xe9\x1f\x5e\xa8\xfe\x3e\x55\xb0\xe6\x03\x77\x9f\xc6\xe6\x1a\x5b\xe5\x92\x52\x23\x49\x9d\xcb\x31\x39\x42\xa5\x31\x8b\x1b\xb3\xb8\x66\x31\x82\x85\xe5\xb3\xf9\xcd\xac\x04\x49\x03\x04\xc2\x42\x52\xed\x97\x01\x53\x04\xcd\x98\x63\xe8\x6b\x06\xcf\x2d\x05\x2d\xb9\xa0\xd7\x04\x52\x30\x2f\xaa\xe6\x2a\xa5\x08\x70\x01\xc9\x58\x12\xdd\x95\xaa\xae\xbd\x4b\x98\x52\x82\x88\x89\x8b\xa3\x50\x1b\x03\xd2\xbb\x3a\x91\x42\x44\xe1\x02\xa4\x30\x1e\x8d\xd1\xc1\x63\xa0\xe8\x7c\xdd\xee\x31\x4b\xae\xb2\xd6\x83\x1c\x62\x0d\x12\xeb\x9a\x88\x45\xf8\x0e\x07\x0d\xae\x6f\x37\x35\x62\x51\x5a\xe4\x80\x25\x24\x08\x1e\x53\x11\xc8\x5a\x41\x63\x2c\x4d\x35\xbc\x6a\xb6\xc8\x0a\x94\x90\x4b\x80\x18\x5b\xcd\x1e\x42\x00\xff\x4b\x1e\xc7\x72\x9f\x5e\xc8\x63\x41\xed\x53\x1e\x7b\x9f\x9b\xbb\xd9\x59\xfd\xcb\xf5\x73\xce\xa7\x93\xbf\x01\x00\x00\xff\xff\x19\xfb\x2d\xa3\xfc\x02\x00\x00")

func assetsImagesMagnetSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesMagnetSvg,
		"assets/images/magnet.svg",
	)
}

func assetsImagesMagnetSvg() (*asset, error) {
	bytes, err := assetsImagesMagnetSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/magnet.svg", size: 764, mode: os.FileMode(420), modTime: time.Unix(1511654043, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesPauseSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\x4d\x6f\xe2\x30\x10\x3d\x83\xc4\x7f\xb0\xbc\x57\x67\x32\x63\x8f\xbf\x2a\x42\xa5\xe5\xd2\xcb\x5e\xf7\xbe\x0a\x14\xd0\x52\xa8\x0a\x0b\x68\x7f\x7d\xe5\x0f\x68\x2a\x21\x12\xc9\xb1\x33\xe3\x37\x6f\xde\xb3\xa7\xcf\x97\xb7\xad\x38\x2d\x3f\x0e\x9b\xfd\xae\x93\x04\x28\xc5\x72\xd7\xef\x17\x9b\xdd\xaa\x93\xff\x8e\xaf\x4d\x90\xe2\x79\x36\x19\x4f\x0f\xa7\xd5\x30\x8f\xa4\xb8\xbc\x6d\x77\x87\x4e\xae\x8f\xc7\xf7\xa7\xb6\x3d\x9f\xcf\x70\x36\xb0\xff\x58\xb5\x1a\x11\xdb\xc3\x69\x55\x53\x9e\x2e\xdb\xcd\xee\xef\xbd\x44\x8a\x31\xb6\x39\x2a\x27\xe3\x91\x10\xe2\xb4\x59\x9e\x7f\xee\x2f\x9d\x44\x81\x82\x4d\x00\x6b\xdc\xf5\x2b\x67\x93\xf1\x68\xfa\xfe\xe7\xb8\x16\xaf\x9b\xed\xb6\x93\x3f\x16\x36\xbd\x52\x2c\x3a\xf9\x8b\x1c\x03\x5b\xa3\xf0\x85\x02\x68\xef\xe6\x64\xc0\x68\x56\xa8\x22\x20\x93\x22\x08\xe8\x95\x05\xd6\x36\x8f\x3c\x4f\x7f\x42\x8e\x2a\x04\x44\x52\x79\x87\xbe\x2e\x12\x0a\x9d\x18\x09\x62\xa4\xc9\x78\x94\xe8\xdd\x79\x7a\x54\x0c\x91\x43\x2d\x10\x41\x1b\x53\x0a\x28\xd2\x10\xd8\xf7\x06\x1c\x45\x95\x46\xaf\x3c\x44\xd4\x39\x1c\x72\xd8\x52\x59\xac\x89\x1d\x50\xa0\x3e\x61\xc5\x4c\x5a\x1b\x6a\x08\x02\x51\xc5\x69\x72\xe2\x03\x22\xb9\x42\x93\xc6\x4a\xa0\xf1\x10\x62\xa8\xf3\x02\xf2\xbb\xb4\xd5\x63\xc3\x10\xad\x6e\x32\xe9\xa6\x14\xcb\xf8\x35\x6f\x4e\xde\x80\x0b\xb6\x76\x45\x2e\x02\xa3\x56\xa8\x6e\x32\xff\x97\xed\x43\x3f\xd8\x18\xa0\x2b\x93\x39\xeb\x08\x1c\x5d\x85\x63\x6d\x41\x93\x55\xa8\x58\x23\x68\xe7\x15\xbe\x68\xcf\x80\xc1\xf5\x4d\x55\x20\x93\xf2\x65\x43\x25\x55\xb0\x1e\x28\x90\x9a\xd7\x94\xa5\xb6\xa9\x1d\xa3\x55\x96\xa0\xce\x0b\xca\xd5\xd2\xa1\x71\x44\x5f\xc6\xdd\x12\x93\xa0\xf8\x65\x5c\x88\x7e\x60\x5c\x65\x73\x33\xee\x01\xab\x52\x25\x5b\xaa\xe3\x1d\x4b\xb3\x71\x3c\x30\x8e\x06\xc6\xd1\x77\xe3\xe6\xe5\x2e\x70\x3e\xab\x14\x15\x1b\x07\xde\x94\x43\xfc\x4d\xf1\x62\xcf\x34\xdd\xc2\xd9\x64\xfc\x19\x00\x00\xff\xff\x95\x2f\x32\x11\xe6\x03\x00\x00")

func assetsImagesPauseSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesPauseSvg,
		"assets/images/pause.svg",
	)
}

func assetsImagesPauseSvg() (*asset, error) {
	bytes, err := assetsImagesPauseSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/pause.svg", size: 998, mode: os.FileMode(420), modTime: time.Unix(1511645360, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesPlaySvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x51\xcb\x6a\xc3\x30\x10\x3c\xc7\xe0\x7f\x10\xea\x55\x5e\xaf\xb4\xf2\x4a\x2a\x71\x02\xcd\xb9\xa7\x7e\x41\x71\x12\xc7\xe0\xd8\x21\x76\xed\xd0\xaf\x2f\x72\xd3\x17\x74\x05\xd2\x32\xcc\x8e\x34\xa3\xf5\xf6\x76\x6e\xc5\x74\xb8\x0e\x4d\xdf\x95\x52\x03\x4a\x71\xe8\xaa\x7e\xdf\x74\x75\x29\xdf\xc6\x63\xe6\xa5\xd8\x6e\xd2\x64\x3d\x4c\xf5\x6f\x9e\x96\x69\xb2\x12\x42\xdc\xce\x6d\x37\x94\xf2\x34\x8e\x97\xc7\x3c\x9f\xe7\x19\x66\x82\xfe\x5a\xe7\x06\x11\xf3\x61\xaa\xef\xbc\xa9\x39\xcc\x4f\xfd\xad\x94\x28\x50\x58\x0d\x21\x84\xfb\x21\x37\x69\xb2\x5a\x5f\x5e\xc7\x93\x38\x36\x6d\x5b\xca\x87\x7d\x11\x97\x14\xfb\x52\x3e\x13\x03\xb2\x57\x06\x41\x3b\x6e\x33\x13\x32\x83\x3b\x06\xc7\x3a\x43\x40\x2a\x14\x03\x31\xc5\xbe\x70\x8a\x17\x04\x41\x6b\xbb\x2b\xc0\x21\x2b\x04\xe3\x9d\x2a\x20\xa2\x6c\xbe\xba\x10\xc2\x64\x31\x4d\x56\x3f\x25\x84\x10\x15\x2a\x04\x72\x26\x4e\x2d\xb3\x4e\x93\x42\x28\x16\x4d\xef\xb9\x42\xd0\x36\xe2\xe8\xe2\x4e\x0b\x47\x6b\xab\x10\x2c\xdf\xef\x8d\x9c\x10\xd4\xa2\x14\x5c\x7c\x57\x24\x15\xec\xb3\xe8\xc0\xb5\x8b\x81\xcf\x48\xfe\xad\x0a\xc1\xb8\xe8\x4d\x7b\x17\x75\xc9\x64\x08\x36\xd8\xef\xde\x1b\x7a\x21\x06\xa2\x25\x14\x62\x52\x7f\x22\x7a\x97\x22\x8f\xdf\x15\xa3\xdf\xa4\xc9\x47\x00\x00\x00\xff\xff\x81\xc0\x9e\x0d\xe0\x01\x00\x00")

func assetsImagesPlaySvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesPlaySvg,
		"assets/images/play.svg",
	)
}

func assetsImagesPlaySvg() (*asset, error) {
	bytes, err := assetsImagesPlaySvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/play.svg", size: 480, mode: os.FileMode(420), modTime: time.Unix(1511641898, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsScriptScriptJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x3b\xfd\x73\xdb\xb8\x8e\xbf\xe7\xaf\xc0\x7a\xe7\x2a\x79\xeb\xa8\xc9\xbe\x7d\x77\x37\xee\xfa\x3a\xf9\xea\x6b\xee\xa5\x4d\x27\x49\xef\x66\xa7\xd3\xe9\x50\x12\x1c\xab\xa1\x45\x2f\x45\x37\xf1\xe6\xf9\x7f\x7f\xc3\x2f\x89\xa4\xe4\x8f\x6c\xd3\xdd\xed\x2f\x4d\x4d\x91\x00\x08\x80\x00\x08\x80\x19\x25\x55\x05\x87\x64\x71\x5a\x8e\x19\xe0\x9d\xc0\x32\xaf\xe0\x02\x49\x26\x92\x23\x36\x9d\xb1\x12\x4b\x01\xf7\x3b\x00\x19\x2b\x2b\xc1\xe7\x99\x60\x3c\x9e\x71\x36\xab\xfa\x6a\x18\xa0\x9a\xcf\xd0\x0e\x3d\x57\x23\x62\x52\x54\x49\x25\x88\x40\x18\x99\x49\x00\x94\x91\xbc\x28\xaf\x87\x20\xf8\x1c\x07\x66\x10\x39\x67\x7c\x08\xe5\x9c\x52\x3b\x54\x94\x63\xa6\x47\xd4\xc0\xd2\x01\xf9\x91\x32\x76\x33\x9f\xc1\x48\x7d\x96\x1f\x96\x3b\x8a\x32\x43\xe7\xff\x17\x94\xbe\x66\xf3\x52\xc4\x96\xb6\x70\x19\xde\xca\xbd\x9e\xa9\xdf\xb1\xfa\xa8\xe8\x4e\x8a\x7c\xa0\xe7\xa6\x64\x71\x44\x28\x4d\x49\x76\x93\xa4\x45\x99\xab\x49\xfd\x7e\x37\xae\x77\xe5\x74\x25\xb6\x24\x23\x65\x86\x34\x6e\x96\x72\x2c\x73\xe4\xf5\xe4\x62\x0c\x71\xc3\xa8\xc4\xb0\xa7\x5f\xf3\x8b\xa3\x98\xf3\xd2\x88\x22\xe3\x48\x04\x9e\x50\x9c\x62\x29\xe2\x33\x46\x72\xe4\x6f\x49\x89\x03\xc5\x09\xc3\xf6\x25\x20\xad\x30\x04\xac\x58\xbc\x15\x58\x33\x03\xa0\x97\x17\x9f\x7b\x83\xfa\xe7\x3d\x28\x2d\x79\x43\xa6\x38\x84\x9e\x82\xb7\x3b\x23\x25\xf6\x60\xd9\x4c\x0a\x31\x9a\x0f\x3e\x69\x8f\x46\x44\x4a\x16\xbb\x52\x51\x3c\x12\xd6\x82\x03\xe8\x51\x92\x22\x75\x40\xae\x02\xba\x5b\x92\xa9\xbf\x39\x6f\x7b\x72\x4a\x22\xa7\xd4\x9f\xfb\x5f\x81\x86\x0a\x31\x47\x5e\x6d\x20\xc3\xcc\xfa\xaa\x94\x50\xc4\x6c\xb2\x99\x14\x3b\xed\xf7\xd0\x92\xce\x85\x60\xe5\x36\xc4\x90\x3c\xdf\xed\x98\x0d\xc0\xca\x23\x5a\x64\x37\x43\x88\xfb\x30\xfa\x1f\x70\xce\x36\x2b\x0f\xf2\x3c\x0e\xc9\x9d\x92\xeb\x12\xc5\xbb\x8b\xb3\xbe\xbf\xad\xde\x41\x9e\xc3\x15\xe3\x1c\x4b\xd1\x6b\xf6\x12\xa8\xb3\x3d\xd3\x8e\xb9\x88\x95\xda\x0f\x94\xfd\xf2\x0c\x42\x85\xe2\x52\xe2\x8d\xef\x1b\x1b\x38\x26\xb4\xc2\x81\x35\x7f\xce\xca\xa1\xfa\x17\x96\xc6\x6c\x2c\x77\x94\xd9\x85\x8b\x93\x97\x17\x27\x97\xaf\x3e\x9e\xbe\xb9\x3a\xb9\xf8\xbf\x83\x33\x18\xc1\xdf\xf7\xf6\xf6\x9e\x9b\xcf\x87\x07\xbf\x7c\xbc\x3c\x39\xb8\x38\x7a\xf5\xf1\xf8\xe4\xec\xe0\x17\x18\xc1\xbe\xfa\xbc\xa3\xed\xbb\xd9\xcf\x11\x2d\xba\xac\xb9\x47\x2d\x2b\x8f\x26\xa4\xbc\x96\x96\x5b\x73\x52\x91\xfa\x7c\xc7\x31\x70\x39\xbb\x2d\xe5\x4e\x2a\xc7\x10\xdb\x6f\xd7\x28\x44\x51\x5e\x9f\x15\x95\x80\x91\x5d\xeb\x7d\x96\x9f\xa4\x55\xd4\xbe\x03\xc5\x69\x29\x90\x7f\x26\x34\x76\x04\xd7\xcc\x1b\xb4\xb6\xde\x18\xd4\x9a\x0e\xcf\xa6\x7e\x17\x10\xd9\x32\x7d\x0d\xc9\xcb\x1d\x67\x38\x58\x96\x4c\xc9\x2c\x66\xe9\x27\x49\xd3\x79\xfa\x09\x33\x91\x90\xaa\x2a\xae\xcb\xf8\x7e\x39\x00\x96\x7e\x72\x9c\x42\x8e\x14\x05\x1a\x26\xc7\x13\x52\x4d\x7c\x8f\x20\x0c\xfb\x09\xa5\x71\xa4\x27\x47\x03\x50\xf3\x6a\x18\x95\x20\x5c\x6c\x09\x42\xcd\xed\x80\xc0\x66\x5b\x03\x60\xb3\xd6\x7a\x92\xe7\x76\xb9\x73\x38\x34\x8c\x8f\x19\xa1\xf4\x90\x64\x37\x58\xe6\x07\x6f\x4f\xe3\xe8\x19\x99\x15\xcf\x48\x9e\xbf\x98\x73\x3a\x8a\xe0\x29\x60\x99\xb1\x1c\xdf\x5d\x9c\xd6\x51\x83\x03\xa5\x41\xd2\x48\x36\x74\x83\x9e\xea\xfc\xeb\x5f\x86\x6c\x92\x89\x82\x95\xd5\x5b\x2c\xe5\xc1\x89\xfb\xa1\x34\x5d\x41\x76\x69\xa0\x0c\x36\x9e\xaf\xd9\x42\x2d\xef\xa8\x9f\x88\x09\x96\x71\x4e\x04\x91\x32\xb7\x68\x36\xa8\xb5\xbb\x81\xd5\xb4\xfa\xd4\x5a\x7a\xbb\xce\x93\x44\xaf\x54\xef\xce\x25\x02\xe0\x2e\x91\xd0\x3f\xcb\x63\x79\x67\x42\xab\xef\x46\xb0\xf7\x3c\x98\xc0\x4a\x83\x3d\xa4\xb2\x56\xf3\xbb\x9a\x86\xbe\xfd\x5f\x85\xe2\xaa\x98\x22\x9b\x8b\xd8\x33\x01\x03\xd8\xb3\xf6\xae\x9f\x64\x44\x64\x93\x18\x1f\xc4\x9a\x67\xcf\xe0\xea\xfc\xf8\x7c\x08\x53\xb2\x48\x11\x26\xa4\xcc\x29\x6a\x6b\x07\x13\xe4\x98\x24\x89\x99\x29\xcd\x11\xa3\x98\x08\x4e\x32\x8c\xb1\x46\xdb\xe8\x4d\xc8\x5c\x43\x45\xf7\xe1\x85\x27\x4f\x5a\xe7\x79\x2c\xa3\x39\xc5\xd5\x80\x55\x0e\x12\xf7\x90\x48\x75\x31\x47\xc4\xe0\x1a\x33\x0e\x31\x45\x01\x05\x48\xd6\x43\x01\x3f\xb7\xb0\x50\x2c\xaf\xc5\xe4\x39\x3c\x7d\x5a\x34\xe2\x97\x6b\x72\x2a\xb5\xd1\x9f\xfd\xbe\xf8\xe0\x6a\x51\x4e\x13\x89\x0e\x46\x23\x85\x56\x6e\xe2\xbb\x9c\x06\xc4\x3a\x3a\x11\x7e\xf3\xd4\x7d\xb5\xca\xcb\xd3\x2a\x3f\xc0\x53\x88\x5e\x48\x44\xab\xce\xaf\xda\xbb\x39\x16\xda\x38\xdf\x3b\x8e\xb2\x03\x7b\xa0\x71\xdb\x68\x56\xa0\x49\xd6\x39\xd8\x0f\xb5\xe2\xfd\x1e\xfc\x8d\x86\x2f\x1d\xaf\xbd\xb4\x4e\xf1\x90\x2c\x2e\x91\xf0\x6c\xd2\x72\x88\xbf\xce\x91\x2f\x06\x90\xa5\x9e\x09\x55\xa3\x30\x02\xf5\xd7\x75\x6a\x59\x0a\x23\xc8\x52\x3d\xf4\xec\x19\x1c\x23\x25\x0b\x10\x13\x04\x8e\xbf\xce\xb1\x12\x50\x31\x10\x13\x22\xe0\x16\x21\x67\x65\x24\xa0\x9a\x91\xa9\x9a\x91\x92\x85\x5d\x76\x3b\x29\x28\xaa\xc1\x79\x85\x1c\xc4\x62\x86\x15\xb0\xb9\x00\x02\x95\xa6\x53\x61\x4e\x5c\xcc\x84\x52\xc3\x60\x18\xb9\xdc\xf6\xd9\xd5\x35\xb9\xf1\x82\xab\xf4\x24\x25\x0b\x8d\xf7\x85\xc2\xbb\x4a\x4b\xd4\x47\xab\x26\xc6\x61\xde\xfb\xd7\x82\x8f\x59\x1a\xab\x2b\x9e\xf2\x9b\x8d\x01\xb2\x46\x85\xf3\x15\x8b\x90\x73\xef\x86\xd3\xc8\x74\x39\x68\x05\x3d\xce\x25\xcd\x5c\xbd\x5a\x2e\xc6\x61\x41\x73\x90\x32\x8a\x84\x7b\x6a\xea\xcd\x6b\x7b\x18\x25\xef\xf8\x6e\x00\x0b\xc5\xe5\xe6\x2e\x5a\xab\xd6\x91\x22\x80\xa4\x14\xa5\x29\x69\xe9\xd7\x9c\xd3\x96\x76\xf9\x5a\x14\x4a\x64\xce\x69\x37\x87\x57\xf2\x77\x15\x77\x57\xf2\x76\xb9\x92\x7f\xdb\xee\xba\xbe\x59\xd7\x79\x84\x0d\x7c\x90\xb7\xee\x86\x0d\x3a\x8f\x50\xeb\x9e\xbe\x46\xbf\x28\xf2\x55\x8a\x57\xe4\x7d\xb5\x3c\xa0\x42\x9a\x90\x97\x05\xc5\x6a\x5b\x2a\xa4\x99\x5b\x45\xc7\x58\x02\xda\x6c\x24\x7d\x3a\xc6\xf3\x52\x19\xa6\x4e\x29\x2a\x24\xc6\x6b\x8d\x51\x0a\xa8\x91\x2d\xc7\x6a\xd6\xc8\x4a\x05\xb3\x72\x28\x61\x37\xad\x20\xf6\x2d\x67\xd3\xa2\xc2\x84\xa3\x0c\x4d\xe3\x12\x6f\xe1\x44\xfa\xd5\x38\xb2\x36\x67\x4c\x0a\x8a\x79\xd4\xef\x77\xc4\xba\x0a\xea\xa7\x8a\x95\x26\x3d\xd1\xa5\x5b\x12\x3d\x4b\x3f\x49\x97\x74\x7e\x5b\xbe\xe5\x6c\x86\x5c\x2c\xe2\x48\xb9\xef\xa8\x15\x88\x85\x14\xb1\xf4\xd3\x7b\x33\xf7\x43\x17\x09\x1f\x29\xbb\x45\x9e\x91\x0a\xcf\xd3\x4f\xb1\xd5\x5b\xa9\x84\x1e\x07\x5b\xb3\x14\x5a\x49\xdb\x01\xe7\x64\x91\x14\x95\xfa\xab\x3e\x05\x31\x81\x24\x5e\x46\x52\x1e\x0c\x23\x25\xed\x93\x39\x56\x73\x2a\x8d\xe1\xbd\xca\x32\x99\x30\xff\x06\x17\x95\x82\x97\x8c\x19\x3f\x21\xd9\x24\xbe\xf1\xb9\x72\x23\x3d\x74\x74\x7a\x1c\xb9\x3c\x90\x90\x92\x22\x87\x91\xc4\xfb\xfe\xe6\xc3\x8a\xbc\x87\x9c\xf6\xfe\xe6\xfd\xde\x87\x44\xb0\x33\x49\xd7\x11\xa9\x30\xee\xc3\x53\xb8\x49\xaa\x79\x5a\x09\x1e\xef\xf7\x3f\x84\x50\x76\xec\xf1\x6c\xe4\x37\xa7\x42\xb2\x4a\xeb\xfc\xb1\x89\x28\x1e\x94\xc4\xf3\xf5\xbd\x33\x75\x07\x4a\xff\xcf\xbc\xcc\x9d\x1e\x3b\x71\x12\x77\x7a\x44\xff\xf0\xf2\x75\x72\xfc\x02\x7f\x7d\x68\xbe\xce\x59\x86\xb7\xcd\x79\x76\xf3\x75\x36\x84\x4a\xf4\xe1\xad\x97\x55\x5f\x98\xbc\x33\xa8\x37\x26\xef\xf4\xb5\xbb\x89\xe9\x7c\xaa\x9e\xbb\x6a\xb8\x26\xf7\xe1\xa5\xb8\xfc\x84\x87\x05\x15\x66\xb9\xd6\xa7\xcc\x84\x34\x72\x2b\x93\x66\x1e\xcc\x5d\x3d\xf7\x21\xf9\x33\x91\xb2\x7c\xe1\xa5\x5d\xdc\xbc\xed\x16\x10\x24\x0c\x1e\xe4\x6d\x42\x10\x5b\x00\x91\x60\xf2\x00\x4c\x17\x20\x80\x9e\xdc\x79\xcf\x1b\xec\x7f\x35\x64\x39\xf5\xb3\x82\xe0\xe4\x8d\x5a\x98\xff\x72\x9c\x7a\xcb\xd9\x35\xc7\xaa\xfa\xa3\xb8\x15\xef\xef\xed\xc1\x0f\x92\x69\xf2\x54\x52\x14\x98\x1f\x2e\x04\x56\xf0\x4c\x8e\x55\xc5\x6f\xa8\x7e\xf6\x13\xc1\x5e\x16\x77\x98\xc7\x3f\x4a\x23\x19\xfd\x47\xf4\x8d\xf2\xf7\xb2\xf8\xed\x0f\xd3\xc4\x31\xe3\x53\x22\x24\xc6\xd8\xe3\xe5\x37\xca\xba\x23\xab\x20\x7f\x0e\xff\x7c\xfd\xfc\x56\x99\x78\x7c\x06\x17\x44\xfc\xc1\x2a\x28\x31\x4a\x16\x5a\xcf\x23\x7f\x7f\xab\x0c\x7c\xf7\x67\x32\x70\x3e\xfb\xe6\xd9\xa7\x76\xf0\x67\x9d\x61\xcd\xbf\x2b\x26\x08\x5d\xc3\xc0\x9d\xf0\x7f\xfd\xed\xc2\xae\x35\x95\xca\xa8\x0e\xba\x4c\x02\x53\x5e\x23\xe3\x56\xee\xea\x05\x44\x75\x39\x63\x77\xcc\xd9\x6f\x58\x46\x30\x84\x28\xf2\xaa\x53\x66\xd9\x67\x84\x17\x5f\x5e\x52\x0b\x08\xab\xab\x6a\x4d\x25\xcd\xab\xa1\x5d\x0a\x36\x0b\x2a\x65\x72\xc8\x29\x91\xc1\xf0\x4f\x20\x8a\x70\xd1\xa2\x8a\x70\xb7\x72\xf7\x88\x55\xc8\x9a\x3a\x5d\xc3\xd9\x44\xdd\xb1\x9a\x15\x90\xa7\x07\x3b\x2a\x8b\x76\x56\x73\x97\xb1\x34\xea\x29\xcd\x5d\xc4\xff\xd8\xdd\x4e\xa0\xe6\x3c\x62\xd5\xbf\x51\x4e\x09\x78\x55\xe5\x5f\x7d\x6c\xca\x17\x9b\x18\x4e\x02\x5e\xdf\xe0\x62\x08\x77\x09\x2d\xca\x9b\x01\x4c\x38\x8e\xed\x2f\x9f\x87\x77\xc9\x8c\x88\x49\xc3\xc1\xb0\x38\xdb\xd9\x06\xd1\xdc\x5a\xbf\x1a\x57\x76\x55\xba\x63\x2d\x6f\x4e\xbe\x7e\x6b\x44\x40\x93\x29\x39\x6f\xbc\xe8\xe9\x9e\x12\x93\x11\x0c\x28\xf4\x14\x2f\xac\x77\x7b\x9a\x16\x16\xbc\xfd\xfc\x81\xa9\x7a\xbb\x09\x04\x17\xc8\x50\xff\x71\x8a\xdf\x4d\x22\xc8\x31\xe7\xa9\x0a\xc3\x9a\x74\x06\x54\xf3\xf1\xb8\xb8\xc3\x0a\x46\xf0\x3e\x82\x7f\x1e\x46\x03\x88\xe0\xb5\xfe\xf3\x0f\xfd\xe7\xea\x30\x52\xb9\x94\xae\x12\x8e\x5d\xde\x55\xbb\x71\x11\xc0\xa8\x9e\x5a\x17\x6e\xcc\xf7\xe2\x37\x84\x11\xa4\xe6\xfe\xf2\x9a\x88\x49\x32\x63\xb7\xf1\xfe\xde\x00\xfe\x06\x3f\x40\x5c\xc0\x53\xd8\xb7\x99\x38\xa9\x98\x6a\xc5\xcf\xb0\xbf\xd7\x52\x46\xf9\xc5\xbf\xf3\x68\xa4\x2d\xdd\xae\x41\x6c\x80\xb1\xbf\x15\x8c\x36\x10\xb5\x0b\xce\xe6\x65\xae\xa6\xb5\xa0\x98\x3c\x9a\x99\xad\xf7\xfe\x14\x22\xfd\xbf\xe8\x79\x87\xf4\x54\x30\xc3\x65\x0c\xe3\x25\x41\x1b\xc9\xea\x6f\x4f\x21\x7a\x56\x61\xa6\x40\xd4\x10\x6c\x86\x4b\x15\x88\x9c\xf6\x33\xb9\x0b\x3f\xf9\x62\xe5\x08\xa3\xd1\x08\xf6\x82\x9c\xe0\xf6\xc9\x98\x22\x1f\x42\xaf\x64\xbb\x35\xd8\xad\x93\x30\x93\x7d\xe7\x6c\xfa\xa1\x49\xef\x0d\xab\x77\x52\xdf\xb4\x3d\xf3\xae\x13\x93\x54\x17\x53\xc3\x8d\x49\xc3\x9a\xd3\x26\x19\xb9\x66\x53\x16\xcb\x49\x29\xf8\x62\x00\xf7\x75\x74\x31\x84\xbc\x26\x48\xd9\x5b\x53\x75\xb4\x63\x41\x1f\x8d\xf5\x65\x6a\xd0\x56\x28\xfb\xf6\x88\xf6\x13\x8e\x9f\x91\x57\x18\xbb\xd9\xc9\x95\xec\xe9\x31\xdb\x70\x64\xf8\xdb\x66\xae\xdc\xf9\x8e\xe2\x86\xab\x3f\xde\x6e\x5c\xf1\x3b\x79\xb8\x76\x0a\x6e\x23\x39\xb4\xa8\xc9\xe9\x0a\xd9\x54\xa8\xa6\xc1\x6e\x1b\xad\xb5\xb8\xe8\xf1\xcf\x6e\x72\x9d\x16\xfa\x6d\x59\x2b\x4c\x7b\xd0\xa0\xe6\x66\x9e\xfa\xab\x51\x18\x3b\x7c\x48\xb8\x54\x88\x99\x49\xf8\x0c\x37\xe6\x60\x06\x90\x31\x2a\x8d\xb5\xc5\xaf\x7d\xc5\x91\x1c\x8c\x73\x2a\xb5\xc1\x8a\xac\x96\x98\x9e\xe2\x8a\x6a\xa3\x34\x9a\xf3\xe7\xef\x5a\xdd\x1b\x1a\xb7\xda\x33\xdb\xe8\xb5\xd5\xa4\xe9\x8b\x7c\x44\xc4\x7e\xab\xe3\x36\xae\xb3\x83\x2a\xcd\xf6\xb6\xe6\x56\x62\x41\x9b\x26\xd9\xdb\x22\x17\x93\xa1\xd5\x39\x2b\x20\xf8\x41\x19\xf9\xda\xa0\xff\xcd\x24\xc2\x34\x41\xd2\x15\x5f\x2b\x33\x7d\xa4\x85\xa4\x17\x2b\x89\xed\x98\xf6\xd9\x2f\xe2\x40\x51\x5e\xef\xa6\x84\xaf\xe5\x80\x06\xb0\x7a\xb1\x8c\x45\x28\xf2\xde\x40\x6f\x78\x68\xf6\xbd\xec\xe0\xd6\x2a\x1d\xb3\xc6\xbe\xad\xac\x3f\xfb\x09\x43\x27\x1e\xae\xef\x4b\x2d\xe7\x16\x7d\xff\x9f\x7f\x4f\xb3\xfc\xa7\x68\x5d\x0c\x16\x7d\x3f\xc6\xf4\xa7\x74\x3f\xea\xf4\x78\xd1\xf7\xe4\xbf\xf0\xa7\xff\x4e\x95\x9f\xd2\xd2\xbc\xbc\x3a\xb8\x3a\xf9\xf8\xcf\x93\x5f\x2e\x55\x28\x92\xcd\x55\x37\x89\x6e\x32\x90\x61\x88\x19\xb0\xd6\xec\x15\xa9\xdc\xe1\x43\xb2\x38\x3d\x96\x61\x8a\x29\xea\x5c\x30\x26\x1e\xb1\x98\x53\x94\x85\x28\x08\x55\x91\xd9\x4b\xce\xa6\x12\xbb\x9d\x78\x5b\x94\x39\xbb\x4d\x58\x39\x63\x33\x3b\xdf\x69\xc7\xd3\x8d\x3b\x6f\xd9\x4c\x87\x75\x2e\xf4\x4c\xb7\x14\x3e\xb0\xc2\xd3\xac\xc2\x5b\xbf\x39\xb1\x03\x78\xbb\x25\x31\x8c\x32\x6b\x37\x32\xf4\xd6\xb9\xfd\x81\x4e\x75\x3b\xdc\x4d\x67\xe8\xca\x19\x13\x01\xab\x9c\x3a\x92\x22\x47\xcb\xd5\xf4\x3f\xf8\xf1\xa2\x5c\x78\x9e\x7e\xaa\x2b\x8b\xe0\xa8\x86\x5f\x55\xb4\x53\xdf\xdf\x7c\xb0\xb5\x24\x35\xf4\xfe\xc6\x56\x4d\xed\x8c\xc4\x53\x27\xbf\x0f\x25\xb8\xeb\xf8\x33\x9f\x3c\x01\x8f\x46\x80\x49\x51\x09\xc6\x17\x09\xc7\x19\x25\x19\x1a\x36\x2e\x07\x56\x0f\x44\x21\x28\x0e\x20\xfa\x5e\x7a\xc0\xff\xbd\x3c\x7f\x93\x54\x82\x17\xe5\x75\x31\x5e\xc4\x96\x9c\x7e\xf7\xf5\xc5\x82\x9e\xcd\xab\xc9\x97\xc1\xed\xbc\x4f\x78\x3b\x1b\xea\x7d\xb9\xb2\xad\x26\xec\xd6\x1e\x2f\xaf\x09\x52\x0b\x66\x3e\xcb\x6d\x65\xb3\xe3\x2c\x0e\x75\xdb\x95\x5b\xc1\x94\xdb\x78\xa5\xb7\xa4\x49\xd0\x10\xbc\xf3\x65\xa9\xf3\xbb\x44\x71\x3a\x13\x66\x4d\x7f\x60\x10\xf7\x7d\x42\x0f\xc9\x22\x2e\xf2\x4d\x14\x2a\xb3\x30\x84\x22\xff\x63\x08\xc3\xbb\x42\x28\x0f\xda\x7d\x2e\xdc\xd5\xfd\x75\xf4\xdc\x2f\xb7\xee\x8f\xb5\xc7\xb5\x3d\xcb\x41\xd0\xd0\xe5\x36\xac\xbe\xbb\x38\x0b\x6a\xb2\x73\x6e\x82\xc1\xe9\x4c\xc4\xd1\x6b\xd5\x82\x0a\xef\x2e\xce\x22\xe7\xf6\x55\xf7\x61\x84\x24\x38\x2d\xb0\x72\x4e\x70\xfd\x25\x79\x2e\xad\x81\x14\x9b\x03\x61\xe3\xfa\x55\xe4\xb7\x58\xa6\x8e\x80\x05\xfb\x65\x07\xa9\xbf\xa1\x72\x9d\x91\xf2\xe4\xae\x10\x9e\xc9\x09\xcc\x86\x6d\xc1\xf5\xbe\xb9\xc7\xa5\x7b\x86\x52\xd7\xdf\x55\x00\x77\xaf\x4a\x9a\xa9\xac\x14\x58\x1a\xb6\xad\xbb\x7b\x5d\xb1\x99\x09\x6a\x2b\x63\x18\x56\xed\xaa\xb9\x8a\x19\x0e\x0c\xed\x7f\x9a\x2f\xcc\x7c\x70\x7c\x4d\x23\x3d\x77\x9a\x06\xa9\x7d\xd3\x10\xaa\x7a\xb6\xe7\x1e\x2a\xe9\x7b\xb6\xbb\x38\xb6\xf2\x8f\xe6\x96\xe4\xbe\x79\xe8\x7c\xe7\x50\x1f\x04\x27\xc7\xd3\xf5\x8e\x21\x4c\x24\x7a\x0c\x6e\xb5\xd0\x6b\xf6\xad\xee\xa3\x7f\xc8\xcb\xa4\x75\x0e\x6a\x2b\xc0\x46\x7c\xd0\x76\xf6\x01\x99\x0d\x07\x94\x73\xd8\x46\x15\x0c\x4b\x8f\xeb\x1b\xb2\xee\xc2\xb5\x71\x46\xcb\xa5\xb4\x56\x1e\x92\x85\x32\xd0\xee\x12\x6b\xdc\x97\x6b\xb3\x92\x1d\xc7\xca\x69\x4c\x54\x47\xb5\x6e\x52\xea\xda\xad\xd3\xd5\x1c\xf6\x9a\xc3\x9d\xed\x26\xee\x3a\xe4\x2e\xc6\x76\x47\xb8\xa4\x52\xe3\x6d\xf7\xb0\xaf\x4d\x37\x9c\x96\x63\xe6\x67\x1b\x34\x18\x37\x7d\x6b\xd2\xf6\x9e\x06\x1b\xfb\xe9\x3d\x82\x30\x3d\x55\x01\xcb\xf5\x7a\x36\xeb\x5e\xde\xbc\x80\x58\xbd\x5a\x67\xe0\xbd\xf5\xbe\xeb\x71\x97\xba\x4d\xc4\x7e\xa4\xb3\x5d\xaa\xb6\x95\xac\xdd\xf2\x39\x1d\x40\xcf\xf2\x14\x72\x86\x15\x94\xea\x32\x50\x54\x22\x71\x6a\x07\x41\x7f\xf3\x3a\x15\x53\x76\x79\xab\xa3\x66\x1e\x83\x0e\x8c\xf9\x59\x01\xca\x3d\x04\x07\x79\x3e\x84\xb9\x6b\x8e\x6a\x3f\xd9\x3a\x00\x5b\x10\xe0\xe6\xfa\x1e\x74\xe2\x6b\xdb\xb8\xe1\x00\x37\x34\xb5\xf2\xcc\xdd\xb7\x24\x45\xb5\xd7\x31\xd8\x71\x3f\xd0\x37\x6d\xa5\x3a\x5d\x2f\xa4\x5a\xad\x7b\x0d\xd2\x0e\x60\x6d\x8c\x6e\xe4\xf5\xdc\x5c\x86\x29\xcb\x88\x84\xa0\x74\xd5\xe6\x3d\x7f\x86\x1f\x83\xac\xa7\xc5\xa9\x37\x2c\xf8\xc2\x7c\xf6\x03\x43\x73\x52\x75\x3c\x31\x23\xbc\xc2\x00\x7e\xdd\x9f\x68\xa2\x0b\x50\x0d\xc6\x10\xcb\x98\x65\xb9\x7e\x87\x2e\xf1\xed\xad\xe9\x4b\xd2\xaa\x2b\x92\x6d\x9a\xfc\x60\x98\xd9\xdd\x08\xb9\x63\x42\x23\x92\xe7\x27\x9f\xb1\x54\x2f\x09\xb0\x44\x1e\x47\x2a\x95\x37\x80\x9a\x16\x43\x81\xd2\xbc\xe3\xf3\xd7\x89\x09\x90\xba\x34\x51\x5e\xc1\x8d\x23\x1b\x40\xce\xb2\xb9\x1c\x4d\xae\x51\x98\x09\x87\x8b\xd3\x3c\x8e\x8c\x1b\x55\xad\xb6\x52\xb3\xf4\xf5\xdd\x84\x51\x5f\xf3\x49\x75\x4a\x16\x17\x8a\x01\x95\xff\x84\x3a\x25\x8b\xb3\xae\xd7\xd6\x29\x59\x38\x7d\x9b\xfa\x04\x38\xe0\xd3\xfa\x41\xc4\x03\xaf\xf3\xde\x42\xfd\xc4\xda\x44\x3f\x4e\x3d\xd4\x3c\xaa\x78\xa4\x57\xd6\x35\xca\x76\xab\xa6\xb7\xf8\x02\x33\x2c\x3e\xe3\x5b\x49\x82\xcf\xe3\xa6\x72\xa0\x6f\x91\xdf\x59\x3f\xd9\x80\x0e\xae\xcd\x6b\x10\x43\xc7\x5d\xb5\x25\x9d\xb6\x5c\x02\x89\x38\xce\x66\x03\x5f\x1f\xc4\x52\xe7\x0a\xd3\xdd\xc6\xea\x58\xab\x71\x41\x05\xf2\xba\x46\xd1\xd5\x73\x5b\x0d\x20\x14\xab\x41\xa3\xde\x39\xd9\x54\x3d\xc5\xa9\x7a\xd0\xe6\x55\x2f\xe2\x7c\x00\x85\xf7\x36\x65\x63\xcc\x27\x0f\x72\x51\x5e\x4b\x47\xb0\xee\x8d\xaf\x17\xc2\xc5\x79\xe8\xf8\x55\xa9\x23\xca\xe9\xae\xbc\x31\x15\x03\x28\x95\xf7\xcd\x55\xde\xbc\x71\x07\x41\x3d\xc3\x64\x11\xdd\x1d\x35\xc5\x25\x70\x4a\x66\xe1\xa6\x57\xef\xe6\x44\x1a\xc2\x81\xad\x75\xf7\x72\xba\xab\x4c\x63\xcf\x73\x49\x9a\x93\x52\x37\x36\xc2\x33\xfa\xd4\x40\x4c\xc9\xc2\xa9\xf9\xf6\x3b\xf3\x43\x8d\x66\xf6\x5d\x5b\x62\xb1\x75\xce\xd4\xe2\xe3\xa1\xf8\x1e\x59\x80\x32\x66\xe0\x49\x91\x7b\x21\x9b\x96\x9d\xdc\x98\x27\x3c\xee\x0b\x2f\x8c\x5f\xed\x86\x3a\xcb\x81\xc1\x8e\xb7\x96\x97\x24\x22\x10\xd8\xfa\xe8\xcb\x1e\xf0\x4e\x46\xaf\x41\xab\xcb\xe2\x1e\x5a\xd5\x5c\x30\x80\x29\x56\x15\x91\x17\xce\x0e\x2c\x81\x16\x6d\x71\x01\x67\xab\x6a\x4d\xfa\x26\xbd\xab\x1d\xec\xa6\xe2\xa7\x26\xfa\x15\x06\xba\x38\xd1\x03\xbb\xfb\xbd\x01\x08\xbc\x13\x43\xe8\x9d\x96\xea\x85\x9b\x0e\xd8\x7b\xce\xd5\xd8\x3b\x42\x5f\x80\xeb\xc7\x06\xd7\x79\x69\x9f\xd8\xb9\x88\x2c\xff\x83\xbb\x70\xc7\x4b\x7e\xee\x9f\x11\xfd\x6e\x75\x64\xfe\x3e\x79\xa2\xff\x93\x08\x76\xa9\x72\x2f\x71\x67\xee\xcd\x77\x03\x06\xa2\xef\x09\x4c\x57\x44\xe3\x0a\xd0\x11\xa5\x1f\x9d\x7a\x7b\x7f\x94\x1a\x97\x11\xb3\xe1\x5e\x2d\x66\x7d\x28\x25\x1f\xdb\x15\x1a\xef\x54\x3f\x26\x11\x54\x83\x74\x93\x1c\x9d\xe5\x53\x3d\x68\x2a\x9e\x9d\xc4\xa9\x53\x1b\x3f\x0e\x55\xf6\xb8\x9b\xea\xe3\x1b\x66\xa5\xd8\x51\x80\xf4\x6c\xf2\x23\xe1\x0f\x1b\x78\x7e\x47\x05\xd2\xb1\x29\x8f\x29\x2f\xbf\xdd\x49\x4b\xc5\x58\xa7\x36\x0d\x61\x60\xe1\x44\x13\x4e\x98\xe5\xbd\xb1\xf5\x9f\x48\x39\x51\xbf\x9b\xfe\x90\x50\xed\xb3\x6e\xa9\x12\xfe\xa2\xa4\x28\x33\x3a\xcf\xb1\xb2\xcf\x54\xff\x92\x57\x05\x9d\xbf\x7c\xd4\x87\x5b\x5a\x44\x2f\x59\x36\xaf\x30\x37\x36\x46\x07\xfb\x5d\x71\xe0\x97\x3c\x55\x8a\x04\x9b\xed\xa6\x84\xab\x6e\x09\x63\xfc\x54\xcc\xfa\x02\x22\x10\x6c\x96\x12\xbe\xab\x47\x8a\xf2\xba\xd5\xd4\xea\x84\x00\x36\x27\xfd\xe4\xc9\xc3\xf3\xa4\xae\x76\x1a\x7a\x76\xf1\xae\x10\x9b\x5a\x34\x15\x42\x37\x6b\xfa\x0f\x06\xaf\x58\xf3\x66\x68\x6d\xe6\xb6\x57\x94\xb3\xb9\x68\xd5\xbd\x2d\x7e\x73\x4a\x52\x76\xd7\x73\x53\x14\x4a\x26\xc3\x15\x95\xcc\x40\x6c\xf2\x92\xe0\xb8\x2e\xb9\xfc\x90\xce\xf9\x96\xab\x8d\xd0\xfd\x7c\xa5\xc9\x56\x63\x2b\xfe\x72\xb3\xd9\x31\x26\x82\xf0\x6b\x14\xc9\x67\x42\xe7\xe8\x40\x50\xbf\x3d\x26\x56\x75\xb9\x20\x8a\x9a\x79\xaa\xb0\x38\x61\x34\x47\x3e\x84\x9e\x86\xdd\xd3\x05\xff\xda\xeb\x2e\x77\xfe\x1d\x00\x00\xff\xff\xbd\xe4\x19\x2e\x7e\x4c\x00\x00")

func assetsScriptScriptJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsScriptScriptJs,
		"assets/script/script.js",
	)
}

func assetsScriptScriptJs() (*asset, error) {
	bytes, err := assetsScriptScriptJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/script/script.js", size: 19582, mode: os.FileMode(420), modTime: time.Unix(1511657506, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsStyleStyleCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5a\xef\x6e\xa3\xb8\x16\xff\x9e\xa7\xb0\x54\x5d\xb5\xbd\x2a\x19\xd2\x36\x69\x87\x7e\x99\x07\xb8\xba\x5f\xf6\x09\x0c\x1c\x12\xab\x60\x23\xdb\xb4\xc9\xac\xf2\xee\x2b\x1b\x0c\xc6\x60\x48\x32\x19\x75\x77\xd5\xd1\x08\xb0\x7d\xce\xef\xfc\x3f\x07\x12\xb3\xf4\x80\xfe\x5c\x20\x94\x31\x2a\x83\x0c\x17\x24\x3f\x44\x48\x60\x2a\x02\x01\x9c\x64\x6f\x0b\x84\x62\x9c\xbc\x6f\x39\xab\x68\x1a\x24\x2c\x67\x3c\x42\x37\xe9\x5a\xfd\xbd\x2d\x8e\x8b\x65\xb2\xc3\x3c\xf8\xe4\xb8\x2c\x21\xd5\x94\x3e\x19\x4f\xf5\x83\x08\xc5\x1c\xf0\x7b\xa0\x1e\xbc\x99\x05\xfd\xc8\xac\xe0\x3c\xd7\x34\x72\x86\x53\xe0\xfa\x74\x4a\x44\x99\xe3\x43\x84\xe2\x9c\x25\xef\xfa\x18\x49\xe5\x2e\x42\x8f\x61\xb9\x57\xb7\x3b\x20\xdb\x9d\xec\xee\x1b\x48\x92\x63\x2a\x4a\xcc\x81\xca\x37\x23\x8e\x20\x3f\x21\x42\xa1\x23\x03\x29\xf0\x16\x22\x54\xf1\xfc\x6e\xb9\xfc\xa6\xef\xc4\xb7\x1a\xc1\x52\x7c\x6c\xef\x9d\xed\x35\x91\x55\x18\xfe\x47\xff\xa7\x56\x31\x25\x05\x96\x84\xd1\x80\xe2\x02\x22\xc4\x99\xc4\x12\xfa\x2b\x69\xc5\xf5\x45\x84\x56\xa2\xbf\x42\x24\xd4\x4b\x41\xc2\x2a\x2a\x23\x44\x68\x46\x28\x71\x09\x48\x52\x10\xba\x0d\xb2\x8a\x26\x35\x9d\x9c\x50\xc0\x5c\xe9\xeb\xc7\x3b\x1c\x32\x8e\x0b\x10\x0d\xeb\xda\x82\x9c\x15\xfa\x02\xd5\xca\xc8\x18\x2f\x0c\xb6\xbb\x30\x85\x5a\xb2\xe3\x02\x21\xc9\xbc\xfb\x9e\x36\xd6\xce\xc6\x32\x0a\x46\x8c\x6b\xf3\x94\x4c\x90\x1a\x0e\x87\x1c\x4b\xf2\x01\xb6\x4d\x9e\x95\x49\xfa\xa7\xa2\x28\x86\x8c\x71\x78\xe8\xd3\xb2\x6f\x82\x8c\xe4\x39\xb8\xf4\x71\x2c\x58\x5e\xd5\x5a\xc9\x21\x93\x8d\x21\x4f\x60\xa5\x09\x25\x8c\x4a\x50\xda\xbd\xbd\x7d\x9b\x72\x2b\x63\xd3\x69\x27\x3f\x05\xfa\x08\x85\xcd\x3a\x4e\xd2\x67\x45\x21\xae\xa4\x64\x54\xef\x33\x12\x3c\x6d\x6a\x07\x56\x76\x0d\xdc\x87\x31\xe3\x29\xf0\x08\x51\x46\xb5\x06\x4a\x9c\x2a\x9e\x11\x0a\x5b\xc7\xb7\x5c\x7c\xf5\xda\x8b\x85\xcf\x5d\xe3\x4d\x23\x90\xbe\x7f\xff\xae\x77\x56\x5c\xa8\xfb\x92\x11\x2a\x81\x77\x10\xa3\x1d\xfb\xf0\x0b\xf4\xf2\xf2\x62\x6d\xcd\x58\x52\x09\xbd\x95\x55\x52\x89\xa1\x6d\x74\x5c\xdc\xe0\x34\x0d\x2c\x89\x3b\xa3\x66\x64\x0f\x69\x2d\x9f\x94\xac\x50\xea\xaf\x91\xf3\x5a\x7c\x73\xdb\x18\xe7\xf9\xb9\x1f\xf3\xe6\xbe\xd6\x4e\xc0\x71\x4a\x2a\x11\xa1\xc7\xc7\xfa\x71\x81\xf9\x96\xd0\xc6\x51\x3a\x8d\x8d\xe9\x73\x28\x9b\x93\x40\x4e\x4b\x2b\x03\x35\xfa\x32\xcd\x6d\x97\x6a\x0a\xbc\xa5\x20\x55\xaa\xb9\x75\x73\x8d\xeb\x37\x23\x89\xc8\xc8\x6a\x2d\x70\x28\x01\x4b\x25\x5b\x73\xe9\xac\x77\xea\x4f\xa0\x45\xc9\xf6\x81\xd8\xe1\x94\x7d\x2a\x97\x0a\xd1\x4b\xb9\x47\x7c\x1b\xe3\xbb\xf0\x01\x35\xff\x96\x4f\x1a\x9e\xd6\x40\x73\xbe\x3b\x85\xc2\xe5\x4a\x58\x29\xc9\x32\xf9\xb4\x07\x59\xa2\x39\x10\x94\xed\x07\x18\xd6\xf7\x75\x91\xa9\xa3\x39\x28\x31\x05\x0f\xe5\xd6\xe9\xc7\x53\x88\x64\x65\x84\xd6\xaf\xb6\xa3\x04\xae\x13\x6a\x44\xe4\xa7\xf6\x9a\xc6\xc5\x62\xa6\xd3\xcc\x8f\x02\x52\x82\xd1\x5d\x81\xf7\x41\xe3\x9b\x1b\x75\xea\x5e\x83\x19\xc2\x6b\x3d\x38\xc1\x79\x72\xa7\x8b\x47\x80\x74\xe4\x6a\x9d\x9a\x8c\x66\x18\x1f\x6d\x16\x84\x9e\xc7\x62\x13\x36\x54\x0c\x55\xcd\x73\x5d\xb3\x7c\x0a\x0d\xcf\x63\x57\x68\xbf\x48\x8d\x5d\x1c\x6f\xc2\xf2\x14\xb5\xba\x68\xaf\xaf\x55\x2f\x87\x4b\x95\x6a\xb7\x32\x13\x1a\x34\x39\x7c\x48\x7b\x55\x93\x3e\x2e\x96\xc0\x39\xfb\x3a\x53\x9d\xdb\xc5\x59\x09\x57\x09\xd7\x72\x90\xb0\x97\x01\xce\xc9\xb6\x97\x7e\x1a\x09\xb8\x2a\x06\xb3\x6e\xe0\x28\xe2\xfa\x5e\xe0\x63\x70\x96\x13\x10\x21\xf5\x69\x75\x11\x08\x79\xc8\x21\x90\x87\x12\xba\x92\xe3\xad\x4e\xc7\xc5\x4d\xca\x3e\xa9\xf2\x1c\xf1\x15\xa6\xbe\x04\xf1\xb4\xc9\x1c\x79\xae\x6e\x31\x1f\xfd\x33\x0c\x66\x91\x58\x9a\xcb\x89\x0e\x77\x22\x50\xfa\x7d\x64\xab\xa6\xd5\x66\x50\xa8\xfb\xc6\x1c\xc7\x10\x51\x26\xef\xa2\x1c\x0b\x19\x24\x3b\x92\xa7\xb5\xc0\x2d\xcb\xc6\xa6\xe5\x1e\x09\x96\x93\xd4\x6e\x52\x47\xa9\x4d\xd6\xe2\x2c\x54\x7f\x9e\x76\x70\x54\x41\xff\x6d\x54\xa4\x77\x05\xf0\x01\x54\x0a\xe3\x2f\x9e\x23\xed\x95\x1e\x96\x2e\x9a\x10\xdb\x7c\x51\xf7\x9f\xca\x31\x5b\xaf\xab\xf5\xee\xe3\xed\x8e\x2f\x4d\x6c\xe8\x78\x59\xad\xeb\x22\x74\x43\x59\xf0\xa5\xf1\x67\xaa\xe2\x2a\x3c\xa9\x2c\x0e\xf1\x5e\x3f\xbe\xfc\x2c\xce\x09\xb1\x1e\x95\xdd\xca\xb2\xc0\x68\x8f\xee\x44\x52\x6f\x2e\x5a\x85\x93\xf5\xc4\xea\xcb\x9f\xec\xf1\xe8\xd3\x8c\x55\xa1\xce\x5a\x4b\xc9\xca\x91\x51\xb6\x9d\x4a\xb4\x1d\x43\x67\xe2\x74\x60\xb5\xb3\xc8\xab\x2f\xbe\xad\xb1\xaf\x65\x68\x2e\x02\x01\x98\x27\x3b\x65\xfa\xb9\x1e\x61\x7a\x34\x7a\x0c\xdd\xf7\x21\xaf\x73\x7e\xe6\x9d\x29\x55\x3a\x31\xe9\xca\x9e\x2a\x37\xa3\xd3\xd6\xca\x8c\xde\x13\xb2\x79\x47\xc3\xe1\x21\xd8\x13\x39\x3e\x2c\x7a\x35\xd2\x77\x67\xa3\x90\xd7\x71\x7d\xfc\x33\x86\x42\xb5\x61\x74\x24\xec\x5e\x3f\x69\xf5\x35\x2a\xe6\x20\xaa\x5c\xfe\x4b\xba\x85\x31\xa1\xae\xdf\xe4\x4d\x31\x39\xa7\xd1\x73\xe8\x98\xfb\x1d\xe8\x4a\x73\x8d\x16\xa2\x97\xb9\x36\x61\x5f\x9f\xab\xa6\x46\xcc\xe0\xb8\xbc\x8d\xf0\x11\x56\x76\x27\x74\xfb\xe0\xdd\x00\x45\x29\x0f\x13\xcb\xaa\xc9\xbe\xb0\xfc\x77\xd2\xaf\xdb\xd1\xc2\x8f\xf4\x64\x20\xd7\xb0\x93\x8e\x84\x08\x11\x89\x73\x92\xcc\xa2\x1a\x98\x65\x06\xe6\xf5\xcd\xd8\x49\xdf\x9f\xc1\x66\xcc\xfe\xeb\xfa\x9a\x65\xf1\xdb\x5c\xf6\x17\x9a\xe0\x39\xad\x4c\xf7\xc3\xde\xd3\xec\x6a\xb9\xc2\x54\xbb\xf5\x4c\x4c\x34\x2c\x7f\x83\x8e\x1b\x59\x4e\x7c\xf1\x51\x37\xdd\xd3\x2f\x3e\xda\x81\x81\xd0\x8c\x7d\x45\x89\x1b\x24\xdb\x99\xfa\x35\x04\x7c\xfd\xf2\x35\xc1\xe3\x9c\xea\xd5\x27\xd3\xdd\x66\x9c\xfd\x04\x3a\xe1\xcd\x08\xb1\x12\x27\x44\x1e\x22\x14\x2e\xd7\x23\x76\xea\x6e\xb1\xfe\x60\x25\x86\x03\xd7\x44\x0b\x7f\x02\x39\xab\x47\x6c\x5b\x0d\xd4\xcc\x70\xce\x61\x89\xe3\x1c\x7a\x3b\x71\x25\x99\x77\xa3\x4c\xa3\x8c\x70\x13\x13\xdd\xe7\x50\xa7\x06\xdb\xb8\x75\x53\x6e\xf9\x4a\xd0\xeb\xd2\xfd\x7c\x74\xfc\x59\xcc\xee\x2f\xfd\x64\xea\x35\x24\xc9\x41\x3c\xcc\xac\x9b\xa8\x9d\xdd\xd7\x55\x8b\xa1\x21\xe7\x40\x9c\x90\xe6\xda\x59\xea\x3c\x82\xf3\xb9\xc6\x9b\x5e\x7a\x93\xc4\x2c\xc3\x5f\xe9\x59\x4e\x79\xf1\x39\xcd\x1e\xe1\x0b\x59\xbb\x1f\x3b\x8f\x8b\x65\x8c\x0f\x7f\x97\x74\xea\x4b\x00\x33\x49\xb6\x27\xc1\xf5\xf3\xeb\x38\xf9\x73\x52\x6b\x4b\xa1\xbd\xd2\x6f\xbc\x1e\x46\x57\x04\x40\x0a\x5c\x8c\x2f\xe6\x00\xc9\x0e\xb8\xf0\xfc\x20\xc2\x31\xc0\xa3\xf1\x65\x0f\x00\xeb\x0b\xbc\x1f\xc8\xf4\x26\x03\xa8\xf7\x85\x7d\x98\x22\xe7\x31\x38\x9f\xe6\xff\xaf\x7f\x3e\x71\xeb\x3b\xe9\x60\x73\x0e\xff\xd1\xac\xfa\xcf\x8f\xc2\xee\x08\xfc\xcf\x2c\xfb\x29\x5c\xfc\xca\xf2\xb8\xf8\x2b\x00\x00\xff\xff\xfc\x46\x01\x09\x5a\x23\x00\x00")

func assetsStyleStyleCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsStyleStyleCss,
		"assets/style/style.css",
	)
}

func assetsStyleStyleCss() (*asset, error) {
	bytes, err := assetsStyleStyleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/style/style.css", size: 9050, mode: os.FileMode(420), modTime: time.Unix(1511657507, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/index.html": assetsIndexHtml,
	"assets/images/back.svg": assetsImagesBackSvg,
	"assets/images/loader.svg": assetsImagesLoaderSvg,
	"assets/images/magnet.svg": assetsImagesMagnetSvg,
	"assets/images/pause.svg": assetsImagesPauseSvg,
	"assets/images/play.svg": assetsImagesPlaySvg,
	"assets/script/script.js": assetsScriptScriptJs,
	"assets/style/style.css": assetsStyleStyleCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"images": &bintree{nil, map[string]*bintree{
			"back.svg": &bintree{assetsImagesBackSvg, map[string]*bintree{}},
			"loader.svg": &bintree{assetsImagesLoaderSvg, map[string]*bintree{}},
			"magnet.svg": &bintree{assetsImagesMagnetSvg, map[string]*bintree{}},
			"pause.svg": &bintree{assetsImagesPauseSvg, map[string]*bintree{}},
			"play.svg": &bintree{assetsImagesPlaySvg, map[string]*bintree{}},
		}},
		"index.html": &bintree{assetsIndexHtml, map[string]*bintree{}},
		"script": &bintree{nil, map[string]*bintree{
			"script.js": &bintree{assetsScriptScriptJs, map[string]*bintree{}},
		}},
		"style": &bintree{nil, map[string]*bintree{
			"style.css": &bintree{assetsStyleStyleCss, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
