// Code generated by go-bindata.
// sources:
// assets/index.html
// assets/images/back.svg
// assets/images/loader.svg
// assets/images/magnet.svg
// assets/images/pause.svg
// assets/images/play.svg
// assets/script/script.js
// assets/style/style.css
// DO NOT EDIT!

package main

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x51\x4b\x6e\xc3\x20\x10\x5d\x27\xa7\xa0\xac\x63\x93\x2c\x2a\x55\x15\xf8\x12\x3d\x01\x81\x97\x32\x2d\x60\x0b\x26\x4e\x72\xfb\xca\xc6\x52\xab\xae\xb2\x01\xde\x0f\xc4\x3c\xfd\xe2\x47\xc7\x8f\x09\x22\x70\x8a\xc3\x5e\xb7\x6d\xa7\x03\xac\x1f\xf6\xbb\x9d\x4e\x60\x2b\x5c\xb0\xa5\x82\x8d\xbc\xf2\xa5\x7b\x93\xbf\x42\xb6\x09\x46\xce\x84\xdb\x34\x16\x96\xc2\x8d\x99\x91\xd9\xc8\x1b\x79\x0e\xc6\x63\x26\x87\x6e\x05\x07\x41\x99\x98\x6c\xec\xaa\xb3\x11\xe6\xd4\x1f\x0f\x22\xd9\x3b\xa5\x6b\xfa\x4b\x5d\x2b\xca\x8a\xed\x39\xc2\xe4\xb1\xbd\xc6\xc4\x11\xc3\x07\xe0\x3f\x6d\xf1\xc8\x5a\x35\x66\xbf\x88\x91\xf2\xb7\x28\x88\x46\x56\x7e\x44\xd4\x00\xb0\x14\xa1\xe0\xb2\x31\x6a\x5d\x7b\x57\xab\x14\xcb\x6f\x8d\x64\xdc\x59\x2d\xb8\xdd\x50\x5d\xa1\x89\x45\x2d\xce\xc8\xc0\x3c\xd5\x77\xa5\x2e\xe7\x3e\x41\x15\x58\xc7\xdd\xe9\xb5\x3f\xf6\xc7\xfe\xab\xca\x41\xab\x66\x1e\x9e\xc9\xf9\x31\x3d\x95\x6d\xe7\x4d\xfd\x6f\xd5\x6a\x6b\x43\x9f\x47\xff\x58\xb3\x9e\x66\x41\xde\xc8\x6d\xde\x6d\x46\xca\xd3\xbc\xda\x9b\x4d\xab\x56\xe6\x4f\x00\x00\x00\xff\xff\x55\xab\x4e\xde\xe4\x01\x00\x00")

func assetsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsIndexHtml,
		"assets/index.html",
	)
}

func assetsIndexHtml() (*asset, error) {
	bytes, err := assetsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/index.html", size: 484, mode: os.FileMode(420), modTime: time.Unix(1511579925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesBackSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8e\x41\x4e\xec\x30\x0c\x86\xf7\x39\x85\xe5\x75\xdb\x24\xed\xd3\x13\x83\x9a\x8e\xc4\x82\xdd\xec\xe0\x00\xd1\xd4\x34\x11\x19\xa7\x34\xa1\xe9\xf1\x51\x06\x04\x96\xbd\xf9\x6c\xf9\xfb\xc7\xf3\x71\x0b\xb0\xd3\x96\x7c\x64\x83\xba\x53\x08\xc4\xd7\x38\x7b\x5e\x0c\xbe\xbe\x3c\xb7\x0f\x08\x29\x5b\x9e\x6d\x88\x4c\x06\x39\xe2\x79\x12\x63\xda\x17\x01\x00\xc7\x2d\x70\x32\xe8\x72\x5e\x1f\xa5\x2c\xa5\x74\x65\xe8\xe2\xb6\xc8\x5e\x29\x25\xd3\xbe\x60\xbd\xda\x3d\x95\xa7\x78\x18\x54\xa0\xe0\x5f\xed\x6f\xfc\x67\xd5\x38\x09\x80\x71\xb5\xd9\x41\xca\x5b\x7c\x27\x83\xc5\xf9\x4c\x08\x6f\x3e\x84\xaa\x65\xc2\x9f\x55\x5b\xfc\x9c\x9d\xc1\xe1\x17\x04\xcf\x74\xb5\xab\xc1\xf4\xf1\x69\x37\xba\x7f\xbf\xd7\x6c\xf0\xa2\xff\x37\x5a\x43\x68\x4f\xcd\x09\xea\x5c\x06\xd5\xf4\x0a\x5c\xdb\x0f\x08\x72\x12\x63\xcd\x39\x89\xaf\x00\x00\x00\xff\xff\xad\x09\x57\xb3\x0a\x01\x00\x00")

func assetsImagesBackSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesBackSvg,
		"assets/images/back.svg",
	)
}

func assetsImagesBackSvg() (*asset, error) {
	bytes, err := assetsImagesBackSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/back.svg", size: 266, mode: os.FileMode(420), modTime: time.Unix(1511656400, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesLoaderSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\xcd\x41\x6e\xc3\x20\x14\x04\xd0\x3d\xa7\x18\xfd\x6e\x1d\x03\x69\x5a\xa1\x0a\x88\x7a\x80\x1e\xa2\x0d\x04\xa3\x12\xb0\x0c\x35\x3e\x7e\x65\xc9\x8b\xcc\xec\x66\xf1\x46\x5f\xb7\x47\xc2\xea\x97\x1a\x4b\x36\x24\x47\x41\xf0\xf9\x56\x5c\xcc\xc1\xd0\x5f\xbb\x9f\x14\xe1\x6a\x99\xae\x6b\xc0\xf6\x48\xb9\x1a\x9a\x5a\x9b\x3f\x38\xef\xbd\x8f\xfd\x75\x2c\x4b\xe0\x67\x21\x04\xaf\x6b\x20\x86\x3d\x4f\x9c\x24\xcb\x00\x3d\x7f\xb7\x09\xb5\x2d\xe5\xd7\x1b\x7a\x79\x7f\xfb\xb9\xb9\x0b\x1d\xc3\xa9\x47\xd7\x26\x43\x17\xc2\x3d\xa6\x64\x28\x97\xec\x0f\x09\x80\x33\xf4\x75\x1e\xa4\xc0\xa7\x1a\x14\x04\xe4\x5e\x31\x48\x45\xe0\x96\xe9\xfd\xd6\xb2\xff\x00\x00\x00\xff\xff\x24\x9c\x62\x4d\xc7\x00\x00\x00")

func assetsImagesLoaderSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesLoaderSvg,
		"assets/images/loader.svg",
	)
}

func assetsImagesLoaderSvg() (*asset, error) {
	bytes, err := assetsImagesLoaderSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/loader.svg", size: 199, mode: os.FileMode(420), modTime: time.Unix(1511579925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesMagnetSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x92\xcd\x6e\x5a\x31\x10\x85\xd7\x41\xe2\x1d\x2c\xaf\xc7\x83\x67\xc6\xe3\x9f\x2a\x97\x48\x65\x0b\xab\x3e\x41\x45\x08\x20\xdd\x40\x14\x28\x17\xf1\xf4\x95\x7d\x41\xa5\xbb\x23\x7b\x3c\xe7\x3b\x47\x7e\x7d\xbb\x7e\xf6\xe6\xb2\xf9\x3e\xed\x8f\x87\xce\x12\x7a\x6b\x36\x87\xf5\xf1\x7d\x7f\xd8\x76\xf6\xcf\xf9\xc3\x65\xfb\x36\x9f\x4e\x5e\x4f\x97\xed\xf3\x18\x59\x73\xfd\xec\x0f\xa7\xce\xee\xce\xe7\xaf\x1f\xb3\xd9\x30\x0c\x38\x08\x1e\xbf\xb7\x33\xf6\xde\xcf\x4e\x97\xad\x35\x97\xfd\x66\xf8\x79\xbc\x76\xd6\x1b\x6f\x72\x36\x39\xdb\xf9\x74\xf2\xf2\xfa\xf5\xfb\xbc\x33\x1f\xfb\xbe\xef\xec\xb0\xdb\x9f\x37\xd6\xbc\x77\x76\xa5\x01\x33\x33\x64\x41\x2e\x69\xed\x3c\x52\x10\x20\xd4\xa0\x40\xe8\x73\x00\xc6\x42\x19\x18\x13\x27\x10\xf4\xaa\x3d\x15\x2c\x1c\x81\x30\x4a\x9a\x4e\x5e\x5e\xd6\x84\x31\x08\x78\x24\xc9\x20\x48\x5e\x1d\xa1\xa7\xaa\x59\x1d\xa3\x46\xee\x09\x55\xd5\x51\xc4\x20\xdc\x3b\x56\x2c\x8e\x91\x84\x97\xff\xf9\xdf\xcc\x4a\x31\x31\x41\xcc\x58\x8a\xb6\x57\x09\xc6\x57\xcd\xe9\x1f\x5e\xa8\xfe\x3e\x55\xb0\xe6\x03\x77\x9f\xc6\xe6\x1a\x5b\xe5\x92\x52\x23\x49\x9d\xcb\x31\x39\x42\xa5\x31\x8b\x1b\xb3\xb8\x66\x31\x82\x85\xe5\xb3\xf9\xcd\xac\x04\x49\x03\x04\xc2\x42\x52\xed\x97\x01\x53\x04\xcd\x98\x63\xe8\x6b\x06\xcf\x2d\x05\x2d\xb9\xa0\xd7\x04\x52\x30\x2f\xaa\xe6\x2a\xa5\x08\x70\x01\xc9\x58\x12\xdd\x95\xaa\xae\xbd\x4b\x98\x52\x82\x88\x89\x8b\xa3\x50\x1b\x03\xd2\xbb\x3a\x91\x42\x44\xe1\x02\xa4\x30\x1e\x8d\xd1\xc1\x63\xa0\xe8\x7c\xdd\xee\x31\x4b\xae\xb2\xd6\x83\x1c\x62\x0d\x12\xeb\x9a\x88\x45\xf8\x0e\x07\x0d\xae\x6f\x37\x35\x62\x51\x5a\xe4\x80\x25\x24\x08\x1e\x53\x11\xc8\x5a\x41\x63\x2c\x4d\x35\xbc\x6a\xb6\xc8\x0a\x94\x90\x4b\x80\x18\x5b\xcd\x1e\x42\x00\xff\x4b\x1e\xc7\x72\x9f\x5e\xc8\x63\x41\xed\x53\x1e\x7b\x9f\x9b\xbb\xd9\x59\xfd\xcb\xf5\x73\xce\xa7\x93\xbf\x01\x00\x00\xff\xff\x19\xfb\x2d\xa3\xfc\x02\x00\x00")

func assetsImagesMagnetSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesMagnetSvg,
		"assets/images/magnet.svg",
	)
}

func assetsImagesMagnetSvg() (*asset, error) {
	bytes, err := assetsImagesMagnetSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/magnet.svg", size: 764, mode: os.FileMode(420), modTime: time.Unix(1511654043, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesPauseSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\x4d\x6f\xe2\x30\x10\x3d\x83\xc4\x7f\xb0\xbc\x57\x67\x32\x63\x8f\xbf\x2a\x42\xa5\xe5\xd2\xcb\x5e\xf7\xbe\x0a\x14\xd0\x52\xa8\x0a\x0b\x68\x7f\x7d\xe5\x0f\x68\x2a\x21\x12\xc9\xb1\x33\xe3\x37\x6f\xde\xb3\xa7\xcf\x97\xb7\xad\x38\x2d\x3f\x0e\x9b\xfd\xae\x93\x04\x28\xc5\x72\xd7\xef\x17\x9b\xdd\xaa\x93\xff\x8e\xaf\x4d\x90\xe2\x79\x36\x19\x4f\x0f\xa7\xd5\x30\x8f\xa4\xb8\xbc\x6d\x77\x87\x4e\xae\x8f\xc7\xf7\xa7\xb6\x3d\x9f\xcf\x70\x36\xb0\xff\x58\xb5\x1a\x11\xdb\xc3\x69\x55\x53\x9e\x2e\xdb\xcd\xee\xef\xbd\x44\x8a\x31\xb6\x39\x2a\x27\xe3\x91\x10\xe2\xb4\x59\x9e\x7f\xee\x2f\x9d\x44\x81\x82\x4d\x00\x6b\xdc\xf5\x2b\x67\x93\xf1\x68\xfa\xfe\xe7\xb8\x16\xaf\x9b\xed\xb6\x93\x3f\x16\x36\xbd\x52\x2c\x3a\xf9\x8b\x1c\x03\x5b\xa3\xf0\x85\x02\x68\xef\xe6\x64\xc0\x68\x56\xa8\x22\x20\x93\x22\x08\xe8\x95\x05\xd6\x36\x8f\x3c\x4f\x7f\x42\x8e\x2a\x04\x44\x52\x79\x87\xbe\x2e\x12\x0a\x9d\x18\x09\x62\xa4\xc9\x78\x94\xe8\xdd\x79\x7a\x54\x0c\x91\x43\x2d\x10\x41\x1b\x53\x0a\x28\xd2\x10\xd8\xf7\x06\x1c\x45\x95\x46\xaf\x3c\x44\xd4\x39\x1c\x72\xd8\x52\x59\xac\x89\x1d\x50\xa0\x3e\x61\xc5\x4c\x5a\x1b\x6a\x08\x02\x51\xc5\x69\x72\xe2\x03\x22\xb9\x42\x93\xc6\x4a\xa0\xf1\x10\x62\xa8\xf3\x02\xf2\xbb\xb4\xd5\x63\xc3\x10\xad\x6e\x32\xe9\xa6\x14\xcb\xf8\x35\x6f\x4e\xde\x80\x0b\xb6\x76\x45\x2e\x02\xa3\x56\xa8\x6e\x32\xff\x97\xed\x43\x3f\xd8\x18\xa0\x2b\x93\x39\xeb\x08\x1c\x5d\x85\x63\x6d\x41\x93\x55\xa8\x58\x23\x68\xe7\x15\xbe\x68\xcf\x80\xc1\xf5\x4d\x55\x20\x93\xf2\x65\x43\x25\x55\xb0\x1e\x28\x90\x9a\xd7\x94\xa5\xb6\xa9\x1d\xa3\x55\x96\xa0\xce\x0b\xca\xd5\xd2\xa1\x71\x44\x5f\xc6\xdd\x12\x93\xa0\xf8\x65\x5c\x88\x7e\x60\x5c\x65\x73\x33\xee\x01\xab\x52\x25\x5b\xaa\xe3\x1d\x4b\xb3\x71\x3c\x30\x8e\x06\xc6\xd1\x77\xe3\xe6\xe5\x2e\x70\x3e\xab\x14\x15\x1b\x07\xde\x94\x43\xfc\x4d\xf1\x62\xcf\x34\xdd\xc2\xd9\x64\xfc\x19\x00\x00\xff\xff\x95\x2f\x32\x11\xe6\x03\x00\x00")

func assetsImagesPauseSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesPauseSvg,
		"assets/images/pause.svg",
	)
}

func assetsImagesPauseSvg() (*asset, error) {
	bytes, err := assetsImagesPauseSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/pause.svg", size: 998, mode: os.FileMode(420), modTime: time.Unix(1511645360, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesPlaySvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x51\xcb\x6a\xc3\x30\x10\x3c\xc7\xe0\x7f\x10\xea\x55\x5e\xaf\xb4\xf2\x4a\x2a\x71\x02\xcd\xb9\xa7\x7e\x41\x71\x12\xc7\xe0\xd8\x21\x76\xed\xd0\xaf\x2f\x72\xd3\x17\x74\x05\xd2\x32\xcc\x8e\x34\xa3\xf5\xf6\x76\x6e\xc5\x74\xb8\x0e\x4d\xdf\x95\x52\x03\x4a\x71\xe8\xaa\x7e\xdf\x74\x75\x29\xdf\xc6\x63\xe6\xa5\xd8\x6e\xd2\x64\x3d\x4c\xf5\x6f\x9e\x96\x69\xb2\x12\x42\xdc\xce\x6d\x37\x94\xf2\x34\x8e\x97\xc7\x3c\x9f\xe7\x19\x66\x82\xfe\x5a\xe7\x06\x11\xf3\x61\xaa\xef\xbc\xa9\x39\xcc\x4f\xfd\xad\x94\x28\x50\x58\x0d\x21\x84\xfb\x21\x37\x69\xb2\x5a\x5f\x5e\xc7\x93\x38\x36\x6d\x5b\xca\x87\x7d\x11\x97\x14\xfb\x52\x3e\x13\x03\xb2\x57\x06\x41\x3b\x6e\x33\x13\x32\x83\x3b\x06\xc7\x3a\x43\x40\x2a\x14\x03\x31\xc5\xbe\x70\x8a\x17\x04\x41\x6b\xbb\x2b\xc0\x21\x2b\x04\xe3\x9d\x2a\x20\xa2\x6c\xbe\xba\x10\xc2\x64\x31\x4d\x56\x3f\x25\x84\x10\x15\x2a\x04\x72\x26\x4e\x2d\xb3\x4e\x93\x42\x28\x16\x4d\xef\xb9\x42\xd0\x36\xe2\xe8\xe2\x4e\x0b\x47\x6b\xab\x10\x2c\xdf\xef\x8d\x9c\x10\xd4\xa2\x14\x5c\x7c\x57\x24\x15\xec\xb3\xe8\xc0\xb5\x8b\x81\xcf\x48\xfe\xad\x0a\xc1\xb8\xe8\x4d\x7b\x17\x75\xc9\x64\x08\x36\xd8\xef\xde\x1b\x7a\x21\x06\xa2\x25\x14\x62\x52\x7f\x22\x7a\x97\x22\x8f\xdf\x15\xa3\xdf\xa4\xc9\x47\x00\x00\x00\xff\xff\x81\xc0\x9e\x0d\xe0\x01\x00\x00")

func assetsImagesPlaySvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesPlaySvg,
		"assets/images/play.svg",
	)
}

func assetsImagesPlaySvg() (*asset, error) {
	bytes, err := assetsImagesPlaySvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/play.svg", size: 480, mode: os.FileMode(420), modTime: time.Unix(1511641898, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsScriptScriptJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x3c\x6b\x73\xdb\x38\x92\xdf\xfd\x2b\x3a\x35\x75\x26\xb5\x96\x19\x7b\x76\xf6\xee\x4a\x19\x5d\x2a\x7e\x64\xe3\x5b\xe7\x51\x4e\x72\x57\x57\xa9\xd4\x14\x48\xb6\x2c\xc6\x10\xa1\x01\x21\xdb\x1a\xaf\xfe\xfb\x15\x5e\x24\x00\x92\x92\xec\x38\x99\xcd\x17\xcb\x22\x81\xee\x46\xbf\xd0\xdd\x68\x28\xa3\xa4\xaa\xe0\x88\x2c\xdf\x23\xe1\xd9\x14\xee\x76\x00\x32\x56\x56\x82\x2f\x32\xc1\x78\xfc\xfb\x02\xf9\x72\x08\x59\x3a\x50\xaf\x00\xc4\xb4\xa8\x12\xf5\x14\xc6\xa0\x3e\x9f\x35\xcf\x7f\xcb\x52\x18\x43\x96\xea\x47\x4f\x9f\xc2\x09\x52\xb2\x04\x31\x45\xe0\xf8\xfb\x02\x2b\x01\x15\x03\x31\x25\x02\x6e\x10\x72\x56\x46\x02\xaa\x39\x99\xa9\x11\x29\x59\xda\x69\x37\xd3\x82\xa2\x7a\xb8\xa8\x90\x83\x58\xce\xb1\x02\xb6\x10\x40\xa0\xd2\x74\x2a\xcc\x89\x8b\x99\x50\xfa\xa1\x98\xa1\x1c\x35\x86\x0a\x85\xf9\x12\xc7\x03\x18\xff\x97\x21\xbe\x7b\x70\xb9\xa0\xf4\x99\x79\xaf\x5e\x1d\x91\xec\x0a\xcb\xfc\xc5\xbb\xb3\x38\x7a\x4a\xe6\xc5\xd3\x94\x2c\x35\xde\xe7\x0a\xef\x38\x82\x3d\xc0\x32\x63\x39\x7e\xbc\x38\x3b\x66\xb3\x39\x2b\xb1\x14\x9a\x59\x83\x41\x22\xa6\x58\xc6\x2c\xfd\xe2\x22\x6e\x38\x14\x4b\x7c\x43\x60\xe9\x97\x81\xc5\xba\x1a\x24\x19\x11\xd9\x34\x46\xce\x7b\x26\x21\xe7\x43\x45\xa9\x33\x49\xff\xb7\x1a\x36\xf2\x4b\x4e\x4e\xcf\x5f\xfc\x9f\x7a\xb1\xda\x91\xa2\x24\x65\x86\x34\xb6\xc2\x2b\x26\x10\xb7\x38\x30\xa8\xd1\x65\x14\x09\xb7\x7c\x6b\x8f\x33\xe8\x42\x71\xc7\xb7\x43\x58\x2a\x26\x5b\x46\x2a\xd4\x95\x20\xa2\xc8\xe0\x12\x05\x28\xa2\x6a\x22\x38\x8a\x05\x2f\xe1\xf0\xe0\xe0\x40\x0f\x5e\xed\xec\x68\x35\x3c\x56\xd4\x92\x94\xe2\x31\xa1\xb4\xa5\x8b\x0b\x4e\x5b\x9a\xe8\x6b\x5c\x28\xbd\x05\xa7\xdd\xd2\xe8\x95\x45\x9f\x24\x7a\xe5\xb0\xea\x65\xf6\x06\x16\xd5\xab\x3e\x22\xcb\x73\xc6\xae\x16\x73\xc0\x5b\x81\x65\xbe\x91\x0f\x45\xee\xb2\xa1\x5a\xcc\x91\x37\x7a\x4a\x15\xa8\xe7\x45\xde\xa7\xa4\x45\x3e\x50\xd3\x03\x2a\xce\x8b\x4a\xbc\x2c\x28\x56\xdb\x52\x31\x25\xd5\xb4\x8f\x8e\x89\x04\xf4\x5c\x8e\xe8\xa3\x42\xbe\x0b\xe8\x98\x2c\xca\x4c\x14\xac\xec\x94\xa2\x42\x62\x34\x67\x82\x52\x40\x4a\xb6\x1d\xb2\x92\x3a\x2e\x1f\x14\x65\x25\xe4\x0a\xd8\x04\x3e\x2c\xe7\x78\xca\x39\xe3\x8d\xaa\x1b\x50\xef\x38\x9b\x15\x15\x26\x1c\xbf\x60\x26\xe2\x28\x63\x65\x89\x9a\x8a\x09\x29\x28\xe6\x91\x15\x33\x20\xad\x70\xc3\x74\xe4\xdc\x31\x92\x95\x51\x3d\x8e\xd5\xdc\x27\xef\x89\x7c\x94\xb0\xab\x4d\xe4\x94\x78\x03\x8a\xee\x38\xb2\xee\xd3\x52\xe5\x19\xa3\x99\xad\xa0\x7e\xa9\x58\x19\x6b\xa6\x76\xa9\xbe\x44\xcf\xd2\x2f\xc9\x94\x54\x6f\x6f\xca\x77\x9c\xcd\x91\x8b\x65\x1c\xa1\x44\x13\x0d\x36\x51\xc4\xd2\x2f\x9f\xcc\xd8\xcf\x5d\x24\xfc\x46\xd9\x0d\xf2\x8c\x54\xf8\x36\xfd\x12\x5b\xb3\x92\x36\xe2\x09\xb8\x35\x4a\xa1\x95\xb4\xbd\xe0\x9c\x2c\x93\xa2\x52\x9f\xea\x55\xe0\x36\x24\xf1\x33\x32\x8f\x3d\x18\x46\x89\x8c\x82\x4a\x46\x2c\xa8\xf4\xec\x77\x2b\xf9\xe2\x6d\x2a\x69\x4f\xae\x70\x59\x29\x88\xc9\x84\xf1\x53\x92\x4d\xe3\x2b\x9f\x2f\x57\x30\x1e\x43\x74\x76\x12\xb9\x5c\x90\x90\x92\x22\x87\xb1\xc4\xfc\xe9\xea\x73\x8f\x3a\xc8\x61\x9f\xae\x3e\x1d\x7c\x4e\x04\x3b\x97\x94\x1d\x93\x0a\xe3\x01\xec\xc1\x55\x52\x2d\xd2\x4a\xf0\xf8\x70\xf0\x39\x84\xb2\x63\xfd\x47\x23\xc1\x05\x15\x92\x59\xd6\x35\x64\x57\xef\x05\x11\xd8\xb2\x3e\xe9\x5d\xf1\x1f\xb8\xac\x3c\x6f\x53\x3f\x95\x5b\xa0\xfd\xff\xd9\x8e\xdd\x56\x25\x38\x48\x17\x42\xb0\x12\x04\x83\x29\x9b\xe1\x9c\x5c\x22\xc4\x13\xce\x66\xa0\x4c\x12\xaa\x29\x5b\xd0\xbc\x8c\x84\x9d\xc4\x71\xc2\xb1\x9a\xaa\xdd\x58\x8e\x4e\x6a\x7e\x51\x96\x11\x29\x4f\xa9\x4c\x53\xc5\x3b\x87\x73\xd3\xa2\x12\x8c\x2f\x13\x8e\x73\x4a\x32\x54\xab\x88\xef\x56\x43\xb8\x29\xca\x9c\xdd\x24\xa2\x10\x14\x87\xc6\x49\x2a\x5a\x3f\xb0\x57\xa4\x9a\xc6\x77\xab\x46\xb9\x9b\x95\xb1\xf2\x78\x4a\xca\x4b\xb4\x0b\x93\x92\x9b\x10\x5a\xa1\x1e\x6a\x80\x92\x3c\x3f\xbd\xc6\x52\x48\x67\x86\xa5\x74\x47\x73\x36\x57\xe3\xa3\x21\x74\x04\x02\x16\xaa\xde\xec\xb2\x05\xe7\x58\x0a\x4d\xea\xa0\xc3\xbf\x7b\xef\x0d\xa4\x40\xe3\xf4\x7a\x70\x36\x17\x4b\x33\xee\x59\x37\xbf\x12\x8a\xe5\xa5\x98\xc2\xaf\xf0\x73\xcb\xe8\xac\x1a\x38\xdb\x2d\x5f\xd6\x83\x8c\x3a\x93\xaa\x2a\x2e\x95\x77\x59\x50\x31\x84\xff\x7e\xff\xf6\x4d\x32\x27\xbc\xc2\x38\xc7\x96\xbb\xf5\x51\xd7\x0a\x39\xa8\x57\x09\xca\x93\x42\x8c\x03\xb8\x0b\x9d\x8a\xa1\x45\xf1\x60\xbe\xa8\xa6\x7a\x61\x8a\xad\x96\x74\x2b\xed\xe6\xf5\x36\xa2\xd6\x20\x1a\x06\x7b\xba\xf2\x0d\xe0\x7b\x72\xe9\x96\x9f\xf6\x18\xa1\x39\xf9\x1e\xc3\x5a\xfb\x67\x13\x3b\x1a\x1e\x76\x33\xac\x83\x20\x83\xf9\x9a\x70\xa8\x66\x84\x52\x6d\xe1\xdb\xe1\x56\x8f\x25\xea\xdd\x5d\x88\x9b\xd9\x9a\x18\xfb\x72\xe0\x28\xdd\x13\xd7\xfb\x35\x13\x06\x46\xff\x5a\xba\x17\xfd\x14\x75\xf8\xf5\xe8\xa7\x9e\x7d\x5c\xa9\x5d\x25\x78\x51\x5e\x16\x93\xa5\x8b\xa0\xde\xd8\xeb\x28\xe7\xac\x9c\xb0\x3a\xba\xb8\x40\x92\x89\xa4\x06\xd4\x72\x70\x73\xce\xe6\x95\x1f\x5b\xe8\x47\x21\x8f\x24\xe3\xcc\x12\x28\x23\x79\x51\x5e\x8e\x40\xf0\x05\x0e\xcd\x43\xb5\x5b\x8d\x94\xa0\xec\xa3\xa2\x9c\x30\xfd\x44\xaf\xd4\xcd\x60\x74\xfc\xe4\x64\x05\xda\xf4\x2d\x9d\xff\x5b\x50\xfa\x9a\x2d\x4a\x11\x84\x79\xcd\x34\xbc\x69\x22\x3a\xed\x57\x14\xdd\x89\x8c\xda\xd4\xd7\x94\x2c\x65\x40\x95\x92\xec\x2a\x49\x8b\x32\x57\x83\x1c\x2d\xf5\x70\x7d\x2c\x67\xbd\xd8\x12\x1b\x70\x3a\x06\x54\xe6\xc8\xdb\xe1\xbe\x62\x54\x62\xd8\xd3\x12\xb9\x16\x45\xc6\x91\x08\x3c\xa5\x38\x93\x72\x3d\x67\x24\x47\xfe\x8e\x94\xe8\x47\xbb\x7a\xdf\x0b\x00\x63\x67\x6c\xd5\x05\xb6\xce\x6b\xa2\xbc\xb8\x8e\x86\xf5\xd7\x3b\x50\x5a\xf2\x86\xcc\x70\x04\x3a\xc0\xd8\x9f\x93\x12\x23\x58\x0d\xfd\x5c\xc8\xc1\x08\x7b\x10\x45\xe6\xed\xda\x30\xed\xe1\x94\xa4\x64\xb9\x2f\xb5\xc5\xa3\x63\x2d\x38\x80\x88\x92\x14\xa9\x03\xb2\x0f\xe8\x7e\x49\x66\xfe\x0a\xbd\x35\xca\x21\x89\x1c\x52\xbf\x1e\x7c\x03\x1a\x2a\xc4\x1c\x79\xb5\x81\x0c\x33\xea\x9b\x52\x42\x11\xb3\xe9\x66\x52\xec\xb0\x87\xd0\xa2\x63\x9f\x6d\x88\x21\x79\xbe\xdf\x31\x1a\x80\x95\xc7\xb4\xc8\xae\x46\x26\x9c\x70\x0c\x9c\x95\x2f\xf2\x3c\x0e\xc9\x9d\x91\xcb\x12\xc5\xc7\x8b\xf3\x81\xbf\xac\xe8\x45\x9e\xc3\x07\xa6\x22\x8a\xa8\x59\x4b\xa0\xce\xd6\xb0\x1d\x9f\x11\x2b\xdd\x1f\x2a\x27\xe6\x07\x7f\x68\x42\x93\xbb\xc6\x11\xaa\x10\x69\x68\x7d\xa0\x33\x73\xa4\xfe\xd6\xd1\x8d\xf5\xd2\x86\xa0\x63\x5a\x74\xf9\x64\x0f\x9d\x13\x91\x69\x56\x98\x70\xcc\x71\x53\x39\xbb\x29\x25\x29\x95\x57\x64\xd1\xef\x2e\x51\x88\xa2\xbc\x94\x91\x1a\x8c\xdd\x50\xae\x7e\x2d\x5f\x49\xdf\xa6\x77\x00\x14\x67\xa5\x40\x7e\x4d\x68\xec\x70\xbe\x19\x37\xf4\x69\x4f\x2e\x4e\x5f\x5e\x9c\xbe\x7f\xf5\xdb\xd9\x9b\x0f\xa7\x17\xff\xf3\xe2\xbc\x71\x92\x35\x55\x9e\x9f\x7c\x12\x90\xdc\x72\x67\xcd\x02\xbc\x9d\x31\x98\xa6\x72\x13\x93\x71\xf9\x81\x9a\x0c\x58\x54\x3e\xd3\x10\x82\x14\x65\x68\xa0\xc8\xd6\x19\xb1\xe7\xe5\x85\x59\x10\xa1\x34\x8e\xf4\xe0\x68\xa8\xc3\x74\xb7\xca\xc2\xc5\x96\x20\xd4\xd8\x0e\x08\x6c\xbe\x35\x00\x36\x6f\xcd\x27\x79\x6e\xa7\x3b\xba\xee\x06\x57\x24\xcf\x3f\x5e\x9c\xc3\x18\x74\x71\x80\xe4\xf9\xf3\x05\xa7\x7d\x95\x81\x06\x48\x77\x4d\x47\x43\x33\xb9\x6d\xa7\x2a\x38\x01\x5f\xfd\xac\x55\x00\x73\xf5\xef\x9f\xff\x34\x20\x88\xca\x4f\xab\x77\x58\x4a\xf3\x89\x5b\xe9\x70\xbb\x02\xe6\xab\xb1\x8c\x3b\xba\xa9\xd6\x4b\xaf\xd5\x24\x32\xf4\xe7\x44\x90\x76\x99\xa9\xd7\x36\xdc\x05\xf4\xd3\xea\x53\x6b\xe9\xed\x32\x4a\x89\x5e\x69\xec\xad\x5f\x75\xbc\x4d\x24\xf4\x6b\x69\xdb\xb7\x26\xca\x7a\x32\x86\x83\x67\xc1\x00\x56\x1a\xec\x21\x95\xb5\x75\xdc\x86\xc5\x4a\x70\x4b\xb3\x9e\x1f\x19\xc2\x41\xab\x06\x77\x2f\xd6\x3c\x7d\x0a\x1f\xde\x9e\xbc\x1d\xc1\x8c\x2c\x53\x84\x29\x29\x73\x8a\xda\xe7\xc1\x14\x39\x26\x49\x62\x46\x4a\xb5\x64\x14\x13\xc1\x49\x86\x31\xb6\x33\xbd\x16\x73\xfd\x1a\x44\xc8\xc8\xdd\xdd\x96\x1b\x98\xc8\xc0\x4e\x71\x35\x60\x95\x83\xc4\xb5\x2d\xa9\x2e\xc6\xb2\x0c\xae\x09\xe3\x10\x53\x14\x50\x80\x64\x3d\x14\xf0\x6b\x0b\x8b\x8e\xe1\x9f\xc1\xde\x5e\xe1\x54\x71\x95\xd1\xe5\xb4\xce\x46\xeb\xf1\x9f\x8a\xcf\xae\x1e\xe5\xb4\xce\xdc\xd5\xe7\xee\x2e\x3c\xc9\x69\x40\xae\xa3\x15\xe1\x3b\x4f\xe1\xfb\x95\x5e\xda\xb9\x7c\x21\xc3\xb5\xcd\x35\x41\xcf\xb0\xef\x9c\x0d\xb3\x03\x7b\xa0\x73\xdb\xe8\x56\xa0\x4b\x76\x8f\xb1\x2f\x6a\xd5\x7b\x08\xfe\x95\x03\x68\x1b\x4a\x56\xfe\x1e\xef\x14\xcc\xc3\xcd\x2b\x54\xc0\xbf\x39\xb5\x73\xbd\x71\x9f\x18\x19\xdf\x2b\xc7\xf2\xd3\xab\xce\xcc\x0a\x54\x29\xf7\xdc\x4b\xac\xf4\xb3\x53\x27\xaf\xd2\x4f\xf4\x17\x2f\x9d\x92\xcf\x2f\xf0\xf7\xfb\xa6\x53\xce\x34\xbc\x69\x4a\xd3\x6e\x3a\x65\x95\x3a\xd1\x75\xe8\x7a\x5a\xf5\x95\xb9\x95\x41\xbd\x31\xb7\x0a\xad\xcc\xa7\xca\xab\x08\xac\x89\x4a\xbd\xe4\xc3\x0f\x45\x2d\xa8\x30\xff\x58\x9f\xcc\x08\x92\x52\xec\x4d\x67\x3c\x98\xfb\x7a\xec\x7d\x32\x1b\x91\xb2\x7c\xe9\x05\xc4\x6e\x5a\xbd\x05\x04\x09\x83\x07\x11\x75\x08\x62\x0b\x20\x12\x4c\x1e\x80\xe9\x02\x04\x10\xc9\x95\x47\xde\xc3\xc1\x37\x43\x96\x53\x3f\x5f\x03\x27\xa2\x6f\x61\xfe\x97\xe3\xd4\x3b\xce\x2e\x39\x56\xd5\xf7\xe2\x56\x7c\x78\x70\x00\x7f\x91\x4c\x93\x56\x29\xa3\xdb\xfc\x68\x29\xb0\x82\xa7\xf2\x59\x55\xfc\x81\xea\xeb\x20\x11\xec\x65\x71\x8b\x79\xfc\xf3\x40\x6e\x21\xff\x16\xfd\xa0\xfc\x7d\x5f\xfc\xf1\xdd\x34\x71\xc2\xf8\x8c\x08\x89\x31\xf6\x78\xf9\x83\xb2\xee\xd8\x2a\xc8\x9f\xc3\x3f\x5f\x3f\x7f\x54\x26\x9e\x9c\xc3\x05\x11\xdf\x59\x05\x25\x46\xc9\x42\xbb\xf3\xc8\xef\x3f\x2a\x03\x3f\xfe\x99\x0c\x5c\xcc\x7f\x78\xf6\xa9\x15\xfc\x59\x36\xac\xf9\xf7\x81\x09\x42\xd7\x30\x70\x27\xfc\x6f\xb0\x5d\xd8\xb5\xae\x86\x5c\x07\x5d\x26\xa9\x94\xd9\x4f\xdc\xca\x26\x9e\x43\x54\x57\xa6\xf6\x27\x9c\xfd\x81\x65\x04\x23\x75\xa4\xea\x04\x68\x66\xda\x35\xc2\xf3\xaf\x2f\x76\x06\x84\xd5\xf5\xce\xa6\xc6\xe9\x55\x37\xdf\x0b\x36\x0f\x6a\x98\xf2\x91\x53\xbc\x84\xd1\x9f\x40\x14\xe1\xa2\x45\x15\xe1\x6e\x4d\xf5\x11\xeb\xc3\x35\x75\xba\x1c\xb7\x89\xba\x13\x35\x2a\x20\x4f\x3f\xec\xa8\xf9\xda\x51\x4d\x2e\x63\x69\xd4\x43\x9a\x5c\xc4\x7f\xd9\x7d\xda\xa3\xc6\x3c\xe2\xa1\x4c\xa3\x9c\x12\x70\xdf\xc1\x8c\x7a\xd9\x94\x94\x36\x31\x9c\x04\xbc\xbe\xc2\xe5\x08\x6e\x13\x5a\x94\x57\x43\x98\x72\x9c\xd8\x6f\x3e\x0f\x6f\x93\x39\x11\xd3\x86\x83\x61\xd9\xbc\xf3\x94\xaa\xc9\x5a\xbf\x19\x57\xf6\x75\x6b\xcc\x3a\xde\x9c\x7e\xa7\x93\xab\x80\x30\x73\x22\xb0\x31\xdb\xd3\xe7\x7e\xe6\xcc\x2f\xa0\xd0\xd3\xbe\xf0\x38\xc2\x53\xb7\xf0\x3c\xc2\x2f\x22\x98\x43\x09\xb7\x8a\xe0\x02\x19\xe9\x0f\xe7\x6c\xa2\xe9\x1c\x72\x7c\x7a\xaa\x62\xb1\xa6\xa6\x01\xd5\x62\x32\x29\x6e\xb1\x82\x31\x7c\x8a\xe0\x1f\x47\xd1\x10\x22\x78\xad\x3f\xfe\xae\x3f\x3e\x1c\x45\xaa\x02\xd6\x55\x5b\xb3\xd3\xbb\x8a\x6a\x2e\x02\x18\xd7\x43\xeb\x7a\x9a\x79\x5f\xfc\x81\x30\x86\xd4\x24\x31\xaf\x89\x98\x26\x73\x76\x13\x1f\x1e\x0c\xe1\xaf\xf0\x17\x88\x0b\xd8\x83\x43\xf7\x70\x5e\xcd\xf8\x15\x0e\x0f\x5a\x1a\x29\xdf\xf8\x89\x8f\x46\xda\x52\xf0\x1a\xc4\x06\x18\x87\x5b\xc1\x68\x03\x51\xab\xe0\x6c\x51\xe6\x6a\x58\x0b\x8a\x69\xbc\x32\xa3\xf5\xda\xf7\x20\xd2\xff\x45\xcf\x3a\xa4\xa7\x22\x1a\x5e\x37\x42\xd8\xa6\xbe\x46\xb2\xfa\xdd\x1e\x44\x4f\x2b\xcc\x14\x88\x1a\x82\x2d\x73\xa9\xba\x9d\xd3\x22\x20\x57\xe1\x57\x60\xac\x1c\x61\x3c\x1e\xc3\x41\x50\x3f\xdb\xbe\x22\x53\xe4\x23\x88\x4a\xb6\xdf\x54\xee\xb7\xad\xc4\x4c\x0f\x1d\xdb\xf4\xe3\x93\xe8\x0d\xab\x57\x52\xa7\xdb\x9e\x8f\xb7\x2a\x45\x75\x9d\x3b\x5c\x9a\xf4\xaf\x39\x6d\x2a\x94\x6b\x96\x65\xf1\x9c\x96\x82\x2f\x87\x70\x57\x07\x19\x23\xc8\x6b\x92\x94\xdb\x35\xe5\x60\xfb\x2c\x38\xe8\xb4\x5b\x9a\x7a\x68\x4b\xc7\x03\x6b\xa4\x83\x84\xe3\x35\xf2\xca\xf4\x3b\x6d\x62\x73\xc4\xec\x89\xb0\xe1\x70\x9b\xbd\x72\xe5\x3b\x8a\x1f\xae\x06\x79\xab\x71\x15\xc0\x29\xc7\x85\x95\xb8\x1d\x00\x69\xea\x39\x0a\x52\x50\xe9\x1d\xfa\xfc\x5e\x51\x5e\x1e\x11\x2e\x79\x34\x37\xa5\x90\xd1\xc6\xea\xc4\xd0\xd8\x3f\x95\x5e\xcc\xe2\xd4\x4e\xf4\x58\x3e\x8c\x73\x6a\x99\xa4\x4e\x19\x9b\x00\x6e\x77\xb7\x03\xb8\x54\x56\x2f\x61\x37\x02\x5e\x4f\x7c\xb7\xea\xf6\x17\xfe\x52\x76\xbb\xb5\x1a\x6f\xb5\xc7\x28\xa8\x93\x02\x69\xfe\x95\x8d\x12\x61\x1c\xaf\x8a\x26\xa3\x07\xc5\x72\x9b\x81\x6f\x2c\x92\x7c\x8b\x24\xe0\xdb\xb1\xca\xe6\x57\xdf\x87\x5d\x9d\xf9\xd4\xa0\xdb\x97\x6d\x74\x07\xb4\xa8\xdd\x41\x17\xd3\x54\xc6\xa4\xcd\x7a\xdb\xa4\xa9\xe5\xc5\x3c\xff\x65\x39\xbf\xce\x98\x7c\x86\xf4\x48\x33\xe8\xe0\x71\x0b\xc0\x86\x04\x63\xb9\xd6\x95\xd5\x9e\x4c\xfb\x08\xd7\x85\x6d\xe4\x52\xa3\x5f\x3e\x35\x4a\xec\x4d\xd4\x19\x19\x5f\x16\xb5\xdd\x67\xd3\xd5\xf5\x88\x88\xfd\x46\xad\x6d\x82\xca\x0e\xaa\xb4\xef\x6d\x7b\xf4\x4a\x2c\x69\xd3\xe2\x77\x53\xe4\x62\x3a\xb2\xba\x60\xbd\x34\xfc\x45\x85\x3f\x75\xa8\xf3\x57\x53\x27\xd6\x04\xc9\x20\xf5\x52\x05\x30\xc7\xda\x4b\xeb\xc9\xca\x65\xef\x98\xe6\xbf\xaf\xe2\x40\x51\x5e\xee\xa7\x84\xaf\xe5\x80\x06\xd0\x3f\x59\x46\xe9\x14\x79\x34\xd4\x0b\x1e\x99\x75\xaf\x3a\xb8\xd5\xb7\xc9\xd8\x30\xa8\xbd\xa9\xfc\xda\xb9\xa5\x98\xb1\x7a\x37\xea\x68\x03\xfd\xf7\xbf\xa5\x59\xfe\x4b\xb4\x2e\x3b\x89\x7e\x9a\x60\xfa\x4b\x7a\x18\x75\xc6\x82\xd1\x4f\xe4\x3f\xf0\x97\xff\x4c\xa3\xa6\x9f\xfd\x82\x31\xf1\xf0\xd3\xc9\x26\xb5\x48\xeb\xbe\x78\xdb\x70\x69\xbe\xc7\x9f\x22\xdb\xa5\xad\xee\x43\xc9\xa8\xdf\x3c\xb0\xa1\xc3\x2b\x52\xb9\x8f\x8f\xc8\xf2\xec\xa4\xbe\xcc\xe0\x43\xf7\xba\xce\xeb\x46\x93\x3a\xaf\xe9\xec\x45\x0d\x20\xf8\x3d\xe3\xee\x1a\x74\x4e\xb8\xa6\x45\x2a\xd3\x4d\x58\xf7\x3c\x3a\x6d\x66\xe1\x8d\xdf\x12\xe5\x1d\xf0\xea\x61\xed\x26\xae\x30\x73\xab\xe9\x1b\x79\xf3\xdc\x1e\xaa\xd5\x86\x33\xd2\x8c\x94\xa7\xb7\x45\xdd\x1c\x5f\x79\x7c\xd1\xb7\xf9\x6c\x03\x8e\xf7\xce\x15\x58\xf7\x08\x25\xbb\x07\x1d\xb5\xba\x7b\x9b\x5e\x17\x2b\x05\x96\x42\xb9\xc6\xb5\xdb\xfd\x07\x36\x37\x41\xa2\xbe\x11\x38\xea\x5d\x55\xb3\x77\x1a\x0e\x8c\xec\x3f\xcd\x1b\x66\x5e\x38\xcc\xd7\x7d\x2b\xf2\x71\x3c\x70\x07\x6a\xa0\x5a\x5c\x23\x47\x1d\xf5\x78\xf7\x6d\x5c\x49\xa1\x6c\x17\xb3\xb4\x2a\x5e\x26\x20\x77\xfb\x1f\x3b\x7b\x1e\x35\xda\x17\xaa\x19\x2b\xf6\x6a\x94\x5d\x9d\x8d\x61\x01\xcb\x63\x77\xab\x0b\x2f\x30\x8d\xaf\x6a\x58\x0e\x8a\x40\x9e\x84\xb6\x02\x6c\x84\x09\x6d\x5b\x08\xc8\x6c\x38\xa0\xee\x81\x6e\xa3\x18\x86\xb1\x27\x75\x4a\xa6\xfb\x71\xac\x19\x4e\xd9\x8d\x7d\x65\x2e\xcc\x85\x33\x8f\xc8\x72\x04\x45\xee\x4d\x39\x22\xcb\xb8\xc8\x07\xcd\xfd\xd0\xce\x6a\x58\x87\x91\x85\x2d\x44\xfe\xa5\x96\x60\xb5\x4e\x87\x53\xd8\x77\x06\xb7\xb6\xaf\xa8\xcb\xe4\x5d\x8c\xed\xee\x30\x49\xa5\xc6\xdb\xee\x67\x5b\x9b\xdf\x9e\x95\x13\xe6\xa7\xb7\xe6\x66\x8c\x13\xc1\x9a\x72\xb1\xa7\xc7\xc6\xa1\x79\x7d\x94\xe6\xd6\x57\xc0\x72\x3d\x9f\xcd\xbb\xa7\x37\x4d\x94\xfd\xb3\x75\xe5\xb7\xc3\x8c\x4e\xbc\x4e\x50\x17\x80\xc3\x9a\x60\x0f\xde\xae\x46\xd8\x4a\x4b\xb6\xec\xb5\x07\x88\x2c\x67\x21\x67\x58\x41\xa9\x76\xee\xa2\x12\x89\x93\x5e\x04\x9d\x4c\xeb\x14\x4d\xf9\xea\xad\x0c\xce\xdc\x14\x19\x1a\x57\xd4\x03\xca\x35\x85\x17\x79\x3e\x82\x45\xdb\x35\xbd\xe4\x6c\x26\xad\x61\xd1\x32\x86\x2d\xc8\x70\x4b\x4d\xf7\xb2\xfe\xda\x5b\x6e\x30\xe6\x86\xa6\xba\x03\xac\x3d\xc6\xdd\x48\x4b\xbc\xa9\xaf\x0a\x41\x87\x35\x19\x8c\xab\xce\x50\xa6\xb9\x39\x65\xc1\x78\xd1\x8b\xdd\xf1\xd7\x86\x2f\x4e\xd3\xb0\xe3\x67\x36\x91\xa8\xc4\xa5\xbc\xd4\xf7\xa0\xac\x63\x3b\xd4\xd7\xf2\x3d\x3a\x19\xcd\x4d\xe8\xd1\x1f\x95\x3c\xeb\x5e\x57\x18\x21\x79\x73\x46\xda\xf7\xc3\x2a\xbc\x6e\xa8\xee\xdd\xd6\x48\x77\x77\xc1\x23\xaa\x83\x2b\xde\x5d\xb8\x86\xc4\x7e\x6f\xd0\xcb\xd5\xae\xc9\x3b\xe0\x37\xbc\xba\x41\x87\x1b\x4d\x76\xc1\xbb\x5b\x7d\xbd\x7c\x4e\xd6\xb7\xbe\xdb\x28\xb3\x3d\xca\xc1\xec\xd2\x1c\x80\xaf\xc3\x12\x57\xe6\x0b\x6e\xaa\x83\xb3\xb9\x88\xa3\xd7\xaa\xcd\x1c\x3e\x5e\x9c\x47\x4e\x41\xbe\xbe\x6a\x1e\x92\xe2\x74\xb9\xcb\x31\x81\xe1\xb6\x3d\x4e\x03\x67\x23\x94\x9e\xc5\xac\x76\x76\x7a\x6f\xb5\xaa\xa2\xc8\x10\xea\x9c\xd0\xac\x54\xb9\xb1\x93\xb7\xaf\x13\x13\x87\x77\xb9\x35\x99\x82\x99\x08\x69\x08\x39\xcb\x16\xf2\x69\x72\x89\xc2\x0c\x38\x5a\x9e\xe5\xea\x1e\xbc\x8c\xcf\xd4\x3d\x73\x29\x6e\x9d\xbe\x19\xed\xfd\x96\x57\xf8\x52\xb2\xbc\x50\xdb\x5f\xe5\x5f\xd9\x4b\xc9\xf2\xbc\xeb\x76\x5f\x4a\x96\x4e\x23\xaa\x96\x8a\xe7\x65\x96\xb5\x9d\xdf\x2b\x8d\xf2\x26\xea\x2b\x7d\xfa\xbb\xdb\x83\x6a\x7e\x1c\xe5\x91\x6e\xf5\xd5\x28\xdb\xbd\xa7\xde\xe4\x0b\xcc\xb0\xb8\xc6\x77\x92\x04\x9f\xc7\xcd\x29\x88\xf6\x42\x4f\xc6\xe3\x10\x74\xe0\x76\xd6\x20\x6e\x5b\xf8\x5d\x5b\x3a\x6d\xb9\x04\x12\x71\xe2\x97\x0d\x7c\xbd\x17\x4b\x1d\xdb\x0b\x72\xce\x2d\x12\x41\xd6\x57\xd6\xd3\x19\xdd\xbe\x8e\xbf\x36\x9d\xf4\x68\xb2\x5f\xa1\x5a\xfc\xd0\x9e\x5d\x47\x53\xfd\x60\xff\x30\x1a\x82\xc0\x5b\x31\x82\xe8\xac\x54\x97\xe7\xb5\x0f\x88\x9c\xd4\x4c\xad\x32\x77\xe2\x0c\x75\xd7\xe0\x2b\x90\xfe\xdc\x20\x7d\x5b\xda\x1f\xd5\x69\x61\x94\x32\xb3\xc8\x82\xbc\xac\x45\x8c\xdf\xed\xec\x14\x2b\x26\x05\x15\xc8\xeb\x53\xac\xae\xd6\xec\x6a\x08\xa1\xb1\x0c\xdc\x4d\x15\x29\xce\xd4\x2d\x14\xef\x5c\x2b\xce\x87\x50\x78\x7b\xe7\xc6\xe4\xcc\x50\x2b\xf9\xb1\xee\x7a\x9e\x97\x6b\xc5\x79\x18\xa1\x6b\x56\xe6\x74\x3f\x82\x3d\x28\x86\x50\x2a\xa5\xc8\x55\x45\xb7\x89\xd5\x82\x93\x2e\xf3\x7b\x23\x72\x25\xcd\x81\x23\xb4\x8f\x51\xfb\x89\x3f\x9d\xcd\xc5\xb2\x11\x65\x4e\xf7\xd5\x2d\xf5\x68\x43\xc8\xaa\x50\xb6\x6f\x09\x86\x82\x0b\x82\xf1\xc6\x80\xc3\x64\xcf\x0a\xa3\x73\xb0\x16\x0c\x0f\x05\xf3\xc8\xa2\x91\x1b\x27\x4f\x8a\xdc\xcb\x9a\x34\x57\x52\xb2\xf4\xc5\xc2\x7d\xb1\x84\x29\x64\x20\x10\x4f\x22\xf7\x97\x89\xc4\x1e\x08\xa5\x3f\x1d\x73\x04\xb3\x3e\x31\xb2\x8e\xf2\x3e\xba\xa2\xdb\x24\x3c\xba\x54\xc7\xc9\x10\x66\x58\x55\xe4\x12\x47\xd0\x81\xe1\x01\xd9\x8f\x91\x1e\x0b\x1c\x8d\xc4\xd8\xb4\x92\x6c\x71\x4b\x95\xfb\xda\xa6\x6f\x63\x8d\xcd\xe7\xee\xae\xfe\x27\x11\xec\xbd\xfa\x09\x81\xb8\x33\xb2\xf4\xf7\x1d\x03\xd1\xdf\x7a\x4c\x4b\x49\xb3\xf7\xa0\xb3\x6e\xbf\x85\xc4\x73\xa1\x8f\x72\x0c\x62\xb6\x0d\xe3\x84\xeb\x6d\x43\xeb\xb6\x74\xc7\xed\x22\xbe\x67\x1c\x8f\x49\x04\xd5\x20\xdd\xa2\x5d\xe7\xc9\x97\x7e\x68\x0e\xab\x3a\x89\x53\x36\x10\x3f\x0e\x55\xd6\x78\xcc\x01\xd5\x1b\x66\xa5\xd8\x71\x46\xe5\x69\xde\x23\xe1\x0f\xbb\x9f\x1e\x70\x48\xe5\x18\xe0\x63\xca\xcb\x6f\x18\xd3\x52\x31\xa6\xdc\xa6\x21\xdc\x73\x9d\x8d\xd6\x89\xeb\xbc\x1f\xe7\xf3\x7f\x8e\xc8\x39\xeb\x72\x0b\x79\x12\xaa\xbd\xac\x28\x55\xc2\x9f\x94\x14\x65\x46\x17\x39\x56\xf6\xf7\xed\x9e\xfd\x2b\xe6\x26\xba\x2e\xff\xa8\x57\xdf\xb4\x88\x5e\xb2\x6c\x51\x61\x6e\x7c\x8c\xce\x2e\x1e\x18\x78\xf6\xf7\x67\x08\x36\xd7\x67\x88\x7b\x76\x8b\xd0\x41\xf2\x73\x88\x40\xb0\x79\x4a\xf8\xbe\x7e\xa2\xb4\x38\x68\x0b\x76\x76\x52\x7b\xd6\xb2\xbb\x7b\xff\xba\x7f\x07\x3d\xfb\x78\x5b\x88\x4d\x4d\xae\x0a\xa1\x5b\xff\xff\x3b\x83\x57\xac\xb9\x75\xb5\x36\xa0\x8d\x8a\x72\xbe\x10\xad\xa3\x51\x8b\xdf\x58\x49\xca\x6e\x23\xb7\xc0\xa6\x64\x32\xea\x39\xb2\x0a\xc4\x26\xb3\x12\x27\x02\x96\xd3\x8f\xe8\x82\x6f\x39\xdb\x08\xdd\xaf\xbc\x9b\x33\x18\x6c\x85\x31\x5e\xd9\x09\x13\x41\xf8\x25\x8a\xe4\x9a\xd0\x05\x3a\x10\xd4\x77\x8f\x89\x55\x7d\x0c\x16\x39\xeb\x54\x05\xa0\x29\xa3\x39\xf2\x11\x44\xe6\x40\x53\x9f\x09\xd7\x31\xfb\x6a\xe7\xff\x03\x00\x00\xff\xff\xf6\x8a\x1d\x72\xc2\x53\x00\x00")

func assetsScriptScriptJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsScriptScriptJs,
		"assets/script/script.js",
	)
}

func assetsScriptScriptJs() (*asset, error) {
	bytes, err := assetsScriptScriptJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/script/script.js", size: 21442, mode: os.FileMode(420), modTime: time.Unix(1511726831, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsStyleStyleCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5a\xdd\x6e\xe3\x28\x14\xbe\xcf\x53\x20\x55\xab\xb6\xab\x3a\xe3\xb4\x4d\xda\x71\x6f\xe6\x01\x56\x7b\xb3\x4f\x80\xed\xe3\x04\x15\x83\x05\xa4\x49\x66\x95\x77\x5f\x81\x8d\x7f\xb0\xb1\x93\x34\xa3\xee\xae\x3a\x1a\x19\x03\xe7\x7c\xe7\x87\xf3\x43\x1c\xf3\xf4\x80\xfe\x9e\x21\x94\x71\xa6\x82\x0c\xe7\x84\x1e\x22\x24\x31\x93\x81\x04\x41\xb2\xb7\x19\x42\x31\x4e\xde\xd7\x82\x6f\x59\x1a\x24\x9c\x72\x11\xa1\x9b\x74\xa9\xff\xde\x66\xc7\xd9\x3c\xd9\x60\x11\xec\x04\x2e\x0a\x48\x0d\xa5\x1d\x17\xa9\x79\x11\xa1\x58\x00\x7e\x0f\xf4\x8b\x37\x3b\x61\x5e\xd9\x19\x4c\xa9\xa1\x41\x39\x4e\x41\x98\xdd\x29\x91\x05\xc5\x87\x08\xc5\x94\x27\xef\x66\x1b\x49\xd5\x26\x42\x8f\x61\xb1\xd7\xc3\x0d\x90\xf5\x46\x35\xe3\x0a\x92\x12\x98\xc9\x02\x0b\x60\xea\xcd\x8a\x23\xc9\x4f\x88\x50\xe8\xc8\x40\x72\xbc\x86\x08\x6d\x05\xbd\x9b\xcf\xbf\x99\x91\xfc\x56\x22\x98\xcb\x8f\xf5\xbd\xb3\xbc\x24\xb2\x08\xc3\xdf\xcc\x7f\x7a\x16\x33\x92\x63\x45\x38\x0b\x18\xce\x21\x42\x82\x2b\xac\xa0\x3b\x93\x6e\x85\x79\x88\xd0\x42\x76\x67\x88\x82\x72\x2a\x48\xf8\x96\xa9\x08\x11\x96\x11\x46\x5c\x02\x8a\xe4\x84\xad\x83\x6c\xcb\x92\x92\x0e\x25\x0c\xb0\xd0\xfa\xfa\xf1\x0e\x87\x4c\xe0\x1c\x64\xc5\xba\xb4\xa0\xe0\xb9\x79\x40\xa5\x32\x32\x2e\x72\x8b\xed\x2e\x4c\xa1\x94\xec\x38\x43\x48\x71\xef\xba\xa7\x55\x6b\x65\x65\x19\x0d\x23\xc6\xa5\x79\x0a\x2e\x49\x09\x47\x00\xc5\x8a\x7c\x40\xdb\x26\xcf\xda\x24\xdd\x5d\x51\x14\x43\xc6\x05\x3c\x74\x69\xb5\x07\x41\x46\x28\x05\x97\x3e\x8e\x25\xa7\xdb\x52\x2b\x14\x32\x55\x19\xf2\x04\x56\x86\x50\xc2\x99\x02\xad\xdd\xdb\xdb\xb7\x31\xb7\xb2\x36\x1d\x77\xf2\x53\xa0\x0f\x50\x58\x2d\xe3\x24\x7d\xd6\x14\xe2\xad\x52\x9c\x99\x75\x56\x82\xa7\x55\xe9\xc0\xda\xae\x81\xfb\x32\xe6\x22\x05\x11\x21\xc6\x99\xd1\x40\x81\x53\xcd\x33\x42\x61\xed\xf8\x2d\x17\x5f\xbc\x76\xce\xc2\x6e\x53\x79\xd3\x00\xa4\xef\xdf\xbf\x9b\x95\x5b\x21\xf5\xb8\xe0\x84\x29\x10\x0d\xc4\x68\xc3\x3f\xfc\x02\xbd\xbc\xbc\xb4\x96\x66\x3c\xd9\x4a\xb3\x94\x6f\x95\x16\xc3\xd8\xe8\x38\xbb\xc1\x69\x1a\xb4\x24\x6e\x8c\x9a\x91\x3d\xa4\xa5\x7c\x4a\xf1\x5c\xab\xbf\x44\x2e\x4a\xf1\xed\xb0\x32\xce\xf3\x73\xf7\xcc\xdb\x71\xa9\x9d\x40\xe0\x94\x6c\x65\x84\x1e\x1f\xcb\xd7\x39\x16\x6b\xc2\x2a\x47\x69\x34\x36\xa4\xcf\xbe\x6c\x4e\x00\x39\x2d\xac\xf4\xd4\xe8\x8b\x34\xb7\x4d\xa8\xc9\xf1\x9a\x81\xd2\xa1\xe6\xd6\x8d\x35\xae\xdf\x0c\x04\x22\x2b\x6b\x6b\x42\x40\x01\x58\x69\xd9\xaa\x47\x67\xbe\x51\x7f\x02\x35\x4a\xbe\x0f\xe4\x06\xa7\x7c\xa7\x5d\x2a\x44\x2f\xc5\x1e\x89\x75\x8c\xef\xc2\x07\x54\xfd\x9b\x3f\x19\x78\x46\x03\xd5\xfe\x66\x17\x0a\xe7\x0b\xd9\x0a\x49\x2d\x93\x8f\x7b\x50\x4b\x34\x07\x82\xb6\x7d\x0f\xc3\xf2\xbe\x4c\x32\xe5\x69\x0e\x0a\xcc\xc0\x43\xb9\x76\xfa\xe1\x10\xa2\x78\x11\xa1\xe5\x6b\xdb\x51\x02\xd7\x09\x0d\x22\xf2\xd3\x78\x4d\xe5\x62\x31\x37\x61\xe6\x47\x0e\x29\xc1\xe8\x2e\xc7\xfb\xa0\xf2\xcd\x95\xde\x75\x6f\xc0\xf4\xe1\xd5\x1e\x9c\x60\x9a\xdc\x99\xe4\x11\x20\x73\x72\x8d\x4e\x6d\x44\xb3\x8c\x8f\x6d\x16\x84\x9d\xc7\x62\x15\x56\x54\x2c\x55\xc3\x73\x59\xb2\x7c\x0a\x2d\xcf\x63\x93\x68\xbf\x48\x8d\xcd\x39\x5e\x85\xc5\x29\x6a\x75\xd1\x5e\x5f\xab\x5e\x0e\x97\x2a\xb5\x5d\xca\x8c\x68\xd0\xc6\xf0\x3e\xed\x45\x49\xfa\x38\x9b\x83\x10\xfc\xeb\x4c\x75\x6e\x15\xd7\x0a\xb8\x5a\xb8\x9a\x83\x82\xbd\x0a\x30\x25\xeb\x4e\xf8\xa9\x24\x10\x3a\x19\x4c\xba\x81\xa3\x88\xeb\x7b\x81\x8f\xc1\x59\x4e\x40\xa4\x32\xbb\xf5\x43\x20\xd5\x81\x42\xa0\x0e\x05\x34\x29\xc7\x9b\x9d\x8e\xb3\x9b\x94\xef\x98\xf6\x1c\xf9\x15\xa6\xbe\x04\xf1\xb8\xc9\x1c\x79\xae\x6e\x31\x1f\xfd\x33\x0c\xd6\x22\x31\xb7\x8f\x23\x15\xee\xc8\x41\xe9\xd6\x91\xb5\x9a\x16\xab\x5e\xa2\xee\x1a\x73\x18\x43\xc4\xb8\xba\x8b\x28\x96\x2a\x48\x36\x84\xa6\xa5\xc0\x35\xcb\xca\xa6\xc5\x1e\x49\x4e\x49\xda\x2e\x52\x07\xa9\x8d\xe6\xe2\x2c\xd4\x7f\x9e\x72\x70\x50\x41\xbf\x57\x2a\x32\xab\x02\xf8\x00\xa6\xa4\xf5\x17\xcf\x96\xfa\xc9\x34\x4b\x17\x75\x88\x75\xbc\x28\xeb\x4f\xed\x98\xb5\xd7\x95\x7a\xf7\xf1\x76\xdb\x97\xea\x6c\x98\xf3\xb2\x58\x96\x49\x68\x02\x35\x61\x19\xd7\xb6\xee\xef\x0f\xcf\xda\x1f\x45\x38\x53\x95\x2d\x9a\xe6\x04\x79\xba\x13\x9b\x29\x4b\xeb\x50\xc0\x42\xfb\x9d\xda\x9c\x03\xd8\x79\x95\x11\xa0\xa5\x8b\x67\x94\xeb\x7a\x51\x1f\x91\x56\xc0\xe8\x94\xe0\x9f\xe4\x42\x71\x0c\x34\xca\x88\xb0\x6e\x5c\x89\xed\xd6\x80\x5d\xd6\x67\x1a\x64\x84\x73\x73\x7e\x3a\x8c\xab\xf6\xe5\x86\xf1\xe0\x4b\x23\xae\xb5\xee\x22\x3c\xa9\x10\xea\xe3\xbd\x7e\x44\xf5\xb3\x38\x27\xa8\x76\xa8\x6c\x16\xad\x33\x33\xd8\x95\x39\xb1\xb3\xd3\x09\x2f\xc2\xd1\x0a\xa2\xd5\x89\x3d\xb5\x1b\xe2\x9d\x6d\xa4\x43\x93\xa7\xe6\x8a\x17\x03\x97\x17\x75\x1f\x6a\xec\x18\x3a\x77\x0c\x0e\xac\xba\xfb\x7c\xf5\x45\xf4\x56\xa3\x5f\x33\xb4\x0f\x81\x04\x2c\x92\x4d\x1d\x42\x46\xfc\x69\xbc\x19\x7e\x0c\xdd\x1b\xb0\xd7\x29\x3f\xf3\xde\x22\xe8\x04\x62\x13\x54\xfb\x1e\x61\x35\xd8\x5f\x2f\xec\x65\xcb\x88\x6c\xde\xcb\x80\xfe\x26\xd8\x13\x35\x7c\x3d\xe0\xd5\x48\xd7\x9d\xad\x42\x5e\x87\xf5\xf1\xdf\xb8\x06\xd0\x0b\x06\x2f\x01\x9a\x0b\x47\xa3\xbe\x4a\xc5\x02\xe4\x96\xaa\xff\x49\x7d\x38\x24\xd4\xf5\xcb\xfa\x31\x26\xe7\x94\xf6\x0e\x1d\x3b\xde\x80\xa9\x2d\xae\x51\x34\x76\x22\xd7\x2a\xec\xea\xd3\x26\xe4\x09\x1c\x97\x17\x8e\x3e\xc2\xda\xee\x84\xad\x1f\xbc\x0b\x20\x2f\xd4\x61\x64\x5a\xb7\x55\x17\x16\x7c\x8d\xf4\xcb\xba\x99\xf4\x23\x3d\x19\xc8\x35\xec\x64\x4e\x42\x84\x88\xc2\x94\x24\x93\xa8\x7a\x66\x99\x80\x79\x7d\x33\x36\xd2\x77\xbb\xee\x09\xb3\x7f\x5e\x5f\x93\x2c\x7e\x99\xcb\x7e\xa2\xed\x99\xd2\xca\x78\x07\xe4\xdd\xcd\xaf\x16\x2b\x6c\xb6\x5b\x4e\x9c\x89\x8a\xe5\x2f\xd0\x71\x25\xcb\x89\x57\x5d\x65\x9b\x35\x7e\xd5\xd5\x29\xe4\xbf\x22\xc5\xf5\x82\xed\x44\xfe\xea\x03\xbe\x7e\xfa\x1a\xe1\x71\x4e\xf6\xea\x92\x69\x86\x99\xe0\x3f\x81\x8d\x78\x33\x42\xbc\xc0\x09\x51\x87\x08\x85\xf3\xe5\x80\x9d\x9a\x21\x36\x3f\x51\x4a\x4f\x8b\x3c\x5c\xc2\x9f\x40\xae\x55\x23\xd6\xa5\x86\x6d\x12\x9d\xcd\x0a\xc7\x14\x3a\x2b\xf1\x56\x71\xef\x42\x95\xf6\x9a\xd3\xa1\x1c\xdc\xc6\x6d\x8a\xf2\x96\xaf\xb8\xfd\xb2\x8f\x8f\x39\x7f\x2d\x66\xf7\x97\xfe\x48\xee\x35\x24\xa1\x20\x1f\x26\xe6\xed\xa9\x9d\x5c\xd7\x64\x8b\xa1\xbb\x8e\xd3\x98\x9c\xf2\x4b\xf1\x79\x04\xa7\x63\x8d\x37\xbc\x74\x3a\x89\x49\x86\x9f\xa9\x59\x4e\xb9\xea\x1e\x67\x8f\xf0\x85\xac\xdd\x0b\xa4\xe3\x6c\x1e\xe3\xc3\xbf\x25\x9c\xfa\x02\xc0\x44\x90\xed\x48\x70\xfd\xf8\x3a\x4c\xfe\x9c\xd0\x5a\x53\xa8\x9f\xcc\x1d\xe7\xc3\xe0\x8c\x04\x48\x41\xc8\xe1\x49\x0a\x90\x6c\x40\x48\xcf\x27\x30\x8e\x01\x1e\xad\x2f\x7b\x00\xb4\xbe\xb9\xf0\x03\x19\x5f\x64\x01\x75\xbe\xa9\xe8\x87\xc8\x69\x0c\xce\x7d\xe7\x9f\xe6\x83\x99\x5b\xdf\x4e\x07\x9b\xb3\xf9\xaf\x6a\xd6\xbf\x7f\x10\x76\x43\xe0\x0f\x3b\xed\xa7\x70\xf1\x25\xf5\x71\xf6\x4f\x00\x00\x00\xff\xff\xf0\xdc\x96\xa4\x4c\x25\x00\x00")

func assetsStyleStyleCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsStyleStyleCss,
		"assets/style/style.css",
	)
}

func assetsStyleStyleCss() (*asset, error) {
	bytes, err := assetsStyleStyleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/style/style.css", size: 9548, mode: os.FileMode(420), modTime: time.Unix(1511726831, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/index.html": assetsIndexHtml,
	"assets/images/back.svg": assetsImagesBackSvg,
	"assets/images/loader.svg": assetsImagesLoaderSvg,
	"assets/images/magnet.svg": assetsImagesMagnetSvg,
	"assets/images/pause.svg": assetsImagesPauseSvg,
	"assets/images/play.svg": assetsImagesPlaySvg,
	"assets/script/script.js": assetsScriptScriptJs,
	"assets/style/style.css": assetsStyleStyleCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"images": &bintree{nil, map[string]*bintree{
			"back.svg": &bintree{assetsImagesBackSvg, map[string]*bintree{}},
			"loader.svg": &bintree{assetsImagesLoaderSvg, map[string]*bintree{}},
			"magnet.svg": &bintree{assetsImagesMagnetSvg, map[string]*bintree{}},
			"pause.svg": &bintree{assetsImagesPauseSvg, map[string]*bintree{}},
			"play.svg": &bintree{assetsImagesPlaySvg, map[string]*bintree{}},
		}},
		"index.html": &bintree{assetsIndexHtml, map[string]*bintree{}},
		"script": &bintree{nil, map[string]*bintree{
			"script.js": &bintree{assetsScriptScriptJs, map[string]*bintree{}},
		}},
		"style": &bintree{nil, map[string]*bintree{
			"style.css": &bintree{assetsStyleStyleCss, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
