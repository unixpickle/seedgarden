// Code generated by go-bindata.
// sources:
// assets/index.html
// assets/images/back.svg
// assets/images/loader.svg
// assets/images/magnet.svg
// assets/images/pause.svg
// assets/images/play.svg
// assets/script/script.js
// assets/style/style.css
// DO NOT EDIT!

package main

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x51\x4b\x6e\xc3\x20\x10\x5d\x27\xa7\xa0\xac\x63\x93\x2c\x2a\x55\x15\xf8\x12\x3d\x01\x81\x97\x32\x2d\x60\x0b\x26\x4e\x72\xfb\xca\xc6\x52\xab\xae\xb2\x01\xde\x0f\xc4\x3c\xfd\xe2\x47\xc7\x8f\x09\x22\x70\x8a\xc3\x5e\xb7\x6d\xa7\x03\xac\x1f\xf6\xbb\x9d\x4e\x60\x2b\x5c\xb0\xa5\x82\x8d\xbc\xf2\xa5\x7b\x93\xbf\x42\xb6\x09\x46\xce\x84\xdb\x34\x16\x96\xc2\x8d\x99\x91\xd9\xc8\x1b\x79\x0e\xc6\x63\x26\x87\x6e\x05\x07\x41\x99\x98\x6c\xec\xaa\xb3\x11\xe6\xd4\x1f\x0f\x22\xd9\x3b\xa5\x6b\xfa\x4b\x5d\x2b\xca\x8a\xed\x39\xc2\xe4\xb1\xbd\xc6\xc4\x11\xc3\x07\xe0\x3f\x6d\xf1\xc8\x5a\x35\x66\xbf\x88\x91\xf2\xb7\x28\x88\x46\x56\x7e\x44\xd4\x00\xb0\x14\xa1\xe0\xb2\x31\x6a\x5d\x7b\x57\xab\x14\xcb\x6f\x8d\x64\xdc\x59\x2d\xb8\xdd\x50\x5d\xa1\x89\x45\x2d\xce\xc8\xc0\x3c\xd5\x77\xa5\x2e\xe7\x3e\x41\x15\x58\xc7\xdd\xe9\xb5\x3f\xf6\xc7\xfe\xab\xca\x41\xab\x66\x1e\x9e\xc9\xf9\x31\x3d\x95\x6d\xe7\x4d\xfd\x6f\xd5\x6a\x6b\x43\x9f\x47\xff\x58\xb3\x9e\x66\x41\xde\xc8\x6d\xde\x6d\x46\xca\xd3\xbc\xda\x9b\x4d\xab\x56\xe6\x4f\x00\x00\x00\xff\xff\x55\xab\x4e\xde\xe4\x01\x00\x00")

func assetsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsIndexHtml,
		"assets/index.html",
	)
}

func assetsIndexHtml() (*asset, error) {
	bytes, err := assetsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/index.html", size: 484, mode: os.FileMode(420), modTime: time.Unix(1511579925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesBackSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8e\x41\x4e\xec\x30\x0c\x86\xf7\x39\x85\xe5\x75\xdb\x24\xed\xd3\x13\x83\x9a\x8e\xc4\x82\xdd\xec\xe0\x00\xd1\xd4\x34\x11\x19\xa7\x34\xa1\xe9\xf1\x51\x06\x04\x96\xbd\xf9\x6c\xf9\xfb\xc7\xf3\x71\x0b\xb0\xd3\x96\x7c\x64\x83\xba\x53\x08\xc4\xd7\x38\x7b\x5e\x0c\xbe\xbe\x3c\xb7\x0f\x08\x29\x5b\x9e\x6d\x88\x4c\x06\x39\xe2\x79\x12\x63\xda\x17\x01\x00\xc7\x2d\x70\x32\xe8\x72\x5e\x1f\xa5\x2c\xa5\x74\x65\xe8\xe2\xb6\xc8\x5e\x29\x25\xd3\xbe\x60\xbd\xda\x3d\x95\xa7\x78\x18\x54\xa0\xe0\x5f\xed\x6f\xfc\x67\xd5\x38\x09\x80\x71\xb5\xd9\x41\xca\x5b\x7c\x27\x83\xc5\xf9\x4c\x08\x6f\x3e\x84\xaa\x65\xc2\x9f\x55\x5b\xfc\x9c\x9d\xc1\xe1\x17\x04\xcf\x74\xb5\xab\xc1\xf4\xf1\x69\x37\xba\x7f\xbf\xd7\x6c\xf0\xa2\xff\x37\x5a\x43\x68\x4f\xcd\x09\xea\x5c\x06\xd5\xf4\x0a\x5c\xdb\x0f\x08\x72\x12\x63\xcd\x39\x89\xaf\x00\x00\x00\xff\xff\xad\x09\x57\xb3\x0a\x01\x00\x00")

func assetsImagesBackSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesBackSvg,
		"assets/images/back.svg",
	)
}

func assetsImagesBackSvg() (*asset, error) {
	bytes, err := assetsImagesBackSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/back.svg", size: 266, mode: os.FileMode(420), modTime: time.Unix(1511656400, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesLoaderSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\xcd\x41\x6e\xc3\x20\x14\x04\xd0\x3d\xa7\x18\xfd\x6e\x1d\x03\x69\x5a\xa1\x0a\x88\x7a\x80\x1e\xa2\x0d\x04\xa3\x12\xb0\x0c\x35\x3e\x7e\x65\xc9\x8b\xcc\xec\x66\xf1\x46\x5f\xb7\x47\xc2\xea\x97\x1a\x4b\x36\x24\x47\x41\xf0\xf9\x56\x5c\xcc\xc1\xd0\x5f\xbb\x9f\x14\xe1\x6a\x99\xae\x6b\xc0\xf6\x48\xb9\x1a\x9a\x5a\x9b\x3f\x38\xef\xbd\x8f\xfd\x75\x2c\x4b\xe0\x67\x21\x04\xaf\x6b\x20\x86\x3d\x4f\x9c\x24\xcb\x00\x3d\x7f\xb7\x09\xb5\x2d\xe5\xd7\x1b\x7a\x79\x7f\xfb\xb9\xb9\x0b\x1d\xc3\xa9\x47\xd7\x26\x43\x17\xc2\x3d\xa6\x64\x28\x97\xec\x0f\x09\x80\x33\xf4\x75\x1e\xa4\xc0\xa7\x1a\x14\x04\xe4\x5e\x31\x48\x45\xe0\x96\xe9\xfd\xd6\xb2\xff\x00\x00\x00\xff\xff\x24\x9c\x62\x4d\xc7\x00\x00\x00")

func assetsImagesLoaderSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesLoaderSvg,
		"assets/images/loader.svg",
	)
}

func assetsImagesLoaderSvg() (*asset, error) {
	bytes, err := assetsImagesLoaderSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/loader.svg", size: 199, mode: os.FileMode(420), modTime: time.Unix(1511579925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesMagnetSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x92\xcd\x6e\x5a\x31\x10\x85\xd7\x41\xe2\x1d\x2c\xaf\xc7\x83\x67\xc6\xe3\x9f\x2a\x97\x48\x65\x0b\xab\x3e\x41\x45\x08\x20\xdd\x40\x14\x28\x17\xf1\xf4\x95\x7d\x41\xa5\xbb\x23\x7b\x3c\xe7\x3b\x47\x7e\x7d\xbb\x7e\xf6\xe6\xb2\xf9\x3e\xed\x8f\x87\xce\x12\x7a\x6b\x36\x87\xf5\xf1\x7d\x7f\xd8\x76\xf6\xcf\xf9\xc3\x65\xfb\x36\x9f\x4e\x5e\x4f\x97\xed\xf3\x18\x59\x73\xfd\xec\x0f\xa7\xce\xee\xce\xe7\xaf\x1f\xb3\xd9\x30\x0c\x38\x08\x1e\xbf\xb7\x33\xf6\xde\xcf\x4e\x97\xad\x35\x97\xfd\x66\xf8\x79\xbc\x76\xd6\x1b\x6f\x72\x36\x39\xdb\xf9\x74\xf2\xf2\xfa\xf5\xfb\xbc\x33\x1f\xfb\xbe\xef\xec\xb0\xdb\x9f\x37\xd6\xbc\x77\x76\xa5\x01\x33\x33\x64\x41\x2e\x69\xed\x3c\x52\x10\x20\xd4\xa0\x40\xe8\x73\x00\xc6\x42\x19\x18\x13\x27\x10\xf4\xaa\x3d\x15\x2c\x1c\x81\x30\x4a\x9a\x4e\x5e\x5e\xd6\x84\x31\x08\x78\x24\xc9\x20\x48\x5e\x1d\xa1\xa7\xaa\x59\x1d\xa3\x46\xee\x09\x55\xd5\x51\xc4\x20\xdc\x3b\x56\x2c\x8e\x91\x84\x97\xff\xf9\xdf\xcc\x4a\x31\x31\x41\xcc\x58\x8a\xb6\x57\x09\xc6\x57\xcd\xe9\x1f\x5e\xa8\xfe\x3e\x55\xb0\xe6\x03\x77\x9f\xc6\xe6\x1a\x5b\xe5\x92\x52\x23\x49\x9d\xcb\x31\x39\x42\xa5\x31\x8b\x1b\xb3\xb8\x66\x31\x82\x85\xe5\xb3\xf9\xcd\xac\x04\x49\x03\x04\xc2\x42\x52\xed\x97\x01\x53\x04\xcd\x98\x63\xe8\x6b\x06\xcf\x2d\x05\x2d\xb9\xa0\xd7\x04\x52\x30\x2f\xaa\xe6\x2a\xa5\x08\x70\x01\xc9\x58\x12\xdd\x95\xaa\xae\xbd\x4b\x98\x52\x82\x88\x89\x8b\xa3\x50\x1b\x03\xd2\xbb\x3a\x91\x42\x44\xe1\x02\xa4\x30\x1e\x8d\xd1\xc1\x63\xa0\xe8\x7c\xdd\xee\x31\x4b\xae\xb2\xd6\x83\x1c\x62\x0d\x12\xeb\x9a\x88\x45\xf8\x0e\x07\x0d\xae\x6f\x37\x35\x62\x51\x5a\xe4\x80\x25\x24\x08\x1e\x53\x11\xc8\x5a\x41\x63\x2c\x4d\x35\xbc\x6a\xb6\xc8\x0a\x94\x90\x4b\x80\x18\x5b\xcd\x1e\x42\x00\xff\x4b\x1e\xc7\x72\x9f\x5e\xc8\x63\x41\xed\x53\x1e\x7b\x9f\x9b\xbb\xd9\x59\xfd\xcb\xf5\x73\xce\xa7\x93\xbf\x01\x00\x00\xff\xff\x19\xfb\x2d\xa3\xfc\x02\x00\x00")

func assetsImagesMagnetSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesMagnetSvg,
		"assets/images/magnet.svg",
	)
}

func assetsImagesMagnetSvg() (*asset, error) {
	bytes, err := assetsImagesMagnetSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/magnet.svg", size: 764, mode: os.FileMode(420), modTime: time.Unix(1511654043, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesPauseSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\x4d\x6f\xe2\x30\x10\x3d\x83\xc4\x7f\xb0\xbc\x57\x67\x32\x63\x8f\xbf\x2a\x42\xa5\xe5\xd2\xcb\x5e\xf7\xbe\x0a\x14\xd0\x52\xa8\x0a\x0b\x68\x7f\x7d\xe5\x0f\x68\x2a\x21\x12\xc9\xb1\x33\xe3\x37\x6f\xde\xb3\xa7\xcf\x97\xb7\xad\x38\x2d\x3f\x0e\x9b\xfd\xae\x93\x04\x28\xc5\x72\xd7\xef\x17\x9b\xdd\xaa\x93\xff\x8e\xaf\x4d\x90\xe2\x79\x36\x19\x4f\x0f\xa7\xd5\x30\x8f\xa4\xb8\xbc\x6d\x77\x87\x4e\xae\x8f\xc7\xf7\xa7\xb6\x3d\x9f\xcf\x70\x36\xb0\xff\x58\xb5\x1a\x11\xdb\xc3\x69\x55\x53\x9e\x2e\xdb\xcd\xee\xef\xbd\x44\x8a\x31\xb6\x39\x2a\x27\xe3\x91\x10\xe2\xb4\x59\x9e\x7f\xee\x2f\x9d\x44\x81\x82\x4d\x00\x6b\xdc\xf5\x2b\x67\x93\xf1\x68\xfa\xfe\xe7\xb8\x16\xaf\x9b\xed\xb6\x93\x3f\x16\x36\xbd\x52\x2c\x3a\xf9\x8b\x1c\x03\x5b\xa3\xf0\x85\x02\x68\xef\xe6\x64\xc0\x68\x56\xa8\x22\x20\x93\x22\x08\xe8\x95\x05\xd6\x36\x8f\x3c\x4f\x7f\x42\x8e\x2a\x04\x44\x52\x79\x87\xbe\x2e\x12\x0a\x9d\x18\x09\x62\xa4\xc9\x78\x94\xe8\xdd\x79\x7a\x54\x0c\x91\x43\x2d\x10\x41\x1b\x53\x0a\x28\xd2\x10\xd8\xf7\x06\x1c\x45\x95\x46\xaf\x3c\x44\xd4\x39\x1c\x72\xd8\x52\x59\xac\x89\x1d\x50\xa0\x3e\x61\xc5\x4c\x5a\x1b\x6a\x08\x02\x51\xc5\x69\x72\xe2\x03\x22\xb9\x42\x93\xc6\x4a\xa0\xf1\x10\x62\xa8\xf3\x02\xf2\xbb\xb4\xd5\x63\xc3\x10\xad\x6e\x32\xe9\xa6\x14\xcb\xf8\x35\x6f\x4e\xde\x80\x0b\xb6\x76\x45\x2e\x02\xa3\x56\xa8\x6e\x32\xff\x97\xed\x43\x3f\xd8\x18\xa0\x2b\x93\x39\xeb\x08\x1c\x5d\x85\x63\x6d\x41\x93\x55\xa8\x58\x23\x68\xe7\x15\xbe\x68\xcf\x80\xc1\xf5\x4d\x55\x20\x93\xf2\x65\x43\x25\x55\xb0\x1e\x28\x90\x9a\xd7\x94\xa5\xb6\xa9\x1d\xa3\x55\x96\xa0\xce\x0b\xca\xd5\xd2\xa1\x71\x44\x5f\xc6\xdd\x12\x93\xa0\xf8\x65\x5c\x88\x7e\x60\x5c\x65\x73\x33\xee\x01\xab\x52\x25\x5b\xaa\xe3\x1d\x4b\xb3\x71\x3c\x30\x8e\x06\xc6\xd1\x77\xe3\xe6\xe5\x2e\x70\x3e\xab\x14\x15\x1b\x07\xde\x94\x43\xfc\x4d\xf1\x62\xcf\x34\xdd\xc2\xd9\x64\xfc\x19\x00\x00\xff\xff\x95\x2f\x32\x11\xe6\x03\x00\x00")

func assetsImagesPauseSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesPauseSvg,
		"assets/images/pause.svg",
	)
}

func assetsImagesPauseSvg() (*asset, error) {
	bytes, err := assetsImagesPauseSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/pause.svg", size: 998, mode: os.FileMode(420), modTime: time.Unix(1511645360, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesPlaySvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x51\xcb\x6a\xc3\x30\x10\x3c\xc7\xe0\x7f\x10\xea\x55\x5e\xaf\xb4\xf2\x4a\x2a\x71\x02\xcd\xb9\xa7\x7e\x41\x71\x12\xc7\xe0\xd8\x21\x76\xed\xd0\xaf\x2f\x72\xd3\x17\x74\x05\xd2\x32\xcc\x8e\x34\xa3\xf5\xf6\x76\x6e\xc5\x74\xb8\x0e\x4d\xdf\x95\x52\x03\x4a\x71\xe8\xaa\x7e\xdf\x74\x75\x29\xdf\xc6\x63\xe6\xa5\xd8\x6e\xd2\x64\x3d\x4c\xf5\x6f\x9e\x96\x69\xb2\x12\x42\xdc\xce\x6d\x37\x94\xf2\x34\x8e\x97\xc7\x3c\x9f\xe7\x19\x66\x82\xfe\x5a\xe7\x06\x11\xf3\x61\xaa\xef\xbc\xa9\x39\xcc\x4f\xfd\xad\x94\x28\x50\x58\x0d\x21\x84\xfb\x21\x37\x69\xb2\x5a\x5f\x5e\xc7\x93\x38\x36\x6d\x5b\xca\x87\x7d\x11\x97\x14\xfb\x52\x3e\x13\x03\xb2\x57\x06\x41\x3b\x6e\x33\x13\x32\x83\x3b\x06\xc7\x3a\x43\x40\x2a\x14\x03\x31\xc5\xbe\x70\x8a\x17\x04\x41\x6b\xbb\x2b\xc0\x21\x2b\x04\xe3\x9d\x2a\x20\xa2\x6c\xbe\xba\x10\xc2\x64\x31\x4d\x56\x3f\x25\x84\x10\x15\x2a\x04\x72\x26\x4e\x2d\xb3\x4e\x93\x42\x28\x16\x4d\xef\xb9\x42\xd0\x36\xe2\xe8\xe2\x4e\x0b\x47\x6b\xab\x10\x2c\xdf\xef\x8d\x9c\x10\xd4\xa2\x14\x5c\x7c\x57\x24\x15\xec\xb3\xe8\xc0\xb5\x8b\x81\xcf\x48\xfe\xad\x0a\xc1\xb8\xe8\x4d\x7b\x17\x75\xc9\x64\x08\x36\xd8\xef\xde\x1b\x7a\x21\x06\xa2\x25\x14\x62\x52\x7f\x22\x7a\x97\x22\x8f\xdf\x15\xa3\xdf\xa4\xc9\x47\x00\x00\x00\xff\xff\x81\xc0\x9e\x0d\xe0\x01\x00\x00")

func assetsImagesPlaySvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesPlaySvg,
		"assets/images/play.svg",
	)
}

func assetsImagesPlaySvg() (*asset, error) {
	bytes, err := assetsImagesPlaySvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/play.svg", size: 480, mode: os.FileMode(420), modTime: time.Unix(1511641898, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsScriptScriptJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x3c\x6b\x73\xdb\x38\x92\xdf\xfd\x2b\x3a\x35\x75\x26\xb5\x96\x19\x7b\x76\xf6\xee\x4a\x19\x5d\x2a\x7e\x64\xe3\x5b\xe7\x51\x8e\x73\x57\x57\xa9\xd4\x14\x48\xb6\x2c\xc6\x10\xa1\x01\x21\xdb\x1a\xaf\xfe\xfb\x15\x5e\x24\x00\x92\x92\x9c\x38\x99\xcd\x17\xcb\xc2\xa3\xbb\xd1\xdd\x68\x74\x37\x1a\xca\x28\xa9\x2a\x38\x22\xcb\xf7\x48\x78\x36\x85\xfb\x1d\x80\x8c\x95\x95\xe0\x8b\x4c\x30\x1e\xff\xbe\x40\xbe\x1c\x42\x96\x0e\x54\x17\x80\x98\x16\x55\xa2\x5a\x61\x0c\xea\xf3\x59\xd3\xfe\x5b\x96\xc2\x18\xb2\x54\x37\x3d\x7d\x0a\x27\x48\xc9\x12\xc4\x14\x81\xe3\xef\x0b\xac\x04\x54\x0c\xc4\x94\x08\xb8\x45\xc8\x59\x19\x09\xa8\xe6\x64\xa6\x46\xa4\x64\x69\xa7\xdd\x4e\x0b\x8a\xaa\x71\x51\x21\x07\xb1\x9c\x63\x05\x6c\x21\x80\x40\xa5\xe9\x54\x98\x13\x17\x33\xa1\xf4\xb2\x98\xa1\x1c\x35\x86\x0a\x85\xf9\x12\xc7\x03\x18\xff\x97\x21\xbe\x7b\x70\xb9\xa0\xf4\x99\xe9\x57\x5d\x47\x24\xbb\xc6\x32\x7f\xf1\xee\x2c\x8e\x9e\x92\x79\xf1\x34\x25\x4b\x8d\xf7\xb9\xc2\x3b\x8e\x60\x0f\xb0\xcc\x58\x8e\x1f\x2e\xce\x8e\xd9\x6c\xce\x4a\x2c\x85\x66\xd6\x60\x90\x88\x29\x96\x31\x4b\x3f\xbb\x88\x1b\x0e\xc5\x12\xdf\x10\x58\xfa\x79\x60\xb1\xae\x06\x49\x46\x44\x36\x8d\x91\xf3\x9e\x49\xc8\xf9\x50\x51\xea\x4c\xd2\xff\xad\x86\x8d\xfc\x92\x93\xd3\xf3\x17\xff\xa7\x3a\x56\x3b\x52\x94\xa4\xcc\x90\xc6\x56\x78\xc5\x04\xe2\x16\x07\x06\x35\xba\x8c\x22\xe1\x96\x6f\xed\x71\x06\x5d\x28\xee\xf8\x6e\x08\x4b\xc5\x64\xcb\x48\x85\xba\x12\x44\x14\x19\x5c\xa1\x00\x45\x54\x4d\x04\x47\xb1\xe0\x25\x1c\x1e\x1c\x1c\xe8\xc1\xab\x9d\x1d\xad\x86\xc7\x8a\x5a\x92\x52\x3c\x26\x94\xb6\x74\x71\xc1\x69\x4b\x13\x7d\x8d\x0b\xa5\xb7\xe0\xb4\x5b\x1a\xbd\xb2\xe8\x93\x44\xaf\x1c\x56\xbd\xcc\xde\xc0\xa2\x7a\xd5\x47\x64\x79\xce\xd8\xf5\x62\x0e\x78\x27\xb0\xcc\x37\xf2\xa1\xc8\x5d\x36\x54\x8b\x39\xf2\x46\x4f\xa9\x02\xf5\xbc\xc8\xfb\x94\xb4\xc8\x07\x6a\x7a\x40\xc5\x79\x51\x89\x97\x05\xc5\x6a\x5b\x2a\xa6\xa4\x9a\xf6\xd1\x31\x91\x80\x9e\xcb\x11\x7d\x54\xc8\xbe\x80\x8e\xc9\xa2\xcc\x44\xc1\xca\x4e\x29\x2a\x24\x46\x73\x26\x28\x05\xa4\x64\xdb\x21\x2b\xa9\xe3\xb2\xa1\x28\x2b\x21\x57\xc0\x26\x70\xb9\x9c\xe3\x29\xe7\x8c\x37\xaa\x6e\x40\xbd\xe3\x6c\x56\x54\x98\x70\xfc\x8c\x99\x88\xa3\x8c\x95\x25\x6a\x2a\x26\xa4\xa0\x98\x47\x56\xcc\x80\xb4\xc2\x0d\xd3\x91\x73\x67\x93\xac\x8c\xea\x71\xac\xe6\x3e\x79\x4f\x64\x53\xc2\xae\x37\x91\x53\xe2\x2d\x28\xba\xe3\xc8\x9a\x4f\x4b\x95\xb7\x19\xcd\x6c\x05\xf5\x73\xc5\xca\x58\x33\xb5\x4b\xf5\x25\x7a\x96\x7e\x4e\xa6\xa4\x7a\x7b\x5b\xbe\xe3\x6c\x8e\x5c\x2c\xe3\x08\x25\x9a\x68\xb0\x89\x22\x96\x7e\xfe\x68\xc6\x7e\xea\x22\xe1\x37\xca\x6e\x91\x67\xa4\xc2\xb7\xe9\xe7\xd8\x6e\x2b\xb9\x47\x3c\x01\xb7\x46\x29\xb4\x92\xb6\x17\x9c\x93\x65\x52\x54\xea\x53\x75\x05\x66\x43\x12\x3f\x23\xf3\xd8\x83\x61\x94\xc8\x28\xa8\x64\xc4\x82\x4a\xcb\x7e\xbf\x92\x1d\x6f\x53\x49\x7b\x72\x8d\xcb\x4a\x41\x4c\x26\x8c\x9f\x92\x6c\x1a\x5f\xfb\x7c\xb9\x86\xf1\x18\xa2\xb3\x93\xc8\xe5\x82\x84\x94\x14\x39\x8c\x25\xe6\x8f\xd7\x9f\x7a\xd4\x41\x0e\xfb\x78\xfd\xf1\xe0\x53\x22\xd8\xb9\xa4\xec\x98\x54\x18\x0f\x60\x0f\xae\x93\x6a\x91\x56\x82\xc7\x87\x83\x4f\x21\x94\x1d\x6b\x3f\x1a\x09\x2e\xa8\x90\xcc\xb2\xa6\x21\xbb\x7e\x2f\x88\xc0\xd6\xee\x93\xd6\x15\xff\x81\xcb\xca\xb3\x36\x75\xab\x3c\x02\xed\xff\xcf\x76\xec\xb1\x2a\xc1\x41\xba\x10\x82\x95\x20\x18\x4c\xd9\x0c\xe7\xe4\x0a\x21\x9e\x70\x36\x03\xb5\x25\xa1\x9a\xb2\x05\xcd\xcb\x48\xd8\x49\x1c\x27\x1c\xab\xa9\x3a\x8d\xe5\xe8\xa4\xe6\x17\x65\x19\x91\xf2\x94\xca\x34\x55\xbc\x73\x38\x37\x2d\x2a\xc1\xf8\x32\xe1\x38\xa7\x24\x43\xb5\x8a\xf8\x7e\x35\x84\xdb\xa2\xcc\xd9\x6d\x22\x0a\x41\x71\x68\x8c\xa4\xa2\xf5\x92\xbd\x22\xd5\x34\xbe\x5f\x35\xca\xdd\xac\x8c\x95\xc7\x53\x52\x5e\xa1\x5d\x98\x94\xdc\x84\xd0\x0a\xf5\x50\x03\x94\xe4\xf9\xe9\x0d\x96\x42\x1a\x33\x2c\xa5\x39\x9a\xb3\xb9\x1a\x1f\x0d\xa1\xc3\x11\xb0\x50\xf5\x61\x97\x2d\x38\xc7\x52\x68\x52\x07\x1d\xf6\xdd\xeb\x37\x90\x02\x8d\xd3\xeb\xc1\xd9\x5c\x2c\xcd\xb8\x67\xdd\xfc\x4a\x28\x96\x57\x62\x0a\xbf\xc2\xcf\xad\x4d\x67\xd5\xc0\x39\x6e\xf9\xb2\x1e\x64\xd4\x99\x54\x55\x71\xa5\xac\xcb\x82\x8a\x21\xfc\xf7\xfb\xb7\x6f\x92\x39\xe1\x15\xc6\x39\xb6\xcc\xad\x8f\xba\x56\xc8\x41\xbd\x4a\x50\x96\x14\x62\x1c\xc0\x7d\x68\x54\x0c\x2d\x8a\x07\xf3\x45\x35\xd5\x0b\x53\x6c\xb5\xa4\x5b\x69\x37\xdd\xdb\x88\x5a\x83\x68\x18\xec\xe9\xca\x37\x80\xef\xc9\xa5\x5b\x7e\xda\x62\x84\xdb\xc9\xb7\x18\x76\xb7\x7f\x32\xbe\xa3\xe1\x61\x37\xc3\x3a\x08\x32\x98\x6f\x08\x87\x6a\x46\x28\xd5\x3b\x7c\x3b\xdc\xaa\x59\xa2\xde\xdd\x85\xb8\x99\xad\x89\xb1\x9d\x03\x47\xe9\x9e\xb8\xd6\xaf\x99\x30\x30\xfa\xd7\xd2\xbd\xe8\xa7\xa8\xc3\xae\x47\x3f\xf5\x9c\xe3\x4a\xed\x2a\xc1\x8b\xf2\xaa\x98\x2c\x5d\x04\xf5\xc1\x5e\x7b\x39\x67\xe5\x84\xd5\xde\xc5\x05\x92\x4c\x24\x35\xa0\x96\x81\x9b\x73\x36\xaf\x7c\xdf\x42\x37\x85\x3c\x92\x8c\x33\x4b\xa0\x8c\xe4\x45\x79\x35\x02\xc1\x17\x38\x34\x8d\xea\xb4\x1a\x29\x41\xd9\xa6\xa2\x9c\x30\xdd\xa2\x57\xea\x46\x30\xda\x7f\x72\xa2\x02\xbd\xf5\x2d\x9d\xff\x5b\x50\xfa\x9a\x2d\x4a\x11\xb8\x79\xcd\x34\xbc\x6d\x3c\x3a\x6d\x57\x14\xdd\x89\xf4\xda\xd4\xd7\x94\x2c\xa5\x43\x95\x92\xec\x3a\x49\x8b\x32\x57\x83\x1c\x2d\xf5\x70\x7d\x28\x67\xbd\xd8\x12\xeb\x70\x3a\x1b\xa8\xcc\x91\xb7\xdd\x7d\xc5\xa8\xc4\xb0\xa7\x25\x72\x2d\x8a\x8c\x23\x11\x78\x4a\x71\x26\xe5\x7a\xce\x48\x8e\xfc\x1d\x29\xd1\xf7\x76\xf5\xb9\x17\x00\xc6\x4e\xdf\xaa\x0b\x6c\x1d\xd7\x44\x79\x71\x13\x0d\xeb\xaf\xf7\xa0\xb4\xe4\x0d\x99\xe1\x08\xb4\x83\xb1\x3f\x27\x25\x46\xb0\x1a\xfa\xb1\x90\x83\x11\xf6\x20\x8a\x4c\xef\x5a\x37\xed\xcb\x29\x49\xc9\x72\x5f\x6a\x8b\x47\xc7\x5a\x70\x00\x11\x25\x29\x52\x07\x64\x1f\xd0\xfd\x92\xcc\xfc\x15\x7a\x6b\x94\x43\x12\x39\xa4\xee\x1e\x7c\x03\x1a\x2a\xc4\x1c\x79\xb5\x81\x0c\x33\xea\x9b\x52\x42\x11\xb3\xe9\x66\x52\xec\xb0\x2f\xa1\x45\xfb\x3e\xdb\x10\x43\xf2\x7c\xbf\x63\x34\x00\x2b\x8f\x69\x91\x5d\x8f\x8c\x3b\xe1\x6c\x70\x56\xbe\xc8\xf3\x38\x24\x77\x46\xae\x4a\x14\x1f\x2e\xce\x07\xfe\xb2\xa2\x17\x79\x0e\x97\x4c\x79\x14\x51\xb3\x96\x40\x9d\xed\xc6\x76\x6c\x46\xac\x74\x7f\xa8\x8c\x98\xef\xfc\xa1\x71\x4d\xee\x1b\x43\xa8\x5c\xa4\xa1\xb5\x81\xce\xcc\x91\xfa\x5b\x7b\x37\xd6\x4a\x1b\x82\x8e\x69\xd1\x65\x93\x3d\x74\x8e\x47\xa6\x59\x61\xdc\x31\xc7\x4c\xe5\xec\xb6\x94\xa4\x54\x5e\x92\x45\xf7\x5d\xa1\x10\x45\x79\x25\x3d\x35\x18\xbb\xae\x5c\xdd\x2d\xbb\xa4\x6d\xd3\x27\x00\x8a\xb3\x52\x20\xbf\x21\x34\x76\x38\xdf\x8c\x1b\xfa\xb4\x27\x17\xa7\x2f\x2f\x4e\xdf\xbf\xfa\xed\xec\xcd\xe5\xe9\xc5\xff\xbc\x38\x6f\x8c\x64\x4d\x95\x67\x27\x9f\x04\x24\xb7\xcc\x59\xb3\x00\xef\x64\x0c\xa6\xa9\xd8\xc4\x44\x5c\xbe\xa3\x26\x1d\x16\x15\xcf\x34\x84\x20\x45\xe9\x1a\x28\xb2\x75\x44\xec\x59\x79\x61\x16\x44\x28\x8d\x23\x3d\x38\x1a\x6a\x37\xdd\xcd\xb2\x70\xb1\x25\x08\x35\xb6\x03\x02\x9b\x6f\x0d\x80\xcd\x5b\xf3\x49\x9e\xdb\xe9\x8e\xae\xbb\xce\x15\xc9\xf3\x0f\x17\xe7\x30\x06\x9d\x1c\x20\x79\xfe\x7c\xc1\x69\x5f\x66\xa0\x01\xd2\x9d\xd3\xd1\xd0\x4c\x6c\xdb\xa9\x0a\x8e\xc3\x57\xb7\xb5\x12\x60\xae\xfe\xfd\xf3\x9f\x06\x04\x51\xf1\x69\xf5\x0e\x4b\xb9\x7d\xe2\x56\x38\xdc\xce\x80\xf9\x6a\x2c\xfd\x8e\x6e\xaa\xf5\xd2\x6b\x35\x89\x0c\xfd\x39\x11\xa4\x9d\x66\xea\xdd\x1b\xee\x02\xfa\x69\xf5\xa9\xb5\xf4\x76\x6d\x4a\x89\x5e\x69\xec\x9d\x9f\x75\xbc\x4b\x24\xf4\x1b\xb9\xb7\xef\x8c\x97\xf5\x64\x0c\x07\xcf\x82\x01\xac\x34\xd8\x43\x2a\xeb\xdd\x71\x17\x26\x2b\xc1\x4d\xcd\x7a\x76\x64\x08\x07\xad\x1c\xdc\x83\x58\xf3\xf4\x29\x5c\xbe\x3d\x79\x3b\x82\x19\x59\xa6\x08\x53\x52\xe6\x14\xb5\xcd\x83\x29\x72\x4c\x92\xc4\x8c\x94\x6a\xc9\x28\x26\x82\x93\x0c\x63\x6c\x47\x7a\x2d\xe6\xfa\x39\x88\x90\x91\xbb\xbb\x2d\x33\x30\x91\x8e\x9d\xe2\x6a\xc0\x2a\x07\x89\xbb\xb7\xa4\xba\x98\x9d\x65\x70\x4d\x18\x87\x98\xa2\x80\x02\x24\xeb\xa1\x80\x5f\x5b\x58\xb4\x0f\xff\x0c\xf6\xf6\x0a\x27\x8b\xab\x36\x5d\x4e\xeb\x68\xb4\x1e\xff\xb1\xf8\xe4\xea\x51\x4e\xeb\xc8\x5d\x7d\xee\xee\xc2\x93\x9c\x06\xe4\x3a\x5a\x11\xf6\x79\x0a\xdf\xaf\xf4\x72\x9f\xcb\x0e\xe9\xae\x6d\xce\x09\x7a\x1b\xfb\xde\x39\x30\x3b\xb0\x07\x3a\xb7\x8d\x6e\x05\xba\x64\xcf\x18\xdb\x51\xab\xde\x97\xe0\x5f\x39\x80\xb6\xa1\x64\xe5\x9f\xf1\x4e\xc2\x3c\x3c\xbc\x42\x05\xfc\x9b\x93\x3b\xd7\x07\xf7\x89\x91\xf1\x83\x62\x2c\x3f\xbc\xea\x8c\xac\x40\xa5\x72\xcf\xbd\xc0\x4a\xb7\x9d\x3a\x71\x95\x6e\xd1\x5f\xbc\x70\x4a\xb6\x5f\xe0\xef\x0f\x0d\xa7\x9c\x69\x78\xdb\xa4\xa6\xdd\x70\xca\x2a\x75\xa2\xf3\xd0\xf5\xb4\xea\x2b\x63\x2b\x83\x7a\x63\x6c\x15\xee\x32\x9f\x2a\x2f\x23\xb0\xc6\x2b\xf5\x82\x0f\xdf\x15\xb5\xa0\xc2\xf8\x63\x7d\x30\x23\x48\x4a\xb1\x37\x9c\xf1\x60\xee\xeb\xb1\x0f\x89\x6c\x44\xca\xf2\xa5\xe7\x10\xbb\x61\xf5\x16\x10\x24\x0c\x1e\x78\xd4\x21\x88\x2d\x80\x48\x30\x79\x00\xa6\x0b\x10\x40\x24\x57\x1e\x79\x8d\x83\x6f\x86\x2c\xa7\x7e\xbc\x06\x8e\x47\xdf\xc2\xfc\x2f\xc7\xa9\x77\x9c\x5d\x71\xac\xaa\xef\xc5\xad\xf8\xf0\xe0\x00\xfe\x22\x99\x26\x77\xa5\xf4\x6e\xf3\xa3\xa5\xc0\x0a\x9e\xca\xb6\xaa\xf8\x03\xd5\xd7\x41\x22\xd8\xcb\xe2\x0e\xf3\xf8\xe7\x81\x3c\x42\xfe\x2d\xfa\x41\xf9\xfb\xbe\xf8\xe3\xbb\x69\xe2\x84\xf1\x19\x11\x12\x63\xec\xf1\xf2\x07\x65\xdd\xb1\x55\x90\x3f\x87\x7f\xbe\x7e\xfe\xa8\x4c\x3c\x39\x87\x0b\x22\xbe\xb3\x0a\x4a\x8c\x92\x85\xf6\xe4\x91\xdf\x7f\x54\x06\x7e\xf8\x33\x19\xb8\x98\xff\xf0\xec\x53\x2b\xf8\xb3\xf6\xb0\xe6\xdf\x25\x13\x84\xae\x61\xe0\x4e\xf8\xdf\x60\x3b\xb7\x6b\x5d\x0e\xb9\x76\xba\x4c\x50\x29\xa3\x9f\xb8\x15\x4d\x3c\x87\xa8\xce\x4c\xed\x4f\x38\xfb\x03\xcb\x08\x46\xea\x4a\xd5\x71\xd0\xcc\xb4\x1b\x84\xe7\x5f\x9f\xec\x0c\x08\xab\xf3\x9d\x4d\x8e\xd3\xcb\x6e\xbe\x17\x6c\x1e\xe4\x30\x65\x93\x93\xbc\x84\xd1\x9f\x40\x14\xe1\xa2\x45\x15\xe1\x6e\x4e\xf5\x11\xf3\xc3\x35\x75\x3a\x1d\xb7\x89\xba\x13\x35\x2a\x20\x4f\x37\x76\xe4\x7c\xed\xa8\x26\x96\xb1\x34\xea\x21\x4d\x2c\xe2\x77\x76\xdf\xf6\xa8\x31\x8f\x78\x29\xd3\x28\xa7\x04\xdc\x77\x31\xa3\x3a\x9b\x94\xd2\x26\x86\x93\x80\xd7\xd7\xb8\x1c\xc1\x5d\x42\x8b\xf2\x7a\x08\x53\x8e\x13\xfb\xcd\xe7\xe1\x5d\x32\x27\x62\xda\x70\x30\x4c\x9b\x77\xde\x52\x35\x51\xeb\x37\xe3\xca\xbe\x2e\x8d\x59\xc7\x9b\xd3\xef\x74\x73\x15\x10\x66\x6e\x04\x36\x46\x7b\xfa\xde\xcf\xdc\xf9\x05\x14\x7a\xda\x17\x5e\x47\x78\xea\x16\xde\x47\xf8\x49\x04\x73\x29\xe1\x66\x11\x5c\x20\x23\xfd\xe1\xdc\x4d\x34\x95\x43\x8e\x4d\x4f\x95\x2f\xd6\xe4\x34\xa0\x5a\x4c\x26\xc5\x1d\x56\x30\x86\x8f\x11\xfc\xe3\x28\x1a\x42\x04\xaf\xf5\xc7\xdf\xf5\xc7\xe5\x51\xa4\x32\x60\x5d\xb9\x35\x3b\xbd\x2b\xa9\xe6\x22\x80\x71\x3d\xb4\xce\xa7\x99\xfe\xe2\x0f\x84\x31\xa4\x26\x88\x79\x4d\xc4\x34\x99\xb3\xdb\xf8\xf0\x60\x08\x7f\x85\xbf\x40\x5c\xc0\x1e\x1c\xba\x97\xf3\x6a\xc6\xaf\x70\x78\xd0\xd2\x48\xd9\xe3\x07\x3e\x1a\x69\x4b\xc1\x6b\x10\x1b\x60\x1c\x6e\x05\xa3\x0d\x44\xad\x82\xb3\x45\x99\xab\x61\x2d\x28\xa6\xf0\xca\x8c\xd6\x6b\xdf\x83\x48\xff\x17\x3d\xeb\x90\x9e\xf2\x68\x78\x5d\x08\x61\x8b\xfa\x1a\xc9\xea\xbe\x3d\x88\x9e\x56\x98\x29\x10\x35\x04\x9b\xe6\x52\x79\x3b\xa7\x44\x40\xae\xc2\xcf\xc0\x58\x39\xc2\x78\x3c\x86\x83\x20\x7f\xb6\x7d\x46\xa6\xc8\x47\x10\x95\x6c\xbf\xc9\xdc\x6f\x9b\x89\x99\x1e\x3a\x7b\xd3\xf7\x4f\xa2\x37\xac\x5e\x49\x1d\x6e\x7b\x36\xde\xaa\x14\xd5\x79\xee\x70\x69\xd2\xbe\xe6\xb4\xc9\x50\xae\x59\x96\xc5\x73\x5a\x0a\xbe\x1c\xc2\x7d\xed\x64\x8c\x20\xaf\x49\x52\x66\xd7\xa4\x83\x6d\x5b\x70\xd1\x69\x8f\x34\xd5\x68\x53\xc7\x03\xbb\x49\x07\x09\xc7\x1b\xe4\x95\xa9\x77\xda\xc4\xe6\x88\xd9\x1b\x61\xc3\xe1\x36\x7b\xe5\xca\x77\x14\x3f\x5c\x0d\xf2\x56\xe3\x2a\x80\x93\x8e\x6b\x67\xe2\x36\x92\x43\x8b\x9a\x9c\x2e\x1b\xaa\x3c\x36\x0d\x76\x5b\xa7\xad\xc5\x45\x8f\x7f\x76\x91\xeb\xf4\xd0\xbf\x37\xef\x31\xee\x41\x05\x81\x9b\x80\x1a\xf4\xa3\x30\x96\xf8\x88\x70\xa9\x10\x73\x93\xf7\x19\x6d\x4c\xc5\x58\x34\x19\xa3\xd2\x68\x5b\x2a\xf4\x99\x71\x2c\x1b\xe3\x9c\x4a\x9d\xb0\x82\xab\xe5\xa6\x87\xb8\x02\xdb\x28\x93\x66\x1f\xfa\x6b\x57\x41\x44\x73\xc6\x46\x66\x31\x51\x5b\x59\x9a\x1a\x96\x47\x44\xec\x97\xa5\x6c\x73\x84\x76\x50\xa5\x99\xdf\xd6\xdf\x4a\x2c\x69\x53\xd0\x74\x5b\xe4\x62\x3a\xb2\x9a\x67\xc5\x04\x7f\x51\xc6\xbe\x36\xec\x7f\x35\x59\x31\x4d\x90\x3c\x92\xaf\x94\xb9\x3e\xd6\x42\xd2\x93\x95\xc4\x76\x4c\xa9\xd3\x57\x71\xa0\x28\xaf\xf6\x53\xc2\xd7\x72\x40\x03\xe8\x9f\x2c\x7d\x12\x8a\x3c\x1a\xea\x05\x8f\xcc\xba\x57\x1d\xdc\xea\xd3\x31\x6b\xf4\xdb\x2a\xfb\xab\x9f\x3d\x74\x9c\xe3\x3a\x78\xea\x28\x7a\xfb\xf7\xbf\xa5\x59\xfe\x4b\xb4\xce\x17\x8b\x7e\x9a\x60\xfa\x4b\x7a\x18\x75\x9e\x7c\xd1\x4f\xe4\x3f\xf0\x97\xff\x4c\xa3\xa6\x7a\xf7\x82\x31\xf1\xe5\x77\x31\x8d\x23\x95\xd6\x55\xc0\xb6\xbc\xcc\x7c\x8f\x3f\x46\xb6\x26\x55\xbd\xfe\x90\x3e\x8e\x69\xb0\x86\xf2\x15\xa9\xdc\xe6\x23\xb2\x3c\x3b\xa9\x4b\xb7\x7d\xe8\x5e\x8d\x6d\x7d\xad\x5e\x7b\x71\x9d\x95\x77\x01\x04\xbf\x42\xd6\x5d\x83\xf6\x80\xd7\x14\x84\x64\xba\xe4\xe4\x81\x17\x45\xcd\x2c\xbc\xf5\x0b\x40\xbc\xeb\x2c\x3d\xac\x5d\xb2\x12\xfa\xa9\x35\x7d\x23\x6f\x9e\x5b\x31\xb2\xda\x70\x23\x94\x91\xf2\xf4\xae\xa8\x4b\x81\x2b\x8f\x2f\xfa\xed\x92\x2d\x37\xf0\xfa\x5c\x81\x75\x8f\x50\xb2\xfb\xa2\x8b\x25\xd7\xfb\xd0\xeb\x62\xa5\xc0\x52\x28\xd3\xb8\x36\xc3\x71\xc9\xe6\xe6\x94\xd0\xef\x9f\x46\xbd\xab\x6a\xbc\x1b\xc3\x81\x91\xfd\xa7\xe9\x61\xa6\xc3\x61\xbe\xbe\xa5\x97\xcd\xf1\xc0\x1d\xa8\x81\x6a\x71\x8d\x1c\x75\xd4\xe3\xdd\xde\xb8\x92\x42\xd9\xce\x27\x6b\xc5\xf7\xc6\xfd\x70\xab\xbd\x3a\x2b\xbc\x34\xda\x17\xaa\xf4\x24\xf6\x32\x32\x5d\x75\x5c\x61\xb8\xee\xb1\xbb\x55\x73\x14\x6c\x8d\xaf\x2a\xcf\x0c\x42\x5e\x4f\x42\x5b\x01\x36\xc2\x84\xf6\x5e\x08\xc8\x6c\x38\xa0\x5e\xbd\x6d\xa3\x18\x86\xb1\x27\xb5\x03\xaa\xab\x0f\xec\x36\x9c\xb2\x5b\xdb\x65\x9e\x07\x85\x33\x8f\xc8\x72\x04\x45\xee\x4d\x39\x22\xcb\xb8\xc8\x07\xcd\x6b\xb8\xce\xd8\xbf\x63\x93\x85\x05\x13\x7e\x09\x7f\xb0\x5a\xa7\x9e\x23\xac\xb2\x81\x3b\x5b\x45\xd1\xb5\xe5\x5d\x8c\xed\x5a\x18\x49\xa5\xc6\xdb\xae\xde\x59\xeb\xcd\x9f\x95\x13\xe6\x3b\xf3\xe6\x1d\x80\x93\x24\x31\xc9\x31\x4f\x8f\x8d\x41\xf3\xaa\xc6\xcc\x1b\x97\x80\xe5\x7a\x3e\x9b\x77\x4f\x6f\x4a\xc6\xfa\x67\xeb\x3c\x57\xc7\x36\x3a\xf1\xea\xde\x5c\x00\x0e\x6b\x82\x33\x78\xbb\x8c\x48\x2b\x27\xb2\x65\x65\x31\x40\x64\x39\x0b\x39\xc3\x0a\x4a\x75\x72\x17\x95\x48\x9c\x3c\x5d\x50\xb7\xb1\x4e\xd1\x94\xad\xde\x6a\xc3\x99\xba\xf8\xa1\x31\x45\x3d\xa0\xdc\xad\xf0\x22\xcf\x47\xb0\x68\x9b\xa6\x97\x9c\xcd\xe4\x6e\x58\xb4\x36\xc3\x16\x64\xb8\x81\xf5\x83\x76\x7f\x6d\x2d\x37\x6c\xe6\x86\xa6\xba\xde\xa5\x3d\xc6\x3d\x48\x4b\xbc\xad\x1f\x46\x40\xc7\x6e\x32\x18\x57\x9d\xae\x4c\xf3\x4e\xc4\x82\xf1\xbc\x17\x7b\xe2\xaf\x75\x5f\x9c\x12\x49\xc7\xce\x6c\x22\x51\x89\x4b\x59\xa9\xef\x41\x59\xc7\x71\xa8\x1f\x21\x7b\x74\x32\x9a\x1b\xd7\xa3\xdf\x2b\x79\xd6\xbd\xae\xd0\x43\xf2\xe6\x8c\xb4\xed\x87\x55\xf8\xb8\x4a\xbd\x32\xac\x91\xee\xee\x82\x47\x54\x07\x57\xbc\x97\x3f\x0d\x89\xfd\xd6\xa0\x97\xab\x5d\x93\x77\xc0\x2f\xef\x73\x9d\x0e\xd7\x9b\xec\x82\x77\xbf\xfa\x7a\xf9\x9c\xac\x2f\xf4\xb5\x5e\x66\x7b\x94\x83\xd9\xa5\x39\x00\x5f\xbb\x25\xae\xcc\x17\xdc\xe4\x42\x66\x73\x11\x47\xaf\x55\x51\x2d\x7c\xb8\x38\x8f\x9c\xf4\x63\xfd\xb0\x36\x24\xc5\xa9\xe9\x95\x63\x82\x8d\xdb\xb6\x38\x0d\x9c\x8d\x50\x7a\x16\xb3\xda\xd9\xe9\x7d\xc3\xa7\x52\x30\x43\xa8\x63\x42\xb3\x52\x65\xc6\x4e\xde\xbe\x4e\x8c\x1f\xde\x65\xd6\x64\x08\x66\x3c\xa4\x21\xe4\x2c\x5b\xc8\xd6\xe4\x0a\x85\x19\x70\xb4\x3c\xcb\xd5\xab\x5f\xe9\x9f\xa9\x57\xb5\x52\xdc\x3a\x7c\x33\xda\xfb\x2d\x1f\x2c\xa5\x64\x79\xa1\x8e\xbf\xca\x7f\xa0\x94\x92\xe5\x79\xd7\x5b\xa6\x94\x2c\x9d\xb2\x3b\x2d\x15\xcf\xca\x2c\xeb\x7d\xfe\xa0\x30\xca\x9b\xa8\x1f\x30\xe9\xef\x6e\xc5\x9d\xf9\x29\x88\x47\x7a\xc3\x54\xa3\x6c\x57\xda\x79\x93\x2f\x30\xc3\xe2\x06\xdf\x49\x12\x7c\x1e\x37\x39\x5f\x6d\x85\x9e\x8c\xc7\x21\xe8\xc0\xec\xac\x41\xdc\xde\xe1\xf7\x6d\xe9\xb4\xe5\x12\x48\xc4\xf1\x5f\x36\xf0\xf5\x41\x2c\x75\xf6\x5e\x10\x73\x6e\x11\x08\xb2\xbe\x24\xa2\x8e\xe8\xf6\xb5\xff\xb5\x29\xaf\xad\xc9\x7e\x85\x6a\xf1\x43\x7b\x53\x17\x4d\x75\xc3\xfe\x61\x34\x04\x81\x77\x62\x04\xd1\x59\xa9\x9e\x0a\x6b\x1b\x10\x39\xa1\x99\x5a\x65\xee\xf8\x19\xaa\xb2\xfa\x2b\x90\xfe\xdc\x20\x7d\x5b\xda\x9f\x10\x69\x61\x94\x32\xb3\xc8\x82\xb8\xac\x45\x8c\x5f\xdb\xe9\x24\x2b\x26\x05\x15\xc8\xeb\x9c\x7d\x57\x21\x6a\x35\x84\x70\xb3\x0c\xdc\x43\x15\x29\xce\x54\xcd\xbd\x97\xc5\x8f\xf3\x21\x14\xde\xd9\xb9\x31\x38\x33\xd4\x4a\x7e\xac\x7b\x8c\xe4\xc5\x5a\x71\x1e\x7a\xe8\x9a\x95\x39\xdd\x8f\x60\x0f\x8a\x21\x94\x4a\x29\x72\x95\x3f\x6e\x7c\xb5\x20\xaf\x6f\x7e\x5d\x41\xae\xa4\xb9\x5e\x81\xf6\xa5\x51\x3f\xf1\xa7\xb3\xb9\x58\x36\xa2\xcc\xe9\xbe\x7a\x93\x1b\x6d\x70\x59\x15\xca\xf6\x9b\xa8\x50\x70\x81\x33\xde\x6c\xe0\x30\xd8\xb3\xc2\xe8\x1c\xac\x05\xc3\x43\xc1\x3c\xb2\x68\xe4\xc1\xc9\x93\x22\xf7\xa2\x26\xcd\x95\x94\x2c\x7d\xb1\x70\x5f\x2c\x61\x08\x19\x08\xc4\x93\xc8\xc3\x65\x22\xb1\x07\x42\xe9\x0f\xc7\x1c\xc1\xac\x0f\x8c\xac\xa1\x7c\x88\xae\xe8\x4b\x61\x8f\x2e\x75\xbf\x3e\x84\x19\x56\x15\xb9\xc2\x11\x74\x60\xf8\x82\xe8\xc7\x48\x8f\x05\x86\x46\x62\x6c\x2e\xce\xb7\x78\x93\xc7\x7d\x6d\xd3\x6f\x4f\xc6\xe6\x73\x77\x57\xff\x93\x08\xf6\x5e\x3d\x98\x8e\x3b\x3d\x4b\xff\xdc\x31\x10\xfd\xa3\xc7\x5c\xa0\x37\x67\x0f\x3a\xeb\xf6\x2f\xcc\x3d\x13\xfa\x28\xd7\x20\xe6\xd8\x30\x46\xb8\x3e\x36\xb4\x6e\x4b\x73\xdc\x4e\xe2\x7b\x9b\xe3\x31\x89\xa0\x1a\xa4\x9b\xb4\xeb\xbc\x67\xd3\x8d\xe6\x6a\xac\x93\x38\xb5\x07\xe2\xc7\xa1\xca\x6e\x1e\x73\x41\xf5\x86\x59\x29\x76\xdc\x51\x79\x9a\xf7\x48\xf8\xc3\x5a\x8f\x2f\xb8\xa4\x72\x36\xe0\x63\xca\xcb\x2f\x8f\xd1\x52\x31\x5b\xb9\x4d\x43\x78\xe6\x3a\x07\xad\xe3\xd7\x79\x3f\x45\xe6\xff\xf8\x8a\x73\xd7\xe5\x26\xf2\x24\x54\xfb\x34\x4b\xaa\x84\x3f\x29\x29\xca\x8c\x2e\x72\xac\xec\xaf\x79\x3d\xfb\x57\x8c\x4d\x74\x5e\xfe\x51\x1f\xfa\x68\x11\xbd\x64\xd9\xa2\xc2\xdc\xd8\x18\x1d\x5d\x7c\xa1\xe3\xd9\xff\xb4\x45\xb0\xb9\xbe\x43\xdc\xb3\x47\x84\x76\x92\x9f\x43\x04\x82\xcd\x53\xc2\xf7\x75\x8b\xd2\xe2\xa0\x08\xd2\x39\x49\xed\x5d\xcb\xee\xee\xc3\xf3\xfe\x1d\xf4\xec\xe3\x5d\x21\x36\x95\xf4\x29\x84\x6e\xfe\xff\xef\x0c\x5e\xb1\xe6\x8d\xc9\x5a\x87\x36\x2a\xca\xf9\x42\xb4\xae\x46\x2d\x7e\xb3\x4b\x52\x76\x17\xb9\x09\x36\x25\x93\x51\xcf\x95\x55\x20\x36\x19\x95\x38\x1e\xb0\x9c\x7e\x44\x17\x7c\xcb\xd9\x46\xe8\x7e\xe6\xdd\xdc\xc1\x60\xcb\x8d\xf1\xd2\x4e\x98\x08\xc2\xaf\x50\x24\x37\x84\x2e\xd0\x81\xa0\xbe\x7b\x4c\xac\xea\x6b\xb0\xc8\x59\xa7\x4a\x00\x4d\x19\xcd\x91\x8f\x20\x32\x17\x9a\xfa\x4e\xb8\xf6\xd9\x57\x3b\xff\x1f\x00\x00\xff\xff\xa1\xd7\x2a\x07\xb0\x50\x00\x00")

func assetsScriptScriptJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsScriptScriptJs,
		"assets/script/script.js",
	)
}

func assetsScriptScriptJs() (*asset, error) {
	bytes, err := assetsScriptScriptJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/script/script.js", size: 20656, mode: os.FileMode(420), modTime: time.Unix(1511725846, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsStyleStyleCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5a\xef\x6e\xa3\xb8\x16\xff\x9e\xa7\xb0\x54\x5d\xb5\xbd\x2a\x19\xd2\x36\x69\x87\x7e\x99\x07\xb8\xba\x5f\xf6\x09\x0c\x1c\x12\xab\x60\x23\xdb\xb4\xc9\xac\xf2\xee\x2b\x1b\x0c\xc6\x60\x48\x32\x19\x75\x77\xd5\xd1\x08\xb0\x7d\xce\xef\xfc\x3f\x07\x12\xb3\xf4\x80\xfe\x5c\x20\x94\x31\x2a\x83\x0c\x17\x24\x3f\x44\x48\x60\x2a\x02\x01\x9c\x64\x6f\x0b\x84\x62\x9c\xbc\x6f\x39\xab\x68\x1a\x24\x2c\x67\x3c\x42\x37\xe9\x5a\xfd\xbd\x2d\x8e\x8b\x65\xb2\xc3\x3c\xf8\xe4\xb8\x2c\x21\xd5\x94\x3e\x19\x4f\xf5\x83\x08\xc5\x1c\xf0\x7b\xa0\x1e\xbc\x99\x05\xfd\xc8\xac\xe0\x3c\xd7\x34\x72\x86\x53\xe0\xfa\x74\x4a\x44\x99\xe3\x43\x84\xe2\x9c\x25\xef\xfa\x18\x49\xe5\x2e\x42\x8f\x61\xb9\x57\xb7\x3b\x20\xdb\x9d\xec\xee\x1b\x48\x92\x63\x2a\x4a\xcc\x81\xca\x37\x23\x8e\x20\x3f\x21\x42\xa1\x23\x03\x29\xf0\x16\x22\x54\xf1\xfc\x6e\xb9\xfc\xa6\xef\xc4\xb7\x1a\xc1\x52\x7c\x6c\xef\x9d\xed\x35\x91\x55\x18\xfe\x47\xff\xa7\x56\x31\x25\x05\x96\x84\xd1\x80\xe2\x02\x22\xc4\x99\xc4\x12\xfa\x2b\x69\xc5\xf5\x45\x84\x56\xa2\xbf\x42\x24\xd4\x4b\x41\xc2\x2a\x2a\x23\x44\x68\x46\x28\x71\x09\x48\x52\x10\xba\x0d\xb2\x8a\x26\x35\x9d\x9c\x50\xc0\x5c\xe9\xeb\xc7\x3b\x1c\x32\x8e\x0b\x10\x0d\xeb\xda\x82\x9c\x15\xfa\x02\xd5\xca\xc8\x18\x2f\x0c\xb6\xbb\x30\x85\x5a\xb2\xe3\x02\x21\xc9\xbc\xfb\x9e\x36\xd6\xce\xc6\x32\x0a\x46\x8c\x6b\xf3\x94\x4c\x90\x1a\x0e\x87\x1c\x4b\xf2\x01\xb6\x4d\x9e\x95\x49\xfa\xa7\xa2\x28\x86\x8c\x71\x78\xe8\xd3\xb2\x6f\x82\x8c\xe4\x39\xb8\xf4\x71\x2c\x58\x5e\xd5\x5a\xc9\x21\x93\x8d\x21\x4f\x60\xa5\x09\x25\x8c\x4a\x50\xda\xbd\xbd\x7d\x9b\x72\x2b\x63\xd3\x69\x27\x3f\x05\xfa\x08\x85\xcd\x3a\x4e\xd2\x67\x45\x21\xae\xa4\x64\x54\xef\x33\x12\x3c\x6d\x6a\x07\x56\x76\x0d\xdc\x87\x31\xe3\x29\xf0\x08\x51\x46\xb5\x06\x4a\x9c\x2a\x9e\x11\x0a\x5b\xc7\xb7\x5c\x7c\xf5\xda\x8b\x85\xcf\x5d\xe3\x4d\x23\x90\xbe\x7f\xff\xae\x77\x56\x5c\xa8\xfb\x92\x11\x2a\x81\x77\x10\xa3\x1d\xfb\xf0\x0b\xf4\xf2\xf2\x62\x6d\xcd\x58\x52\x09\xbd\x95\x55\x52\x89\xa1\x6d\x74\x5c\xdc\xe0\x34\x0d\x2c\x89\x3b\xa3\x66\x64\x0f\x69\x2d\x9f\x94\xac\x50\xea\xaf\x91\xf3\x5a\x7c\x73\xdb\x18\xe7\xf9\xb9\x1f\xf3\xe6\xbe\xd6\x4e\xc0\x71\x4a\x2a\x11\xa1\xc7\xc7\xfa\x71\x81\xf9\x96\xd0\xc6\x51\x3a\x8d\x8d\xe9\x73\x28\x9b\x93\x40\x4e\x4b\x2b\x03\x35\xfa\x32\xcd\x6d\x97\x6a\x0a\xbc\xa5\x20\x55\xaa\xb9\x75\x73\x8d\xeb\x37\x23\x89\xc8\xc8\x6a\x2d\x70\x28\x01\x4b\x25\x5b\x73\xe9\xac\x77\xea\x4f\xa0\x45\xc9\xf6\x81\xd8\xe1\x94\x7d\x2a\x97\x0a\xd1\x4b\xb9\x47\x7c\x1b\xe3\xbb\xf0\x01\x35\xff\x96\x4f\x1a\x9e\xd6\x40\x73\xbe\x3b\x85\xc2\xe5\x4a\x58\x29\xc9\x32\xf9\xb4\x07\x59\xa2\x39\x10\x94\xed\x07\x18\xd6\xf7\x75\x91\xa9\xa3\x39\x28\x31\x05\x0f\xe5\xd6\xe9\xc7\x53\x88\x64\x65\x84\xd6\xaf\xb6\xa3\x04\xae\x13\x6a\x44\xe4\xa7\xf6\x9a\xc6\xc5\x62\xa6\xd3\xcc\x8f\x02\x52\x82\xd1\x5d\x81\xf7\x41\xe3\x9b\x1b\x75\xea\x5e\x83\x19\xc2\x6b\x3d\x38\xc1\x79\x72\xa7\x8b\x47\x80\x74\xe4\x6a\x9d\x9a\x8c\x66\x18\x1f\x6d\x16\x84\x9e\xc7\x62\x13\x36\x54\x0c\x55\xcd\x73\x5d\xb3\x7c\x0a\x0d\xcf\x63\x57\x68\xbf\x48\x8d\x5d\x1c\x6f\xc2\xf2\x14\xb5\xba\x68\xaf\xaf\x55\x2f\x87\x4b\x95\x6a\xb7\x32\x13\x1a\x34\x39\x7c\x48\x7b\x55\x93\x3e\x2e\x96\xc0\x39\xfb\x3a\x53\x9d\xdb\xc5\x59\x09\x57\x09\xd7\x72\x90\xb0\x97\x01\xce\xc9\xb6\x97\x7e\x1a\x09\xb8\x2a\x06\xb3\x6e\xe0\x28\xe2\xfa\x5e\xe0\x63\x70\x96\x13\x10\x21\xf5\x69\x75\x11\x08\x79\xc8\x21\x90\x87\x12\xba\x92\xe3\xad\x4e\xc7\xc5\x4d\xca\x3e\xa9\xf2\x1c\xf1\x15\xa6\xbe\x04\xf1\xb4\xc9\x1c\x79\xae\x6e\x31\x1f\xfd\x33\x0c\x66\x91\x58\x9a\xcb\x89\x0e\x77\x22\x50\xfa\x7d\x64\xab\xa6\xd5\x66\x50\xa8\xfb\xc6\x1c\xc7\x10\x51\x26\xef\xa2\x1c\x0b\x19\x24\x3b\x92\xa7\xb5\xc0\x2d\xcb\xc6\xa6\xe5\x1e\x09\x96\x93\xd4\x6e\x52\x47\xa9\x4d\xd6\xe2\x2c\x54\x7f\x9e\x76\x70\x54\x41\xff\x6d\x54\xa4\x77\x05\xf0\x01\x54\x0a\xe3\x2f\x9e\x23\xed\x95\x1e\x96\x2e\x9a\x10\xdb\x7c\x51\xf7\x9f\xca\x31\x5b\xaf\xab\xf5\xee\xe3\xed\x8e\x2f\x4d\x6c\xe8\x78\x59\xad\xeb\x22\x74\x43\x59\xf0\xa5\xf1\x67\xaa\xe2\x2a\x3c\xa9\x2c\x0e\xf1\x5e\x3f\xbe\xfc\x2c\xce\x09\xb1\x1e\x95\xdd\xca\xb2\xc0\x68\x8f\xee\x44\x52\x6f\x2e\x5a\x85\x93\xf5\xc4\xea\xcb\x9f\xec\xf1\xe8\xd3\x8c\x55\xa1\xce\x5a\x4b\xc9\xca\x91\x51\xb6\x9d\x4a\xb4\x1d\x43\x67\xe2\x74\x60\xb5\xb3\xc8\xab\x2f\xbe\xad\xb1\xaf\x65\x68\x2e\x02\x01\x98\x27\x3b\x65\xfa\xb9\x1e\x61\x7a\x34\x7a\x0c\xdd\xf7\x21\xaf\x73\x7e\xe6\x9d\x29\x55\x3a\x31\xe9\xca\x9e\x2a\x37\xa3\xd3\xd6\xca\x8c\xde\x13\xb2\x79\x47\xc3\xe1\x21\xd8\x13\x39\x3e\x2c\x7a\x35\xd2\x77\x67\xa3\x90\xd7\x71\x7d\xfc\x33\x86\x42\xb5\x61\x74\x24\xec\x5e\x3f\x69\xf5\x35\x2a\xe6\x20\xaa\x5c\xfe\x4b\xba\x85\x31\xa1\xae\xdf\xe4\x4d\x31\x39\xa7\xd1\x73\xe8\x98\xfb\x1d\xe8\x4a\x73\x8d\x16\xa2\x97\xb9\x36\x61\x5f\x9f\xab\xa6\x46\xcc\xe0\xb8\xbc\x8d\xf0\x11\x56\x76\x27\x74\xfb\xe0\xdd\x00\x45\x29\x0f\x13\xcb\xaa\xc9\xbe\xb0\xfc\x77\xd2\xaf\xdb\xd1\xc2\x8f\xf4\x64\x20\xd7\xb0\x93\x8e\x84\x08\x11\x89\x73\x92\xcc\xa2\x1a\x98\x65\x06\xe6\xf5\xcd\xd8\x49\xdf\x9f\xc1\x66\xcc\xfe\xeb\xfa\x9a\x65\xf1\xdb\x5c\xf6\x17\x9a\xe0\x39\xad\x4c\xf7\xc3\xde\xd3\xec\x6a\xb9\xc2\x54\xbb\xf5\x4c\x4c\x34\x2c\x7f\x83\x8e\x1b\x59\x4e\x7c\xf1\x51\x37\xdd\xd3\x2f\x3e\xda\x81\x81\xd0\x8c\x7d\x45\x89\x1b\x24\xdb\x99\xfa\x35\x04\x7c\xfd\xf2\x35\xc1\xe3\x9c\xea\xd5\x27\xd3\xdd\x66\x9c\xfd\x04\x3a\xe1\xcd\x08\xb1\x12\x27\x44\x1e\x22\x14\x2e\xd7\x23\x76\xea\x6e\xb1\xfe\x60\x25\x86\x03\xd7\x44\x0b\x7f\x02\x39\xab\x47\x6c\x5b\x0d\xd4\xcc\x70\xce\x61\x89\xe3\x1c\x7a\x3b\x71\x25\x99\x77\xa3\x4c\xa3\x8c\x70\x13\x13\xdd\xe7\x50\xa7\x06\xdb\xb8\x75\x53\x6e\xf9\x4a\xd0\xeb\xd2\xfd\x7c\x74\xfc\x59\xcc\xee\x2f\xfd\x64\xea\x35\x24\xc9\x41\x3c\xcc\xac\x9b\xa8\x9d\xdd\xd7\x55\x8b\xa1\x21\xe7\x40\x9c\x90\xe6\xda\x59\xea\x3c\x82\xf3\xb9\xc6\x9b\x5e\x7a\x93\xc4\x2c\xc3\x5f\xe9\x59\x4e\x79\xf1\x39\xcd\x1e\xe1\x0b\x59\xbb\x1f\x3b\x8f\x8b\x65\x8c\x0f\x7f\x97\x74\xea\x4b\x00\x33\x49\xb6\x27\xc1\xf5\xf3\xeb\x38\xf9\x73\x52\x6b\x4b\xa1\xbd\xd2\x6f\xbc\x1e\x46\x57\x04\x40\x0a\x5c\x8c\x2f\xe6\x00\xc9\x0e\xb8\xf0\xfc\x20\xc2\x31\xc0\xa3\xf1\x65\x0f\x00\xeb\x0b\xbc\x1f\xc8\xf4\x26\x03\xa8\xf7\x85\x7d\x98\x22\xe7\x31\x38\x9f\xe6\xff\xaf\x7f\x3e\x71\xeb\x3b\xe9\x60\x73\x0e\xff\xd1\xac\xfa\xcf\x8f\xc2\xee\x08\xfc\xcf\x2c\xfb\x29\x5c\xfc\xca\xf2\xb8\xf8\x2b\x00\x00\xff\xff\xfc\x46\x01\x09\x5a\x23\x00\x00")

func assetsStyleStyleCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsStyleStyleCss,
		"assets/style/style.css",
	)
}

func assetsStyleStyleCss() (*asset, error) {
	bytes, err := assetsStyleStyleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/style/style.css", size: 9050, mode: os.FileMode(420), modTime: time.Unix(1511725846, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/index.html": assetsIndexHtml,
	"assets/images/back.svg": assetsImagesBackSvg,
	"assets/images/loader.svg": assetsImagesLoaderSvg,
	"assets/images/magnet.svg": assetsImagesMagnetSvg,
	"assets/images/pause.svg": assetsImagesPauseSvg,
	"assets/images/play.svg": assetsImagesPlaySvg,
	"assets/script/script.js": assetsScriptScriptJs,
	"assets/style/style.css": assetsStyleStyleCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"images": &bintree{nil, map[string]*bintree{
			"back.svg": &bintree{assetsImagesBackSvg, map[string]*bintree{}},
			"loader.svg": &bintree{assetsImagesLoaderSvg, map[string]*bintree{}},
			"magnet.svg": &bintree{assetsImagesMagnetSvg, map[string]*bintree{}},
			"pause.svg": &bintree{assetsImagesPauseSvg, map[string]*bintree{}},
			"play.svg": &bintree{assetsImagesPlaySvg, map[string]*bintree{}},
		}},
		"index.html": &bintree{assetsIndexHtml, map[string]*bintree{}},
		"script": &bintree{nil, map[string]*bintree{
			"script.js": &bintree{assetsScriptScriptJs, map[string]*bintree{}},
		}},
		"style": &bintree{nil, map[string]*bintree{
			"style.css": &bintree{assetsStyleStyleCss, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
