// Code generated by go-bindata.
// sources:
// assets/index.html
// assets/images/back.svg
// assets/images/loader.svg
// assets/images/magnet.svg
// assets/images/pause.svg
// assets/images/play.svg
// assets/script/script.js
// assets/style/style.css
// DO NOT EDIT!

package main

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x51\x4b\x6e\xc3\x20\x10\x5d\x27\xa7\xa0\xac\x63\x93\x2c\x2a\x55\x15\xf8\x12\x3d\x01\x81\x97\x32\x2d\x60\x0b\x26\x4e\x72\xfb\xca\xc6\x52\xab\xae\xb2\x01\xde\x0f\xc4\x3c\xfd\xe2\x47\xc7\x8f\x09\x22\x70\x8a\xc3\x5e\xb7\x6d\xa7\x03\xac\x1f\xf6\xbb\x9d\x4e\x60\x2b\x5c\xb0\xa5\x82\x8d\xbc\xf2\xa5\x7b\x93\xbf\x42\xb6\x09\x46\xce\x84\xdb\x34\x16\x96\xc2\x8d\x99\x91\xd9\xc8\x1b\x79\x0e\xc6\x63\x26\x87\x6e\x05\x07\x41\x99\x98\x6c\xec\xaa\xb3\x11\xe6\xd4\x1f\x0f\x22\xd9\x3b\xa5\x6b\xfa\x4b\x5d\x2b\xca\x8a\xed\x39\xc2\xe4\xb1\xbd\xc6\xc4\x11\xc3\x07\xe0\x3f\x6d\xf1\xc8\x5a\x35\x66\xbf\x88\x91\xf2\xb7\x28\x88\x46\x56\x7e\x44\xd4\x00\xb0\x14\xa1\xe0\xb2\x31\x6a\x5d\x7b\x57\xab\x14\xcb\x6f\x8d\x64\xdc\x59\x2d\xb8\xdd\x50\x5d\xa1\x89\x45\x2d\xce\xc8\xc0\x3c\xd5\x77\xa5\x2e\xe7\x3e\x41\x15\x58\xc7\xdd\xe9\xb5\x3f\xf6\xc7\xfe\xab\xca\x41\xab\x66\x1e\x9e\xc9\xf9\x31\x3d\x95\x6d\xe7\x4d\xfd\x6f\xd5\x6a\x6b\x43\x9f\x47\xff\x58\xb3\x9e\x66\x41\xde\xc8\x6d\xde\x6d\x46\xca\xd3\xbc\xda\x9b\x4d\xab\x56\xe6\x4f\x00\x00\x00\xff\xff\x55\xab\x4e\xde\xe4\x01\x00\x00")

func assetsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsIndexHtml,
		"assets/index.html",
	)
}

func assetsIndexHtml() (*asset, error) {
	bytes, err := assetsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/index.html", size: 484, mode: os.FileMode(420), modTime: time.Unix(1511579925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesBackSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8e\x41\x4e\xec\x30\x0c\x86\xf7\x39\x85\xe5\x75\xdb\x24\xed\xd3\x13\x83\x9a\x8e\xc4\x82\xdd\xec\xe0\x00\xd1\xd4\x34\x11\x19\xa7\x34\xa1\xe9\xf1\x51\x06\x04\x96\xbd\xf9\x6c\xf9\xfb\xc7\xf3\x71\x0b\xb0\xd3\x96\x7c\x64\x83\xba\x53\x08\xc4\xd7\x38\x7b\x5e\x0c\xbe\xbe\x3c\xb7\x0f\x08\x29\x5b\x9e\x6d\x88\x4c\x06\x39\xe2\x79\x12\x63\xda\x17\x01\x00\xc7\x2d\x70\x32\xe8\x72\x5e\x1f\xa5\x2c\xa5\x74\x65\xe8\xe2\xb6\xc8\x5e\x29\x25\xd3\xbe\x60\xbd\xda\x3d\x95\xa7\x78\x18\x54\xa0\xe0\x5f\xed\x6f\xfc\x67\xd5\x38\x09\x80\x71\xb5\xd9\x41\xca\x5b\x7c\x27\x83\xc5\xf9\x4c\x08\x6f\x3e\x84\xaa\x65\xc2\x9f\x55\x5b\xfc\x9c\x9d\xc1\xe1\x17\x04\xcf\x74\xb5\xab\xc1\xf4\xf1\x69\x37\xba\x7f\xbf\xd7\x6c\xf0\xa2\xff\x37\x5a\x43\x68\x4f\xcd\x09\xea\x5c\x06\xd5\xf4\x0a\x5c\xdb\x0f\x08\x72\x12\x63\xcd\x39\x89\xaf\x00\x00\x00\xff\xff\xad\x09\x57\xb3\x0a\x01\x00\x00")

func assetsImagesBackSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesBackSvg,
		"assets/images/back.svg",
	)
}

func assetsImagesBackSvg() (*asset, error) {
	bytes, err := assetsImagesBackSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/back.svg", size: 266, mode: os.FileMode(420), modTime: time.Unix(1511656400, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesLoaderSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\xcd\x41\x6e\xc3\x20\x14\x04\xd0\x3d\xa7\x18\xfd\x6e\x1d\x03\x69\x5a\xa1\x0a\x88\x7a\x80\x1e\xa2\x0d\x04\xa3\x12\xb0\x0c\x35\x3e\x7e\x65\xc9\x8b\xcc\xec\x66\xf1\x46\x5f\xb7\x47\xc2\xea\x97\x1a\x4b\x36\x24\x47\x41\xf0\xf9\x56\x5c\xcc\xc1\xd0\x5f\xbb\x9f\x14\xe1\x6a\x99\xae\x6b\xc0\xf6\x48\xb9\x1a\x9a\x5a\x9b\x3f\x38\xef\xbd\x8f\xfd\x75\x2c\x4b\xe0\x67\x21\x04\xaf\x6b\x20\x86\x3d\x4f\x9c\x24\xcb\x00\x3d\x7f\xb7\x09\xb5\x2d\xe5\xd7\x1b\x7a\x79\x7f\xfb\xb9\xb9\x0b\x1d\xc3\xa9\x47\xd7\x26\x43\x17\xc2\x3d\xa6\x64\x28\x97\xec\x0f\x09\x80\x33\xf4\x75\x1e\xa4\xc0\xa7\x1a\x14\x04\xe4\x5e\x31\x48\x45\xe0\x96\xe9\xfd\xd6\xb2\xff\x00\x00\x00\xff\xff\x24\x9c\x62\x4d\xc7\x00\x00\x00")

func assetsImagesLoaderSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesLoaderSvg,
		"assets/images/loader.svg",
	)
}

func assetsImagesLoaderSvg() (*asset, error) {
	bytes, err := assetsImagesLoaderSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/loader.svg", size: 199, mode: os.FileMode(420), modTime: time.Unix(1511579925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesMagnetSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x92\xcd\x6e\x5a\x31\x10\x85\xd7\x41\xe2\x1d\x2c\xaf\xc7\x83\x67\xc6\xe3\x9f\x2a\x97\x48\x65\x0b\xab\x3e\x41\x45\x08\x20\xdd\x40\x14\x28\x17\xf1\xf4\x95\x7d\x41\xa5\xbb\x23\x7b\x3c\xe7\x3b\x47\x7e\x7d\xbb\x7e\xf6\xe6\xb2\xf9\x3e\xed\x8f\x87\xce\x12\x7a\x6b\x36\x87\xf5\xf1\x7d\x7f\xd8\x76\xf6\xcf\xf9\xc3\x65\xfb\x36\x9f\x4e\x5e\x4f\x97\xed\xf3\x18\x59\x73\xfd\xec\x0f\xa7\xce\xee\xce\xe7\xaf\x1f\xb3\xd9\x30\x0c\x38\x08\x1e\xbf\xb7\x33\xf6\xde\xcf\x4e\x97\xad\x35\x97\xfd\x66\xf8\x79\xbc\x76\xd6\x1b\x6f\x72\x36\x39\xdb\xf9\x74\xf2\xf2\xfa\xf5\xfb\xbc\x33\x1f\xfb\xbe\xef\xec\xb0\xdb\x9f\x37\xd6\xbc\x77\x76\xa5\x01\x33\x33\x64\x41\x2e\x69\xed\x3c\x52\x10\x20\xd4\xa0\x40\xe8\x73\x00\xc6\x42\x19\x18\x13\x27\x10\xf4\xaa\x3d\x15\x2c\x1c\x81\x30\x4a\x9a\x4e\x5e\x5e\xd6\x84\x31\x08\x78\x24\xc9\x20\x48\x5e\x1d\xa1\xa7\xaa\x59\x1d\xa3\x46\xee\x09\x55\xd5\x51\xc4\x20\xdc\x3b\x56\x2c\x8e\x91\x84\x97\xff\xf9\xdf\xcc\x4a\x31\x31\x41\xcc\x58\x8a\xb6\x57\x09\xc6\x57\xcd\xe9\x1f\x5e\xa8\xfe\x3e\x55\xb0\xe6\x03\x77\x9f\xc6\xe6\x1a\x5b\xe5\x92\x52\x23\x49\x9d\xcb\x31\x39\x42\xa5\x31\x8b\x1b\xb3\xb8\x66\x31\x82\x85\xe5\xb3\xf9\xcd\xac\x04\x49\x03\x04\xc2\x42\x52\xed\x97\x01\x53\x04\xcd\x98\x63\xe8\x6b\x06\xcf\x2d\x05\x2d\xb9\xa0\xd7\x04\x52\x30\x2f\xaa\xe6\x2a\xa5\x08\x70\x01\xc9\x58\x12\xdd\x95\xaa\xae\xbd\x4b\x98\x52\x82\x88\x89\x8b\xa3\x50\x1b\x03\xd2\xbb\x3a\x91\x42\x44\xe1\x02\xa4\x30\x1e\x8d\xd1\xc1\x63\xa0\xe8\x7c\xdd\xee\x31\x4b\xae\xb2\xd6\x83\x1c\x62\x0d\x12\xeb\x9a\x88\x45\xf8\x0e\x07\x0d\xae\x6f\x37\x35\x62\x51\x5a\xe4\x80\x25\x24\x08\x1e\x53\x11\xc8\x5a\x41\x63\x2c\x4d\x35\xbc\x6a\xb6\xc8\x0a\x94\x90\x4b\x80\x18\x5b\xcd\x1e\x42\x00\xff\x4b\x1e\xc7\x72\x9f\x5e\xc8\x63\x41\xed\x53\x1e\x7b\x9f\x9b\xbb\xd9\x59\xfd\xcb\xf5\x73\xce\xa7\x93\xbf\x01\x00\x00\xff\xff\x19\xfb\x2d\xa3\xfc\x02\x00\x00")

func assetsImagesMagnetSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesMagnetSvg,
		"assets/images/magnet.svg",
	)
}

func assetsImagesMagnetSvg() (*asset, error) {
	bytes, err := assetsImagesMagnetSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/magnet.svg", size: 764, mode: os.FileMode(420), modTime: time.Unix(1511654043, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesPauseSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\x4d\x6f\xe2\x30\x10\x3d\x83\xc4\x7f\xb0\xbc\x57\x67\x32\x63\x8f\xbf\x2a\x42\xa5\xe5\xd2\xcb\x5e\xf7\xbe\x0a\x14\xd0\x52\xa8\x0a\x0b\x68\x7f\x7d\xe5\x0f\x68\x2a\x21\x12\xc9\xb1\x33\xe3\x37\x6f\xde\xb3\xa7\xcf\x97\xb7\xad\x38\x2d\x3f\x0e\x9b\xfd\xae\x93\x04\x28\xc5\x72\xd7\xef\x17\x9b\xdd\xaa\x93\xff\x8e\xaf\x4d\x90\xe2\x79\x36\x19\x4f\x0f\xa7\xd5\x30\x8f\xa4\xb8\xbc\x6d\x77\x87\x4e\xae\x8f\xc7\xf7\xa7\xb6\x3d\x9f\xcf\x70\x36\xb0\xff\x58\xb5\x1a\x11\xdb\xc3\x69\x55\x53\x9e\x2e\xdb\xcd\xee\xef\xbd\x44\x8a\x31\xb6\x39\x2a\x27\xe3\x91\x10\xe2\xb4\x59\x9e\x7f\xee\x2f\x9d\x44\x81\x82\x4d\x00\x6b\xdc\xf5\x2b\x67\x93\xf1\x68\xfa\xfe\xe7\xb8\x16\xaf\x9b\xed\xb6\x93\x3f\x16\x36\xbd\x52\x2c\x3a\xf9\x8b\x1c\x03\x5b\xa3\xf0\x85\x02\x68\xef\xe6\x64\xc0\x68\x56\xa8\x22\x20\x93\x22\x08\xe8\x95\x05\xd6\x36\x8f\x3c\x4f\x7f\x42\x8e\x2a\x04\x44\x52\x79\x87\xbe\x2e\x12\x0a\x9d\x18\x09\x62\xa4\xc9\x78\x94\xe8\xdd\x79\x7a\x54\x0c\x91\x43\x2d\x10\x41\x1b\x53\x0a\x28\xd2\x10\xd8\xf7\x06\x1c\x45\x95\x46\xaf\x3c\x44\xd4\x39\x1c\x72\xd8\x52\x59\xac\x89\x1d\x50\xa0\x3e\x61\xc5\x4c\x5a\x1b\x6a\x08\x02\x51\xc5\x69\x72\xe2\x03\x22\xb9\x42\x93\xc6\x4a\xa0\xf1\x10\x62\xa8\xf3\x02\xf2\xbb\xb4\xd5\x63\xc3\x10\xad\x6e\x32\xe9\xa6\x14\xcb\xf8\x35\x6f\x4e\xde\x80\x0b\xb6\x76\x45\x2e\x02\xa3\x56\xa8\x6e\x32\xff\x97\xed\x43\x3f\xd8\x18\xa0\x2b\x93\x39\xeb\x08\x1c\x5d\x85\x63\x6d\x41\x93\x55\xa8\x58\x23\x68\xe7\x15\xbe\x68\xcf\x80\xc1\xf5\x4d\x55\x20\x93\xf2\x65\x43\x25\x55\xb0\x1e\x28\x90\x9a\xd7\x94\xa5\xb6\xa9\x1d\xa3\x55\x96\xa0\xce\x0b\xca\xd5\xd2\xa1\x71\x44\x5f\xc6\xdd\x12\x93\xa0\xf8\x65\x5c\x88\x7e\x60\x5c\x65\x73\x33\xee\x01\xab\x52\x25\x5b\xaa\xe3\x1d\x4b\xb3\x71\x3c\x30\x8e\x06\xc6\xd1\x77\xe3\xe6\xe5\x2e\x70\x3e\xab\x14\x15\x1b\x07\xde\x94\x43\xfc\x4d\xf1\x62\xcf\x34\xdd\xc2\xd9\x64\xfc\x19\x00\x00\xff\xff\x95\x2f\x32\x11\xe6\x03\x00\x00")

func assetsImagesPauseSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesPauseSvg,
		"assets/images/pause.svg",
	)
}

func assetsImagesPauseSvg() (*asset, error) {
	bytes, err := assetsImagesPauseSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/pause.svg", size: 998, mode: os.FileMode(420), modTime: time.Unix(1511645360, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesPlaySvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x51\xcb\x6a\xc3\x30\x10\x3c\xc7\xe0\x7f\x10\xea\x55\x5e\xaf\xb4\xf2\x4a\x2a\x71\x02\xcd\xb9\xa7\x7e\x41\x71\x12\xc7\xe0\xd8\x21\x76\xed\xd0\xaf\x2f\x72\xd3\x17\x74\x05\xd2\x32\xcc\x8e\x34\xa3\xf5\xf6\x76\x6e\xc5\x74\xb8\x0e\x4d\xdf\x95\x52\x03\x4a\x71\xe8\xaa\x7e\xdf\x74\x75\x29\xdf\xc6\x63\xe6\xa5\xd8\x6e\xd2\x64\x3d\x4c\xf5\x6f\x9e\x96\x69\xb2\x12\x42\xdc\xce\x6d\x37\x94\xf2\x34\x8e\x97\xc7\x3c\x9f\xe7\x19\x66\x82\xfe\x5a\xe7\x06\x11\xf3\x61\xaa\xef\xbc\xa9\x39\xcc\x4f\xfd\xad\x94\x28\x50\x58\x0d\x21\x84\xfb\x21\x37\x69\xb2\x5a\x5f\x5e\xc7\x93\x38\x36\x6d\x5b\xca\x87\x7d\x11\x97\x14\xfb\x52\x3e\x13\x03\xb2\x57\x06\x41\x3b\x6e\x33\x13\x32\x83\x3b\x06\xc7\x3a\x43\x40\x2a\x14\x03\x31\xc5\xbe\x70\x8a\x17\x04\x41\x6b\xbb\x2b\xc0\x21\x2b\x04\xe3\x9d\x2a\x20\xa2\x6c\xbe\xba\x10\xc2\x64\x31\x4d\x56\x3f\x25\x84\x10\x15\x2a\x04\x72\x26\x4e\x2d\xb3\x4e\x93\x42\x28\x16\x4d\xef\xb9\x42\xd0\x36\xe2\xe8\xe2\x4e\x0b\x47\x6b\xab\x10\x2c\xdf\xef\x8d\x9c\x10\xd4\xa2\x14\x5c\x7c\x57\x24\x15\xec\xb3\xe8\xc0\xb5\x8b\x81\xcf\x48\xfe\xad\x0a\xc1\xb8\xe8\x4d\x7b\x17\x75\xc9\x64\x08\x36\xd8\xef\xde\x1b\x7a\x21\x06\xa2\x25\x14\x62\x52\x7f\x22\x7a\x97\x22\x8f\xdf\x15\xa3\xdf\xa4\xc9\x47\x00\x00\x00\xff\xff\x81\xc0\x9e\x0d\xe0\x01\x00\x00")

func assetsImagesPlaySvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesPlaySvg,
		"assets/images/play.svg",
	)
}

func assetsImagesPlaySvg() (*asset, error) {
	bytes, err := assetsImagesPlaySvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/play.svg", size: 480, mode: os.FileMode(420), modTime: time.Unix(1511641898, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsScriptScriptJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x7c\x7b\x73\xdb\xb8\xae\xf8\xff\xf9\x14\x58\xef\xfc\x2a\x79\xeb\xa8\xc9\x9e\x3d\xbf\x7b\xc7\x5d\xdf\x4e\x5e\x3d\xcd\x3d\xe9\x63\x92\xf4\xde\xd9\xe9\x74\x3a\x94\x04\xc7\x6a\x68\xd1\x4b\xd1\x49\xbc\x39\xfe\xee\x77\xf8\x92\x48\x4a\x7e\xa4\x4d\x77\x4f\xff\xd9\xd4\x14\x09\x80\x00\x08\x80\x00\xb8\x19\x25\x55\x05\x87\x64\x71\x5a\x8e\x19\xe0\x9d\xc0\x32\xaf\xe0\x1c\x49\x26\x92\x23\x36\x9d\xb1\x12\x4b\x01\xf7\x3b\x00\x19\x2b\x2b\xc1\xe7\x99\x60\x3c\x9e\x71\x36\xab\xfa\x6a\x18\xa0\x9a\xcf\xd0\x0e\x3d\x57\x23\x62\x52\x54\x49\x25\x88\x40\x18\x99\x49\x00\x94\x91\xbc\x28\xaf\x86\x20\xf8\x1c\x07\x66\x10\x39\x67\x7c\x08\xe5\x9c\x52\x3b\x54\x94\x63\xa6\x47\xd4\xc0\xd2\x01\xf9\x89\x32\x76\x3d\x9f\xc1\x48\x7d\x96\x1f\x96\x3b\x8a\x32\x43\xe7\xff\x16\x94\xbe\x66\xf3\x52\xc4\x96\xb6\x70\x19\xde\xca\xbd\x9e\xa9\xdf\xb1\xfa\xa8\xe8\x4e\x8a\x7c\xa0\xe7\xa6\x64\x71\x44\x28\x4d\x49\x76\x9d\xa4\x45\x99\xab\x49\xfd\x7e\x37\xae\xf7\xe5\x74\x25\xb6\x24\x23\x65\x86\x34\x6e\x96\x72\x2c\x73\xe4\xf5\xe4\x62\x0c\x71\xc3\xa8\xc4\xb0\xa7\x5f\xf3\x8b\xa3\x98\xf3\xd2\x88\x22\xe3\x48\x04\x9e\x50\x9c\x62\x29\xe2\x33\x46\x72\xe4\xef\x48\x89\x03\xc5\x09\xc3\xf6\x25\x20\xad\x30\x04\xac\x58\xbc\x15\x58\x33\x03\xa0\x97\x17\x37\xbd\x41\xfd\xf3\x1e\x94\x96\xbc\x21\x53\x1c\x42\x4f\xc1\xdb\x9d\x91\x12\x7b\xb0\x6c\x26\x85\x18\xcd\x07\x9f\xb4\x47\x23\x22\x25\x8b\x5d\xa9\x28\x1e\x09\x6b\xc1\x01\xf4\x28\x49\x91\x3a\x20\x57\x01\xdd\x2d\xc9\xd4\xdf\x9c\xb7\x3d\x39\x25\x91\x53\xea\xcf\xfd\x6f\x40\x43\x85\x98\x23\xaf\x36\x90\x61\x66\x7d\x53\x4a\x28\x62\x36\xd9\x4c\x8a\x9d\xf6\x25\xb4\xa4\x73\x21\x58\xb9\x0d\x31\x24\xcf\x77\x3b\x66\x03\xb0\xf2\x88\x16\xd9\xf5\x10\xe2\x3e\x8c\xfe\x0b\x9c\xb3\xcd\xca\x83\x3c\x8f\x43\x72\xa7\xe4\xaa\x44\xf1\xfe\xfc\xac\xef\x6f\xab\x77\x90\xe7\x70\xc9\x38\xc7\x52\xf4\x9a\xbd\x04\xea\x6c\xcf\xb4\x63\x2e\x62\xa5\xf6\x03\x65\xbf\x3c\x83\x50\xa1\xb8\x90\x78\xe3\xfb\xc6\x06\x8e\x09\xad\x70\x60\xcd\x9f\xb3\x72\xa8\xfe\x0b\x4b\x63\x36\x96\x3b\xca\xec\xc2\xf9\xc9\xcb\xf3\x93\x8b\x57\x9f\x4e\xdf\x5c\x9e\x9c\xff\xcf\xc1\x19\x8c\xe0\xef\x7b\x7b\x7b\xcf\xcd\xe7\xc3\x83\xdf\x3e\x5d\x9c\x1c\x9c\x1f\xbd\xfa\x74\x7c\x72\x76\xf0\x1b\x8c\x60\x5f\x7d\xde\xd1\xf6\xdd\xec\xe7\x88\x16\x5d\xd6\xdc\xa3\x96\x95\x47\x13\x52\x5e\x49\xcb\xad\x39\xa9\x48\x7d\xbe\xe3\x18\xb8\x9c\xdd\x96\x72\x27\x95\x63\x88\xed\xb7\x2b\x14\xa2\x28\xaf\xce\x8a\x4a\xc0\xc8\xae\xf5\x3e\xcb\x4f\xd2\x2a\x6a\xdf\x81\xe2\xb4\x14\xc8\x6f\x08\x8d\x1d\xc1\x35\xf3\x06\xad\xad\x37\x06\xb5\xa6\xc3\xb3\xa9\x3f\x04\x44\xb6\x4c\x5f\x43\xf2\x72\xc7\x19\x0e\x96\x25\x53\x32\x8b\x59\xfa\x59\xd2\xf4\x36\xfd\x8c\x99\x48\x48\x55\x15\x57\x65\x7c\xbf\x1c\x00\x4b\x3f\x3b\x4e\x21\x47\x8a\x02\x0d\x93\xe3\x09\xa9\x26\xbe\x47\x10\x86\xfd\x84\xd2\x38\xd2\x93\xa3\x01\xa8\x79\x35\x8c\x4a\x10\x2e\xb6\x04\xa1\xe6\x76\x40\x60\xb3\xad\x01\xb0\x59\x6b\x3d\xc9\x73\xbb\xdc\x39\x1c\x1a\xc6\xa7\x8c\x50\x7a\x48\xb2\x6b\x2c\xf3\x83\x77\xa7\x71\xf4\x8c\xcc\x8a\x67\x24\xcf\x5f\xcc\x39\x1d\x45\xf0\x14\xb0\xcc\x58\x8e\xef\xcf\x4f\xeb\xa8\xc1\x81\xd2\x20\x69\x24\x1b\xba\x41\x4f\x75\xfe\xf5\x2f\x43\x36\xc9\x44\xc1\xca\xea\x1d\x96\xf2\xe0\xc4\xfd\x50\x9a\xae\x20\xbb\x34\x50\x06\x1b\xcf\xd7\x6c\xa1\x96\x77\xd4\x4f\xc4\x04\xcb\x38\x27\x82\x48\x99\x5b\x34\x1b\xd4\xda\xdd\xc0\x6a\x5a\x7d\x6a\x2d\xbd\x5d\xe7\x49\xa2\x57\xaa\x77\xe7\x12\x01\x70\x97\x48\xe8\x37\xf2\x58\xde\x99\xd0\xea\x87\x11\xec\x3d\x0f\x26\xb0\xd2\x60\x0f\xa9\xac\xd5\xfc\xae\xa6\xa1\x6f\xff\x55\xa1\xb8\x2c\xa6\xc8\xe6\x22\xf6\x4c\xc0\x00\xf6\xac\xbd\xeb\x27\x19\x11\xd9\x24\xc6\x07\xb1\xe6\xd9\x33\xb8\x7c\x7b\xfc\x76\x08\x53\xb2\x48\x11\x26\xa4\xcc\x29\x6a\x6b\x07\x13\xe4\x98\x24\x89\x99\x29\xcd\x11\xa3\x98\x08\x4e\x32\x8c\xb1\x46\xdb\xe8\x4d\xc8\x5c\x43\x45\xf7\xe1\x85\x27\x4f\x5a\xe7\x79\x2c\xa3\x39\xc5\xd5\x80\x55\x0e\x12\xf7\x90\x48\x75\x31\x47\xc4\xe0\x1a\x33\x0e\x31\x45\x01\x05\x48\xd6\x43\x01\xbf\xb6\xb0\x50\x2c\xaf\xc4\xe4\x39\x3c\x7d\x5a\x34\xe2\x97\x6b\x72\x2a\xb5\xd1\x9f\xfd\xa1\xf8\xe8\x6a\x51\x4e\x13\x89\x0e\x46\x23\x85\x56\x6e\xe2\x87\x9c\x06\xc4\x3a\x3a\x11\x7e\xf3\xd4\x7d\xb5\xca\xcb\xd3\x2a\x3f\xc0\x53\x88\x5e\x48\x44\xab\xce\xaf\xda\xbb\x39\x16\xda\x38\xdf\x3b\x8e\xb2\x03\x7b\xa0\x71\xdb\x68\x56\xa0\x49\xd6\x39\xd8\x0f\xb5\xe2\x7d\x09\xfe\x46\xc3\x97\x8e\xd7\x5e\x5a\xa7\x78\x48\x16\x17\x48\x78\x36\x69\x39\xc4\xdf\xe7\xc8\x17\x03\xc8\x52\xcf\x84\xaa\x51\x18\x81\xfa\xeb\x3a\xb5\x2c\x85\x11\x64\xa9\x1e\x7a\xf6\x0c\x8e\x91\x92\x05\x88\x09\x02\xc7\xdf\xe7\x58\x09\xa8\x18\x88\x09\x11\x70\x8b\x90\xb3\x32\x12\x50\xcd\xc8\x54\xcd\x48\xc9\xc2\x2e\xbb\x9d\x14\x14\xd5\xe0\xbc\x42\x0e\x62\x31\xc3\x0a\xd8\x5c\x00\x81\x4a\xd3\xa9\x30\x27\x2e\x66\x42\xa9\x61\x30\x8c\x5c\x6e\xfb\xec\xea\x9a\xdc\x78\xc1\x55\x7a\x92\x92\x85\xc6\xfb\x42\xe1\x5d\xa5\x25\xea\xa3\x55\x13\xe3\x30\xef\xfd\x6b\xc1\xa7\x2c\x8d\xd5\x15\x4f\xf9\xcd\xc6\x00\x59\xa3\xc2\xf9\x8a\x45\xc8\xb9\x77\xc3\x69\x64\xba\x1c\xb4\x82\x1e\xe7\x92\x66\xae\x5e\x2d\x17\xe3\xb0\xa0\x39\x48\x19\x45\xc2\x3d\x35\xf5\xe6\xb5\x3d\x8c\x92\x77\x7c\x37\x80\x85\xe2\x72\x73\x17\xad\x55\xeb\x48\x11\x40\x52\x8a\xd2\x94\xb4\xf4\x6b\xce\x69\x4b\xbb\x7c\x2d\x0a\x25\x32\xe7\xb4\x9b\xc3\x2b\xf9\xbb\x8a\xbb\x2b\x79\xbb\x5c\xc9\xbf\x6d\x77\x5d\xdf\xac\xeb\x3c\xc2\x06\x3e\xc8\x5b\x77\xc3\x06\x9d\x47\xa8\x75\x4f\x5f\xa3\x5f\x14\xf9\x2a\xc5\x2b\xf2\xbe\x5a\x1e\x50\x21\x4d\xc8\xcb\x82\x62\xb5\x2d\x15\xd2\xcc\xad\xa2\x63\x2c\x01\x6d\x36\x92\x3e\x1d\xe3\x79\xa9\x0c\x53\xa7\x14\x15\x12\xe3\xb5\xc6\x28\x05\xd4\xc8\x96\x63\x35\x6b\x64\xa5\x82\x59\x39\x94\xb0\xeb\x56\x10\xfb\x8e\xb3\x69\x51\x61\xc2\x51\x86\xa6\x71\x89\xb7\x70\x22\xfd\x6a\x1c\x59\x9b\x33\x26\x05\xc5\x3c\xea\xf7\x3b\x62\x5d\x05\xf5\x73\xc5\x4a\x93\x9e\xe8\xd2\x2d\x89\x9e\xa5\x9f\xa5\x4b\x7a\x7b\x5b\xbe\xe3\x6c\x86\x5c\x2c\xe2\x48\xb9\xef\xa8\x15\x88\x85\x14\xb1\xf4\xf3\x07\x33\xf7\x63\x17\x09\x9f\x28\xbb\x45\x9e\x91\x0a\xdf\xa6\x9f\x63\xab\xb7\x52\x09\x3d\x0e\xb6\x66\x29\xb4\x92\xb6\x03\xce\xc9\x22\x29\x2a\xf5\x57\x7d\x0a\x62\x02\x49\xbc\x8c\xa4\x3c\x18\x46\x4a\xda\x27\x73\xac\xe6\x54\x1a\xc3\x7b\x95\x65\x32\x61\xfe\x35\x2e\x2a\x05\x2f\x19\x33\x7e\x42\xb2\x49\x7c\xed\x73\xe5\x5a\x7a\xe8\xe8\xf4\x38\x72\x79\x20\x21\x25\x45\x0e\x23\x89\xf7\xc3\xf5\xc7\x15\x79\x0f\x39\xed\xc3\xf5\x87\xbd\x8f\x89\x60\x67\x92\xae\x23\x52\x61\xdc\x87\xa7\x70\x9d\x54\xf3\xb4\x12\x3c\xde\xef\x7f\x0c\xa1\xec\xd8\xe3\xd9\xc8\x6f\x4e\x85\x64\x95\xd6\xf9\x63\x13\x51\x3c\x28\x89\xe7\xeb\x7b\x67\xea\x0e\x94\xfe\x9f\x79\x99\x3b\x3d\x76\xe2\x24\xee\xf4\x88\xfe\xe1\xe5\xeb\xe4\xf8\x39\xfe\xfe\xd0\x7c\x9d\xb3\x0c\x6f\x9b\xf3\xec\xe6\xeb\x6c\x08\x95\xe8\xc3\x5b\x2f\xab\xbe\x32\x79\x67\x50\x6f\x4c\xde\xe9\x6b\x77\x13\xd3\xf9\x54\x3d\x77\xd5\x70\x4d\xee\xc3\x4b\x71\xf9\x09\x0f\x0b\x2a\xcc\x72\xad\x4f\x99\x09\x69\xe4\x56\x26\xcd\x3c\x98\xbb\x7a\xee\x43\xf2\x67\x22\x65\xf9\xc2\x4b\xbb\xb8\x79\xdb\x2d\x20\x48\x18\x3c\xc8\xdb\x84\x20\xb6\x00\x22\xc1\xe4\x01\x98\x2e\x40\x00\x3d\xb9\xf3\x9e\x37\xd8\xff\x66\xc8\x72\xea\x67\x05\xc1\xc9\x1b\xb5\x30\xff\xdb\x71\xea\x1d\x67\x57\x1c\xab\xea\xcf\xe2\x56\xbc\xbf\xb7\x07\x3f\x49\xa6\xc9\x53\x49\x51\x60\x7e\xb8\x10\x58\xc1\x33\x39\x56\x15\x7f\xa0\xfa\xd9\x4f\x04\x7b\x59\xdc\x61\x1e\xff\x2c\x8d\x64\xf4\xff\xa2\xef\x94\xbf\x17\xc5\x1f\x7f\x9a\x26\x8e\x19\x9f\x12\x21\x31\xc6\x1e\x2f\xbf\x53\xd6\x1d\x59\x05\xf9\x6b\xf8\xe7\xeb\xe7\xf7\xca\xc4\xe3\x33\x38\x27\xe2\x4f\x56\x41\x89\x51\xb2\xd0\x7a\x1e\xf9\xfb\x7b\x65\xe0\xfb\xbf\x92\x81\xf3\xd9\x77\xcf\x3e\xb5\x83\xbf\xea\x0c\x6b\xfe\x5d\x32\x41\xe8\x1a\x06\xee\x84\xff\xea\x6f\x17\x76\xad\xa9\x54\x46\x75\xd0\x65\x12\x98\xf2\x1a\x19\xb7\x72\x57\x2f\x20\xaa\xcb\x19\xbb\x63\xce\xfe\xc0\x32\x82\x21\x44\x91\x57\x9d\x32\xcb\x6e\x10\x5e\x7c\x7d\x49\x2d\x20\xac\xae\xaa\x35\x95\x34\xaf\x86\x76\x21\xd8\x2c\xa8\x94\xc9\x21\xa7\x44\x06\xc3\xbf\x80\x28\xc2\x45\x8b\x2a\xc2\xdd\xca\xdd\x23\x56\x21\x6b\xea\x74\x0d\x67\x13\x75\xc7\x6a\x56\x40\x9e\x1e\xec\xa8\x2c\xda\x59\xcd\x5d\xc6\xd2\xa8\xa7\x34\x77\x11\xff\x63\x77\x3b\x81\x9a\xf3\x88\x55\xff\x46\x39\x25\xe0\x55\x95\x7f\xf5\xb1\x29\x5f\x6c\x62\x38\x09\x78\x7d\x8d\x8b\x21\xdc\x25\xb4\x28\xaf\x07\x30\xe1\x38\xb6\xbf\x7c\x1e\xde\x25\x33\x22\x26\x0d\x07\xc3\xe2\x6c\x67\x1b\x44\x73\x6b\xfd\x66\x5c\xd9\x55\xe9\x8e\xb5\xbc\x39\xf9\xf6\xad\x11\x01\x4d\xa6\xe4\xbc\xf1\xa2\xa7\x7b\x4a\x4c\x46\x30\xa0\xd0\x53\xbc\xb0\xde\xed\x69\x5a\x58\xf0\xf6\xf3\x07\xa6\xea\xed\x26\x10\x5c\x20\x43\xfd\xc7\x29\x7e\x37\x89\x20\xc7\x9c\xa7\x2a\x0c\x6b\xd2\x19\x50\xcd\xc7\xe3\xe2\x0e\x2b\x18\xc1\x87\x08\xfe\x79\x18\x0d\x20\x82\xd7\xfa\xcf\x3f\xf4\x9f\xcb\xc3\x48\xe5\x52\xba\x4a\x38\x76\x79\x57\xed\xc6\x45\x00\xa3\x7a\x6a\x5d\xb8\x31\xdf\x8b\x3f\x10\x46\x90\x9a\xfb\xcb\x6b\x22\x26\xc9\x8c\xdd\xc6\xfb\x7b\x03\xf8\x1b\xfc\x04\x71\x01\x4f\x61\xdf\x66\xe2\xa4\x62\xaa\x15\xbf\xc2\xfe\x5e\x4b\x19\xe5\x17\xff\xce\xa3\x91\xb6\x74\xbb\x06\xb1\x01\xc6\xfe\x56\x30\xda\x40\xd4\x2e\x38\x9b\x97\xb9\x9a\xd6\x82\x62\xf2\x68\x66\xb6\xde\xfb\x53\x88\xf4\xbf\xa2\xe7\x1d\xd2\x53\xc1\x0c\x97\x31\x8c\x97\x04\x6d\x24\xab\xbf\x3d\x85\xe8\x59\x85\x99\x02\x51\x43\xb0\x19\x2e\x55\x20\x72\xda\xcf\xe4\x2e\xfc\xe4\x8b\x95\x23\x8c\x46\x23\xd8\x0b\x72\x82\xdb\x27\x63\x8a\x7c\x08\xbd\x92\xed\xd6\x60\xb7\x4e\xc2\x4c\xf6\x9d\xb3\xe9\x87\x26\xbd\x37\xac\xde\x49\x7d\xd3\xf6\xcc\xbb\x4e\x4c\x52\x5d\x4c\x0d\x37\x26\x0d\x6b\x4e\x9b\x64\xe4\x9a\x4d\x59\x2c\x27\xa5\xe0\x8b\x01\xdc\xd7\xd1\xc5\x10\xf2\x9a\x20\x65\x6f\x4d\xd5\xd1\x8e\x05\x7d\x34\xd6\x97\xa9\x41\x5b\xa1\xec\xdb\x23\xda\x4f\x38\xde\x20\xaf\x30\x76\xb3\x93\x2b\xd9\xd3\x63\xb6\xe1\xc8\xf0\xb7\xcd\x5c\xb9\xf3\x1d\xc5\x0d\x57\x7f\xbc\xdd\xb8\xe2\x77\xf2\x70\xed\x14\xdc\x46\x72\x68\x51\x93\xd3\x15\xb2\xa9\x50\x4d\x83\xdd\x36\x5a\x6b\x71\xd1\xe3\x9f\xdd\xe4\x3a\x2d\xf4\xdb\xb2\x56\x98\xf6\xa0\x41\xcd\xcd\x3c\xf5\x57\xa3\x30\x76\xf8\x90\x70\xa9\x10\x33\x93\xf0\x19\x6e\xcc\xc1\x0c\x20\x63\x54\x1a\x6b\x8b\x5f\xfb\x8a\x23\x39\x18\xe7\x54\x6a\x83\x15\x59\x2d\x31\x3d\xc5\x15\xd5\x46\x69\x34\xe7\xcf\xdf\xb5\xba\x37\x34\x6e\xb5\x67\xb6\xd1\x6b\xab\x49\xd3\x17\xf9\x88\x88\xfd\x56\xc7\x6d\x5c\x67\x07\x55\x9a\xed\x6d\xcd\xad\xc4\x82\x36\x4d\xb2\xb7\x45\x2e\x26\x43\xab\x73\x56\x40\xf0\x93\x32\xf2\xb5\x41\xff\x9b\x49\x84\x69\x82\xa4\x2b\xbe\x52\x66\xfa\x48\x0b\x49\x2f\x56\x12\xdb\x31\xed\xb3\x5f\xc5\x81\xa2\xbc\xda\x4d\x09\x5f\xcb\x01\x0d\x60\xf5\x62\x19\x8b\x50\xe4\xbd\x81\xde\xf0\xd0\xec\x7b\xd9\xc1\xad\x55\x3a\x66\x8d\x7d\x5b\x59\x7f\xf5\x13\x86\x4e\x3c\x5c\xdf\x97\x5a\xce\x2d\xfa\xf1\xff\xff\x3d\xcd\xf2\x5f\xa2\x75\x31\x58\xf4\xe3\x18\xd3\x5f\xd2\xfd\xa8\xd3\xe3\x45\x3f\x92\xff\xc0\x5f\xfe\x33\x55\x7e\x4a\x4b\xf3\xe2\xf2\xe0\xf2\xe4\xd3\x3f\x4f\x7e\xbb\x50\xa1\x48\x36\x57\xdd\x24\xba\xc9\x40\x86\x21\x66\xc0\x5a\xb3\x57\xa4\x72\x87\x0f\xc9\xe2\xf4\x58\x86\x29\xa6\xa8\x73\xce\x98\xf8\xf2\x62\x8e\xfa\xf5\x4c\x06\x23\xd7\x08\x57\x4c\x9a\xad\x09\x9b\x22\x94\x4c\x00\x47\x89\x5e\xb5\x1a\xcc\xc8\x15\x26\x35\xc3\x28\xcb\x88\x94\x42\xdd\x87\x12\x39\x35\xae\x49\x51\x09\xc6\x17\x09\xc7\x19\x25\x19\x9a\x10\x6f\x39\x80\xdb\xa2\xcc\xd9\x6d\x22\x0a\x41\x51\x4a\x98\x08\xbc\x64\x72\x73\xf1\xfd\xb2\x29\x3f\xee\x40\x58\x5e\x2a\xca\x42\x14\x84\x2a\x40\x2f\x39\x9b\xaa\x25\x66\xbe\x81\xc9\xca\x19\x9b\xd9\xf9\x4e\x83\xa0\x6e\x25\x7a\xc7\x66\x9a\x0a\xb7\x78\x95\xe9\x26\xc7\x07\xd6\x9c\x9a\x55\x78\xeb\xb7\x4b\x76\x00\x6f\x37\x49\x86\x71\x6f\xed\xd8\x86\xde\x3a\xb7\x63\xd1\xa9\xb7\x87\xbb\xe9\x0c\xa6\x39\x63\x22\x60\x95\x53\xd9\x52\xe4\x68\x4d\x33\x1d\x19\x5e\x04\xcb\x68\x6e\x7a\x5d\x46\xee\x9d\xc4\xd3\x50\x37\xa2\x2d\xf1\xf6\xc2\x70\x3d\xdc\x9a\xb7\x66\xa8\x7b\x52\x60\x39\x00\xbf\xe5\x44\x55\x8f\x6b\xa4\x4f\x9e\x80\x47\xd4\x17\xaa\x53\x43\x79\xbf\x69\x08\xf1\x8f\x6e\x03\x77\x36\xaf\x26\x5f\x0c\x54\xeb\xac\xd3\x5b\x39\x61\xb7\xf6\xd8\x7a\xcd\x95\x9a\x5d\xf3\x59\x6e\x2b\xa6\x1d\x67\x7c\xa8\xdb\xb9\xdc\xca\xa8\x24\xee\x95\x26\x54\xd3\xa8\x21\x78\x45\x58\xcb\x72\xbf\xfb\x14\xa7\x33\x61\xd6\xf4\x07\x06\x71\xdf\x27\xf4\x90\x2c\xe2\x22\xdf\x44\xa1\x32\x37\x43\x28\xf2\x3f\x87\x30\xbc\x2b\x84\xf2\xcc\xdd\xda\xed\xae\xee\xaf\xa3\xe7\x7e\xb9\x75\xdf\xad\x3d\x74\xed\x59\x0e\x82\x86\x2e\xb7\x11\xf6\xfd\xf9\x59\x50\xeb\x9d\x73\x13\x64\x4e\x67\x22\x8e\x5e\xab\xd6\x56\x78\x7f\x7e\x16\x39\xb7\xba\xba\xbf\x23\x24\xc1\x69\xad\x95\x73\x82\x6b\x35\xc9\x73\x79\xa6\xa5\xd8\x1c\x08\x1b\xd7\xaf\x22\xbf\xc5\x32\xad\xdc\x06\xec\x43\x8f\x87\x73\x32\x56\x17\xc2\x33\x52\x9e\xdc\x15\x62\x8d\x71\xa9\x3b\x7a\xbd\x6f\xee\x29\xe9\x9e\xa1\xb4\xf4\x8b\xea\xe9\xee\xcd\x4b\xf3\x92\x95\x02\x4b\xc3\xad\x75\x57\xb9\x4b\x36\x33\x31\x72\x65\x8c\xdc\xaa\x5d\x35\x37\x3b\xc3\x81\xa1\xfd\x47\xf3\x85\x99\x0f\x8e\xa3\x68\x84\xe6\x4e\xd3\x20\xb5\x63\x19\x42\x55\xcf\xf6\x6c\x7b\x25\x1d\xc7\x76\xf7\xd0\x56\x3a\xd3\x5c\xba\xdc\x27\x14\x9d\xcf\x26\x6a\xfd\x77\x52\x46\x5d\xcf\x22\xc2\xbc\xa4\xc7\xe0\x56\x47\xbe\x66\xdf\xea\xb6\xfc\x87\x3c\x74\x0a\x72\x7b\x9e\x4c\xb6\x02\x6c\xc4\x07\x6d\x4f\x1d\x90\xd9\x70\x40\x39\xb0\x6d\x54\xc1\xb0\xf4\xb8\xbe\x70\xeb\x60\xca\x06\x09\x2d\x4f\xd2\x5a\x79\x48\x16\xca\x2e\xbb\x4b\xac\x4d\x5f\xae\x4d\x72\x76\x1c\x2b\xa7\xcf\x51\x1d\xd5\xba\xe7\xa9\x6b\xb7\x4e\x93\x74\xd8\xba\x0e\x77\x36\x28\xec\x3a\xe4\x2e\xc6\x76\x83\xb9\xa4\x52\xe3\x6d\xb7\xc4\xaf\xcd\x5e\x9c\x96\x63\xe6\x27\x2f\x34\x18\x37\x1b\x6c\xaa\x00\x9e\x06\x1b\xb3\xe9\xbd\xa9\x30\x2d\x5a\x01\xcb\xf5\x7a\x36\xeb\x5e\xde\x3c\xa8\x58\xbd\x5a\x27\xf4\xbd\xf5\xbe\xc7\x71\x97\xba\x3d\xc9\x61\xe0\xb2\x4d\xe6\xb7\x95\xfb\xdd\xf2\x75\x1e\x40\xcf\xf2\x14\x72\x86\x95\xba\x06\xe0\x5d\x51\x89\xc4\x29\x45\x04\xe1\xcf\x3a\x15\x53\x76\x79\xab\xa3\x66\xde\x96\x0e\x8c\xf9\x59\x01\xca\x3d\x04\x07\x79\x3e\x84\xb9\x6b\x8e\x6a\xf7\xd8\x3a\x00\x5b\x10\xe0\xa6\x0e\x1f\x74\xe2\x6b\xdb\xb8\xe1\x00\x37\x34\xb5\xd2\xd6\x6d\x4f\xaa\x28\xbe\x21\x1c\xaa\x29\xa1\xd4\x06\xd9\xba\x01\xb1\xb9\x3f\xfa\xad\x87\x6a\xe5\x87\xeb\x8f\x32\x8e\x8e\x9b\x75\x72\x64\x54\x7f\xd4\x3e\x5a\xd9\x5b\xb7\x91\xb1\x99\xde\x37\x89\xd1\x20\x25\x1a\xfd\x18\x3d\x0f\x6f\xb6\x2b\x7a\x5d\xff\xfb\xe2\xed\x9b\xa4\x12\xbc\x28\xaf\x8a\xf1\xc2\x05\x1d\x5c\xe2\xbb\x6f\x76\x0a\xaf\xd7\x77\xd9\x71\xa7\xd1\xf9\x0a\x75\x62\xba\xde\x99\xb5\x1a\x20\x1b\xa4\x1d\xc0\xda\x18\xdd\x38\xd3\xf2\xcb\xbb\xf5\xda\xec\xf1\xaf\xf0\x73\xc0\x28\x8b\x53\xf3\x4a\xf0\x85\xf9\xec\x87\xc1\xc6\x40\x81\xe2\xd5\x8c\xf0\x0a\xe3\x1c\x5b\x9c\xf4\x51\xd6\x8d\x9f\x7d\x13\x68\x81\x6a\xdd\x86\x58\xaa\xcb\x72\xfd\xae\xdd\x0d\xb5\xb7\xbb\x5e\xaf\x6c\x3b\xea\x47\xc3\xe0\xee\x16\xd3\x1d\x13\x1c\x92\x3c\x3f\xb9\xc1\x52\xbd\xd1\xc0\x12\x79\x1c\xa9\x24\xe9\x00\x6a\x5a\x0c\x05\xea\x10\x1e\xbf\x7d\x9d\x98\x58\xb1\xeb\x50\x9e\x33\x26\x8c\x4f\x1f\x40\xce\xb2\xb9\x1c\x4d\xae\x50\x98\x09\x87\x8b\xd3\x3c\x8e\x4c\x44\xa1\x9a\x98\xe5\x21\xd3\x89\x11\x13\x51\x7e\xcb\xc7\xea\x29\x59\x9c\x2b\x06\x54\xfe\xe3\xf4\x94\x2c\xce\xba\xde\xb1\xa7\x64\xe1\x74\xc4\x6a\x63\xe0\x80\x4f\xeb\xa7\x26\x0f\x4c\x4b\x78\x0b\xf5\xe3\x75\x13\x08\x3a\x95\x66\xf3\x5c\xe5\x91\xde\xaf\xd7\x28\xdb\x4d\xb0\xde\xe2\x73\xcc\xb0\xb8\xc1\x77\x92\x04\x9f\xc7\x4d\x4d\x46\x27\x07\x7e\xb0\x21\x43\x03\x3a\xc8\x06\xac\x41\x0c\x1d\x55\xc5\x96\x74\xda\x72\x09\x24\xe2\xf8\xdd\x0d\x7c\x7d\x10\x4b\x9d\x4b\x5c\x77\x83\xb0\x63\xc1\xc6\x05\x15\xc8\xeb\xea\x4f\x57\x37\x73\x35\x80\x50\xac\x06\x8d\x7a\x41\x66\x8b\x20\x14\xa7\xea\xa9\xa0\x57\x17\x8a\xf3\x01\x14\x5e\x0a\x66\x63\xf8\x2b\x0f\x72\x51\x5e\x49\x9f\xb8\xee\xf5\xb4\x17\xcd\xc6\x79\x18\x03\xa9\x22\x52\x94\xd3\x5d\xe9\x34\x8a\x01\x94\x2a\x10\xc9\x55\x45\xa2\xf1\x8c\x41\xa5\xc8\xe4\x67\xdd\x1d\x35\x65\x3b\x70\x8a\x91\xe1\xa6\x57\xef\xe6\x44\x1a\xc2\x81\xed\x22\xe8\xe5\x74\x57\x99\xc6\x9e\xe7\x9d\x35\x27\xa5\x6e\x6c\x84\x67\xf4\xa9\x81\x98\x92\x85\x53\x4d\x77\xb6\xe1\x44\x11\x8d\x66\xf6\x5d\x5b\x62\xb1\x75\xce\xd4\xe2\xe3\xa1\xf8\x1e\x59\x80\x32\x7c\xe2\x49\x91\x7b\xd1\xab\x96\x9d\xdc\x98\x27\x3c\xee\x0b\x2f\x0c\xe5\xed\x86\x3a\x0b\xad\xc1\x8e\xb7\x96\x97\x24\x22\x10\xd8\xfa\x40\xd4\x1e\xf0\x4e\x46\xaf\x41\xab\x1b\x0e\x3c\xb4\xaa\x6d\x63\x00\x53\xac\x2a\x22\xef\xde\x1d\x58\x02\x2d\xda\x22\x17\xc1\x56\x55\xf1\x74\x52\x61\x57\x3b\xd8\x4d\x65\x65\x4d\xf4\x2b\x0c\x74\x71\xa2\x07\x76\xf7\x7b\x03\x10\x78\x27\x86\xd0\x3b\x2d\x55\x42\x5f\xdf\x5d\x7a\x4e\x96\xc0\x3b\x42\x5f\x81\xeb\xe7\x06\xd7\xdb\xd2\x3e\x5e\x74\x11\x59\xfe\x07\x69\x81\x8e\xff\x47\x02\xf7\xcf\x88\x7e\x11\x3c\x32\x7f\x9f\x3c\xd1\xff\x48\x04\xbb\x50\xb1\x66\xdc\x99\x7d\xf4\xdd\x80\x81\xe8\x7b\x02\xd3\x6f\xd2\xb8\x02\x74\x44\xe9\x07\xea\xde\xde\x1f\xa5\x7a\x68\xc4\x6c\xb8\x57\x8b\x59\x1f\x4a\xc9\xc7\x76\xed\xcb\x3b\xd5\x8f\x49\x04\xd5\x20\xdd\x7c\x4f\x67\x61\x5a\x0f\x9a\x5a\x72\x27\x71\xea\xd4\xc6\x8f\x43\x95\x3d\xee\xa6\xae\xfb\x86\x59\x29\x76\x94\x76\x3d\x9b\xfc\x48\xf8\xc3\xd6\xa8\x2f\xa8\xed\x3a\x36\xe5\x31\xe5\xe5\x37\x92\x69\xa9\x18\xeb\xd4\xa6\x21\x0c\x2c\x9c\x68\xc2\x09\xb3\xbc\xd7\xcb\xfe\xe3\x33\x27\xea\x77\x33\x41\x12\xaa\x7d\x30\x2f\x55\xc2\x5f\x94\x14\x65\x46\xe7\x39\x56\xf6\x01\xf0\xbf\xe5\x55\x41\xa7\x72\x1f\xf5\x49\x9c\x16\xd1\x4b\x96\xcd\x2b\xcc\x8d\x8d\xd1\xc1\x7e\x57\x1c\xf8\x35\x8f\xc0\x22\xc1\x66\xbb\x29\xe1\xaa\x0f\xc5\x18\x3f\x15\xb3\xbe\x80\x08\x04\x9b\xa5\x84\xef\xea\x91\xa2\xbc\x6a\xb5\x0b\x3b\x21\x80\x4d\xcf\x3f\x79\xf2\xf0\x94\xb1\xab\x9d\x86\x9e\x5d\xbc\x2b\xc4\xa6\xe6\x57\x85\xd0\x4d\x20\xff\x83\xc1\x2b\xd6\xbc\xc6\x5a\x9b\xc4\xee\x15\xe5\x6c\x2e\x5a\x1d\x05\x16\xbf\x39\x25\x29\xbb\xeb\xb9\xd9\x1a\x25\x93\xe1\x8a\x8a\x6c\x20\x36\x79\x49\x70\x5c\x97\x5c\x7e\x48\xe7\x7c\xcb\xd5\x46\xe8\x7e\xea\xd6\x24\xee\xb1\x15\x7f\xb9\x89\xfd\x18\x13\x41\xf8\x15\x8a\xe4\x86\xd0\x39\x3a\x10\xd4\x6f\x8f\x89\x55\x5d\x39\x89\xa2\x66\x9e\xaa\x96\x4e\x18\xcd\x91\x0f\xa1\xa7\x61\xf7\x74\x2b\x45\xed\x75\x97\x3b\xff\x17\x00\x00\xff\xff\x48\xee\xc7\x9a\xd8\x4d\x00\x00")

func assetsScriptScriptJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsScriptScriptJs,
		"assets/script/script.js",
	)
}

func assetsScriptScriptJs() (*asset, error) {
	bytes, err := assetsScriptScriptJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/script/script.js", size: 19928, mode: os.FileMode(420), modTime: time.Unix(1511723690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsStyleStyleCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5a\xef\x6e\xa3\xb8\x16\xff\x9e\xa7\xb0\x54\x5d\xb5\xbd\x2a\x19\xd2\x36\x69\x87\x7e\x99\x07\xb8\xba\x5f\xf6\x09\x0c\x1c\x12\xab\x60\x23\xdb\xb4\xc9\xac\xf2\xee\x2b\x1b\x0c\xc6\x60\x48\x32\x19\x75\x77\xd5\xd1\x08\xb0\x7d\xce\xef\xfc\x3f\x07\x12\xb3\xf4\x80\xfe\x5c\x20\x94\x31\x2a\x83\x0c\x17\x24\x3f\x44\x48\x60\x2a\x02\x01\x9c\x64\x6f\x0b\x84\x62\x9c\xbc\x6f\x39\xab\x68\x1a\x24\x2c\x67\x3c\x42\x37\xe9\x5a\xfd\xbd\x2d\x8e\x8b\x65\xb2\xc3\x3c\xf8\xe4\xb8\x2c\x21\xd5\x94\x3e\x19\x4f\xf5\x83\x08\xc5\x1c\xf0\x7b\xa0\x1e\xbc\x99\x05\xfd\xc8\xac\xe0\x3c\xd7\x34\x72\x86\x53\xe0\xfa\x74\x4a\x44\x99\xe3\x43\x84\xe2\x9c\x25\xef\xfa\x18\x49\xe5\x2e\x42\x8f\x61\xb9\x57\xb7\x3b\x20\xdb\x9d\xec\xee\x1b\x48\x92\x63\x2a\x4a\xcc\x81\xca\x37\x23\x8e\x20\x3f\x21\x42\xa1\x23\x03\x29\xf0\x16\x22\x54\xf1\xfc\x6e\xb9\xfc\xa6\xef\xc4\xb7\x1a\xc1\x52\x7c\x6c\xef\x9d\xed\x35\x91\x55\x18\xfe\x47\xff\xa7\x56\x31\x25\x05\x96\x84\xd1\x80\xe2\x02\x22\xc4\x99\xc4\x12\xfa\x2b\x69\xc5\xf5\x45\x84\x56\xa2\xbf\x42\x24\xd4\x4b\x41\xc2\x2a\x2a\x23\x44\x68\x46\x28\x71\x09\x48\x52\x10\xba\x0d\xb2\x8a\x26\x35\x9d\x9c\x50\xc0\x5c\xe9\xeb\xc7\x3b\x1c\x32\x8e\x0b\x10\x0d\xeb\xda\x82\x9c\x15\xfa\x02\xd5\xca\xc8\x18\x2f\x0c\xb6\xbb\x30\x85\x5a\xb2\xe3\x02\x21\xc9\xbc\xfb\x9e\x36\xd6\xce\xc6\x32\x0a\x46\x8c\x6b\xf3\x94\x4c\x90\x1a\x0e\x87\x1c\x4b\xf2\x01\xb6\x4d\x9e\x95\x49\xfa\xa7\xa2\x28\x86\x8c\x71\x78\xe8\xd3\xb2\x6f\x82\x8c\xe4\x39\xb8\xf4\x71\x2c\x58\x5e\xd5\x5a\xc9\x21\x93\x8d\x21\x4f\x60\xa5\x09\x25\x8c\x4a\x50\xda\xbd\xbd\x7d\x9b\x72\x2b\x63\xd3\x69\x27\x3f\x05\xfa\x08\x85\xcd\x3a\x4e\xd2\x67\x45\x21\xae\xa4\x64\x54\xef\x33\x12\x3c\x6d\x6a\x07\x56\x76\x0d\xdc\x87\x31\xe3\x29\xf0\x08\x51\x46\xb5\x06\x4a\x9c\x2a\x9e\x11\x0a\x5b\xc7\xb7\x5c\x7c\xf5\xda\x8b\x85\xcf\x5d\xe3\x4d\x23\x90\xbe\x7f\xff\xae\x77\x56\x5c\xa8\xfb\x92\x11\x2a\x81\x77\x10\xa3\x1d\xfb\xf0\x0b\xf4\xf2\xf2\x62\x6d\xcd\x58\x52\x09\xbd\x95\x55\x52\x89\xa1\x6d\x74\x5c\xdc\xe0\x34\x0d\x2c\x89\x3b\xa3\x66\x64\x0f\x69\x2d\x9f\x94\xac\x50\xea\xaf\x91\xf3\x5a\x7c\x73\xdb\x18\xe7\xf9\xb9\x1f\xf3\xe6\xbe\xd6\x4e\xc0\x71\x4a\x2a\x11\xa1\xc7\xc7\xfa\x71\x81\xf9\x96\xd0\xc6\x51\x3a\x8d\x8d\xe9\x73\x28\x9b\x93\x40\x4e\x4b\x2b\x03\x35\xfa\x32\xcd\x6d\x97\x6a\x0a\xbc\xa5\x20\x55\xaa\xb9\x75\x73\x8d\xeb\x37\x23\x89\xc8\xc8\x6a\x2d\x70\x28\x01\x4b\x25\x5b\x73\xe9\xac\x77\xea\x4f\xa0\x45\xc9\xf6\x81\xd8\xe1\x94\x7d\x2a\x97\x0a\xd1\x4b\xb9\x47\x7c\x1b\xe3\xbb\xf0\x01\x35\xff\x96\x4f\x1a\x9e\xd6\x40\x73\xbe\x3b\x85\xc2\xe5\x4a\x58\x29\xc9\x32\xf9\xb4\x07\x59\xa2\x39\x10\x94\xed\x07\x18\xd6\xf7\x75\x91\xa9\xa3\x39\x28\x31\x05\x0f\xe5\xd6\xe9\xc7\x53\x88\x64\x65\x84\xd6\xaf\xb6\xa3\x04\xae\x13\x6a\x44\xe4\xa7\xf6\x9a\xc6\xc5\x62\xa6\xd3\xcc\x8f\x02\x52\x82\xd1\x5d\x81\xf7\x41\xe3\x9b\x1b\x75\xea\x5e\x83\x19\xc2\x6b\x3d\x38\xc1\x79\x72\xa7\x8b\x47\x80\x74\xe4\x6a\x9d\x9a\x8c\x66\x18\x1f\x6d\x16\x84\x9e\xc7\x62\x13\x36\x54\x0c\x55\xcd\x73\x5d\xb3\x7c\x0a\x0d\xcf\x63\x57\x68\xbf\x48\x8d\x5d\x1c\x6f\xc2\xf2\x14\xb5\xba\x68\xaf\xaf\x55\x2f\x87\x4b\x95\x6a\xb7\x32\x13\x1a\x34\x39\x7c\x48\x7b\x55\x93\x3e\x2e\x96\xc0\x39\xfb\x3a\x53\x9d\xdb\xc5\x59\x09\x57\x09\xd7\x72\x90\xb0\x97\x01\xce\xc9\xb6\x97\x7e\x1a\x09\xb8\x2a\x06\xb3\x6e\xe0\x28\xe2\xfa\x5e\xe0\x63\x70\x96\x13\x10\x21\xf5\x69\x75\x11\x08\x79\xc8\x21\x90\x87\x12\xba\x92\xe3\xad\x4e\xc7\xc5\x4d\xca\x3e\xa9\xf2\x1c\xf1\x15\xa6\xbe\x04\xf1\xb4\xc9\x1c\x79\xae\x6e\x31\x1f\xfd\x33\x0c\x66\x91\x58\x9a\xcb\x89\x0e\x77\x22\x50\xfa\x7d\x64\xab\xa6\xd5\x66\x50\xa8\xfb\xc6\x1c\xc7\x10\x51\x26\xef\xa2\x1c\x0b\x19\x24\x3b\x92\xa7\xb5\xc0\x2d\xcb\xc6\xa6\xe5\x1e\x09\x96\x93\xd4\x6e\x52\x47\xa9\x4d\xd6\xe2\x2c\x54\x7f\x9e\x76\x70\x54\x41\xff\x6d\x54\xa4\x77\x05\xf0\x01\x54\x0a\xe3\x2f\x9e\x23\xed\x95\x1e\x96\x2e\x9a\x10\xdb\x7c\x51\xf7\x9f\xca\x31\x5b\xaf\xab\xf5\xee\xe3\xed\x8e\x2f\x4d\x6c\xe8\x78\x59\xad\xeb\x22\x74\x43\x59\xf0\xa5\xf1\x67\xaa\xe2\x2a\x3c\xa9\x2c\x0e\xf1\x5e\x3f\xbe\xfc\x2c\xce\x09\xb1\x1e\x95\xdd\xca\xb2\xc0\x68\x8f\xee\x44\x52\x6f\x2e\x5a\x85\x93\xf5\xc4\xea\xcb\x9f\xec\xf1\xe8\xd3\x8c\x55\xa1\xce\x5a\x4b\xc9\xca\x91\x51\xb6\x9d\x4a\xb4\x1d\x43\x67\xe2\x74\x60\xb5\xb3\xc8\xab\x2f\xbe\xad\xb1\xaf\x65\x68\x2e\x02\x01\x98\x27\x3b\x65\xfa\xb9\x1e\x61\x7a\x34\x7a\x0c\xdd\xf7\x21\xaf\x73\x7e\xe6\x9d\x29\x55\x3a\x31\xe9\xca\x9e\x2a\x37\xa3\xd3\xd6\xca\x8c\xde\x13\xb2\x79\x47\xc3\xe1\x21\xd8\x13\x39\x3e\x2c\x7a\x35\xd2\x77\x67\xa3\x90\xd7\x71\x7d\xfc\x33\x86\x42\xb5\x61\x74\x24\xec\x5e\x3f\x69\xf5\x35\x2a\xe6\x20\xaa\x5c\xfe\x4b\xba\x85\x31\xa1\xae\xdf\xe4\x4d\x31\x39\xa7\xd1\x73\xe8\x98\xfb\x1d\xe8\x4a\x73\x8d\x16\xa2\x97\xb9\x36\x61\x5f\x9f\xab\xa6\x46\xcc\xe0\xb8\xbc\x8d\xf0\x11\x56\x76\x27\x74\xfb\xe0\xdd\x00\x45\x29\x0f\x13\xcb\xaa\xc9\xbe\xb0\xfc\x77\xd2\xaf\xdb\xd1\xc2\x8f\xf4\x64\x20\xd7\xb0\x93\x8e\x84\x08\x11\x89\x73\x92\xcc\xa2\x1a\x98\x65\x06\xe6\xf5\xcd\xd8\x49\xdf\x9f\xc1\x66\xcc\xfe\xeb\xfa\x9a\x65\xf1\xdb\x5c\xf6\x17\x9a\xe0\x39\xad\x4c\xf7\xc3\xde\xd3\xec\x6a\xb9\xc2\x54\xbb\xf5\x4c\x4c\x34\x2c\x7f\x83\x8e\x1b\x59\x4e\x7c\xf1\x51\x37\xdd\xd3\x2f\x3e\xda\x81\x81\xd0\x8c\x7d\x45\x89\x1b\x24\xdb\x99\xfa\x35\x04\x7c\xfd\xf2\x35\xc1\xe3\x9c\xea\xd5\x27\xd3\xdd\x66\x9c\xfd\x04\x3a\xe1\xcd\x08\xb1\x12\x27\x44\x1e\x22\x14\x2e\xd7\x23\x76\xea\x6e\xb1\xfe\x60\x25\x86\x03\xd7\x44\x0b\x7f\x02\x39\xab\x47\x6c\x5b\x0d\xd4\xcc\x70\xce\x61\x89\xe3\x1c\x7a\x3b\x71\x25\x99\x77\xa3\x4c\xa3\x8c\x70\x13\x13\xdd\xe7\x50\xa7\x06\xdb\xb8\x75\x53\x6e\xf9\x4a\xd0\xeb\xd2\xfd\x7c\x74\xfc\x59\xcc\xee\x2f\xfd\x64\xea\x35\x24\xc9\x41\x3c\xcc\xac\x9b\xa8\x9d\xdd\xd7\x55\x8b\xa1\x21\xe7\x40\x9c\x90\xe6\xda\x59\xea\x3c\x82\xf3\xb9\xc6\x9b\x5e\x7a\x93\xc4\x2c\xc3\x5f\xe9\x59\x4e\x79\xf1\x39\xcd\x1e\xe1\x0b\x59\xbb\x1f\x3b\x8f\x8b\x65\x8c\x0f\x7f\x97\x74\xea\x4b\x00\x33\x49\xb6\x27\xc1\xf5\xf3\xeb\x38\xf9\x73\x52\x6b\x4b\xa1\xbd\xd2\x6f\xbc\x1e\x46\x57\x04\x40\x0a\x5c\x8c\x2f\xe6\x00\xc9\x0e\xb8\xf0\xfc\x20\xc2\x31\xc0\xa3\xf1\x65\x0f\x00\xeb\x0b\xbc\x1f\xc8\xf4\x26\x03\xa8\xf7\x85\x7d\x98\x22\xe7\x31\x38\x9f\xe6\xff\xaf\x7f\x3e\x71\xeb\x3b\xe9\x60\x73\x0e\xff\xd1\xac\xfa\xcf\x8f\xc2\xee\x08\xfc\xcf\x2c\xfb\x29\x5c\xfc\xca\xf2\xb8\xf8\x2b\x00\x00\xff\xff\xfc\x46\x01\x09\x5a\x23\x00\x00")

func assetsStyleStyleCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsStyleStyleCss,
		"assets/style/style.css",
	)
}

func assetsStyleStyleCss() (*asset, error) {
	bytes, err := assetsStyleStyleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/style/style.css", size: 9050, mode: os.FileMode(420), modTime: time.Unix(1511723690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/index.html": assetsIndexHtml,
	"assets/images/back.svg": assetsImagesBackSvg,
	"assets/images/loader.svg": assetsImagesLoaderSvg,
	"assets/images/magnet.svg": assetsImagesMagnetSvg,
	"assets/images/pause.svg": assetsImagesPauseSvg,
	"assets/images/play.svg": assetsImagesPlaySvg,
	"assets/script/script.js": assetsScriptScriptJs,
	"assets/style/style.css": assetsStyleStyleCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"images": &bintree{nil, map[string]*bintree{
			"back.svg": &bintree{assetsImagesBackSvg, map[string]*bintree{}},
			"loader.svg": &bintree{assetsImagesLoaderSvg, map[string]*bintree{}},
			"magnet.svg": &bintree{assetsImagesMagnetSvg, map[string]*bintree{}},
			"pause.svg": &bintree{assetsImagesPauseSvg, map[string]*bintree{}},
			"play.svg": &bintree{assetsImagesPlaySvg, map[string]*bintree{}},
		}},
		"index.html": &bintree{assetsIndexHtml, map[string]*bintree{}},
		"script": &bintree{nil, map[string]*bintree{
			"script.js": &bintree{assetsScriptScriptJs, map[string]*bintree{}},
		}},
		"style": &bintree{nil, map[string]*bintree{
			"style.css": &bintree{assetsStyleStyleCss, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
