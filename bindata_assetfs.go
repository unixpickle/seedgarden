// Code generated by go-bindata.
// sources:
// assets/index.html
// assets/images/back.svg
// assets/images/loader.svg
// assets/images/magnet.svg
// assets/images/pause.svg
// assets/images/play.svg
// assets/script/script.js
// assets/style/style.css
// DO NOT EDIT!

package main

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x51\x4b\x6e\xc3\x20\x10\x5d\x27\xa7\xa0\xac\x63\x93\x2c\x2a\x55\x15\xf8\x12\x3d\x01\x81\x97\x32\x2d\x60\x0b\x26\x4e\x72\xfb\xca\xc6\x52\xab\xae\xb2\x01\xde\x0f\xc4\x3c\xfd\xe2\x47\xc7\x8f\x09\x22\x70\x8a\xc3\x5e\xb7\x6d\xa7\x03\xac\x1f\xf6\xbb\x9d\x4e\x60\x2b\x5c\xb0\xa5\x82\x8d\xbc\xf2\xa5\x7b\x93\xbf\x42\xb6\x09\x46\xce\x84\xdb\x34\x16\x96\xc2\x8d\x99\x91\xd9\xc8\x1b\x79\x0e\xc6\x63\x26\x87\x6e\x05\x07\x41\x99\x98\x6c\xec\xaa\xb3\x11\xe6\xd4\x1f\x0f\x22\xd9\x3b\xa5\x6b\xfa\x4b\x5d\x2b\xca\x8a\xed\x39\xc2\xe4\xb1\xbd\xc6\xc4\x11\xc3\x07\xe0\x3f\x6d\xf1\xc8\x5a\x35\x66\xbf\x88\x91\xf2\xb7\x28\x88\x46\x56\x7e\x44\xd4\x00\xb0\x14\xa1\xe0\xb2\x31\x6a\x5d\x7b\x57\xab\x14\xcb\x6f\x8d\x64\xdc\x59\x2d\xb8\xdd\x50\x5d\xa1\x89\x45\x2d\xce\xc8\xc0\x3c\xd5\x77\xa5\x2e\xe7\x3e\x41\x15\x58\xc7\xdd\xe9\xb5\x3f\xf6\xc7\xfe\xab\xca\x41\xab\x66\x1e\x9e\xc9\xf9\x31\x3d\x95\x6d\xe7\x4d\xfd\x6f\xd5\x6a\x6b\x43\x9f\x47\xff\x58\xb3\x9e\x66\x41\xde\xc8\x6d\xde\x6d\x46\xca\xd3\xbc\xda\x9b\x4d\xab\x56\xe6\x4f\x00\x00\x00\xff\xff\x55\xab\x4e\xde\xe4\x01\x00\x00")

func assetsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsIndexHtml,
		"assets/index.html",
	)
}

func assetsIndexHtml() (*asset, error) {
	bytes, err := assetsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/index.html", size: 484, mode: os.FileMode(420), modTime: time.Unix(1511579925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesBackSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8e\x41\x4e\xec\x30\x0c\x86\xf7\x39\x85\xe5\x75\xdb\x24\xed\xd3\x13\x83\x9a\x8e\xc4\x82\xdd\xec\xe0\x00\xd1\xd4\x34\x11\x19\xa7\x34\xa1\xe9\xf1\x51\x06\x04\x96\xbd\xf9\x6c\xf9\xfb\xc7\xf3\x71\x0b\xb0\xd3\x96\x7c\x64\x83\xba\x53\x08\xc4\xd7\x38\x7b\x5e\x0c\xbe\xbe\x3c\xb7\x0f\x08\x29\x5b\x9e\x6d\x88\x4c\x06\x39\xe2\x79\x12\x63\xda\x17\x01\x00\xc7\x2d\x70\x32\xe8\x72\x5e\x1f\xa5\x2c\xa5\x74\x65\xe8\xe2\xb6\xc8\x5e\x29\x25\xd3\xbe\x60\xbd\xda\x3d\x95\xa7\x78\x18\x54\xa0\xe0\x5f\xed\x6f\xfc\x67\xd5\x38\x09\x80\x71\xb5\xd9\x41\xca\x5b\x7c\x27\x83\xc5\xf9\x4c\x08\x6f\x3e\x84\xaa\x65\xc2\x9f\x55\x5b\xfc\x9c\x9d\xc1\xe1\x17\x04\xcf\x74\xb5\xab\xc1\xf4\xf1\x69\x37\xba\x7f\xbf\xd7\x6c\xf0\xa2\xff\x37\x5a\x43\x68\x4f\xcd\x09\xea\x5c\x06\xd5\xf4\x0a\x5c\xdb\x0f\x08\x72\x12\x63\xcd\x39\x89\xaf\x00\x00\x00\xff\xff\xad\x09\x57\xb3\x0a\x01\x00\x00")

func assetsImagesBackSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesBackSvg,
		"assets/images/back.svg",
	)
}

func assetsImagesBackSvg() (*asset, error) {
	bytes, err := assetsImagesBackSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/back.svg", size: 266, mode: os.FileMode(420), modTime: time.Unix(1511656400, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesLoaderSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\xcd\x41\x6e\xc3\x20\x14\x04\xd0\x3d\xa7\x18\xfd\x6e\x1d\x03\x69\x5a\xa1\x0a\x88\x7a\x80\x1e\xa2\x0d\x04\xa3\x12\xb0\x0c\x35\x3e\x7e\x65\xc9\x8b\xcc\xec\x66\xf1\x46\x5f\xb7\x47\xc2\xea\x97\x1a\x4b\x36\x24\x47\x41\xf0\xf9\x56\x5c\xcc\xc1\xd0\x5f\xbb\x9f\x14\xe1\x6a\x99\xae\x6b\xc0\xf6\x48\xb9\x1a\x9a\x5a\x9b\x3f\x38\xef\xbd\x8f\xfd\x75\x2c\x4b\xe0\x67\x21\x04\xaf\x6b\x20\x86\x3d\x4f\x9c\x24\xcb\x00\x3d\x7f\xb7\x09\xb5\x2d\xe5\xd7\x1b\x7a\x79\x7f\xfb\xb9\xb9\x0b\x1d\xc3\xa9\x47\xd7\x26\x43\x17\xc2\x3d\xa6\x64\x28\x97\xec\x0f\x09\x80\x33\xf4\x75\x1e\xa4\xc0\xa7\x1a\x14\x04\xe4\x5e\x31\x48\x45\xe0\x96\xe9\xfd\xd6\xb2\xff\x00\x00\x00\xff\xff\x24\x9c\x62\x4d\xc7\x00\x00\x00")

func assetsImagesLoaderSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesLoaderSvg,
		"assets/images/loader.svg",
	)
}

func assetsImagesLoaderSvg() (*asset, error) {
	bytes, err := assetsImagesLoaderSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/loader.svg", size: 199, mode: os.FileMode(420), modTime: time.Unix(1511579925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesMagnetSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x92\xcd\x6e\x5a\x31\x10\x85\xd7\x41\xe2\x1d\x2c\xaf\xc7\x83\x67\xc6\xe3\x9f\x2a\x97\x48\x65\x0b\xab\x3e\x41\x45\x08\x20\xdd\x40\x14\x28\x17\xf1\xf4\x95\x7d\x41\xa5\xbb\x23\x7b\x3c\xe7\x3b\x47\x7e\x7d\xbb\x7e\xf6\xe6\xb2\xf9\x3e\xed\x8f\x87\xce\x12\x7a\x6b\x36\x87\xf5\xf1\x7d\x7f\xd8\x76\xf6\xcf\xf9\xc3\x65\xfb\x36\x9f\x4e\x5e\x4f\x97\xed\xf3\x18\x59\x73\xfd\xec\x0f\xa7\xce\xee\xce\xe7\xaf\x1f\xb3\xd9\x30\x0c\x38\x08\x1e\xbf\xb7\x33\xf6\xde\xcf\x4e\x97\xad\x35\x97\xfd\x66\xf8\x79\xbc\x76\xd6\x1b\x6f\x72\x36\x39\xdb\xf9\x74\xf2\xf2\xfa\xf5\xfb\xbc\x33\x1f\xfb\xbe\xef\xec\xb0\xdb\x9f\x37\xd6\xbc\x77\x76\xa5\x01\x33\x33\x64\x41\x2e\x69\xed\x3c\x52\x10\x20\xd4\xa0\x40\xe8\x73\x00\xc6\x42\x19\x18\x13\x27\x10\xf4\xaa\x3d\x15\x2c\x1c\x81\x30\x4a\x9a\x4e\x5e\x5e\xd6\x84\x31\x08\x78\x24\xc9\x20\x48\x5e\x1d\xa1\xa7\xaa\x59\x1d\xa3\x46\xee\x09\x55\xd5\x51\xc4\x20\xdc\x3b\x56\x2c\x8e\x91\x84\x97\xff\xf9\xdf\xcc\x4a\x31\x31\x41\xcc\x58\x8a\xb6\x57\x09\xc6\x57\xcd\xe9\x1f\x5e\xa8\xfe\x3e\x55\xb0\xe6\x03\x77\x9f\xc6\xe6\x1a\x5b\xe5\x92\x52\x23\x49\x9d\xcb\x31\x39\x42\xa5\x31\x8b\x1b\xb3\xb8\x66\x31\x82\x85\xe5\xb3\xf9\xcd\xac\x04\x49\x03\x04\xc2\x42\x52\xed\x97\x01\x53\x04\xcd\x98\x63\xe8\x6b\x06\xcf\x2d\x05\x2d\xb9\xa0\xd7\x04\x52\x30\x2f\xaa\xe6\x2a\xa5\x08\x70\x01\xc9\x58\x12\xdd\x95\xaa\xae\xbd\x4b\x98\x52\x82\x88\x89\x8b\xa3\x50\x1b\x03\xd2\xbb\x3a\x91\x42\x44\xe1\x02\xa4\x30\x1e\x8d\xd1\xc1\x63\xa0\xe8\x7c\xdd\xee\x31\x4b\xae\xb2\xd6\x83\x1c\x62\x0d\x12\xeb\x9a\x88\x45\xf8\x0e\x07\x0d\xae\x6f\x37\x35\x62\x51\x5a\xe4\x80\x25\x24\x08\x1e\x53\x11\xc8\x5a\x41\x63\x2c\x4d\x35\xbc\x6a\xb6\xc8\x0a\x94\x90\x4b\x80\x18\x5b\xcd\x1e\x42\x00\xff\x4b\x1e\xc7\x72\x9f\x5e\xc8\x63\x41\xed\x53\x1e\x7b\x9f\x9b\xbb\xd9\x59\xfd\xcb\xf5\x73\xce\xa7\x93\xbf\x01\x00\x00\xff\xff\x19\xfb\x2d\xa3\xfc\x02\x00\x00")

func assetsImagesMagnetSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesMagnetSvg,
		"assets/images/magnet.svg",
	)
}

func assetsImagesMagnetSvg() (*asset, error) {
	bytes, err := assetsImagesMagnetSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/magnet.svg", size: 764, mode: os.FileMode(420), modTime: time.Unix(1511654043, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesPauseSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\x4d\x6f\xe2\x30\x10\x3d\x83\xc4\x7f\xb0\xbc\x57\x67\x32\x63\x8f\xbf\x2a\x42\xa5\xe5\xd2\xcb\x5e\xf7\xbe\x0a\x14\xd0\x52\xa8\x0a\x0b\x68\x7f\x7d\xe5\x0f\x68\x2a\x21\x12\xc9\xb1\x33\xe3\x37\x6f\xde\xb3\xa7\xcf\x97\xb7\xad\x38\x2d\x3f\x0e\x9b\xfd\xae\x93\x04\x28\xc5\x72\xd7\xef\x17\x9b\xdd\xaa\x93\xff\x8e\xaf\x4d\x90\xe2\x79\x36\x19\x4f\x0f\xa7\xd5\x30\x8f\xa4\xb8\xbc\x6d\x77\x87\x4e\xae\x8f\xc7\xf7\xa7\xb6\x3d\x9f\xcf\x70\x36\xb0\xff\x58\xb5\x1a\x11\xdb\xc3\x69\x55\x53\x9e\x2e\xdb\xcd\xee\xef\xbd\x44\x8a\x31\xb6\x39\x2a\x27\xe3\x91\x10\xe2\xb4\x59\x9e\x7f\xee\x2f\x9d\x44\x81\x82\x4d\x00\x6b\xdc\xf5\x2b\x67\x93\xf1\x68\xfa\xfe\xe7\xb8\x16\xaf\x9b\xed\xb6\x93\x3f\x16\x36\xbd\x52\x2c\x3a\xf9\x8b\x1c\x03\x5b\xa3\xf0\x85\x02\x68\xef\xe6\x64\xc0\x68\x56\xa8\x22\x20\x93\x22\x08\xe8\x95\x05\xd6\x36\x8f\x3c\x4f\x7f\x42\x8e\x2a\x04\x44\x52\x79\x87\xbe\x2e\x12\x0a\x9d\x18\x09\x62\xa4\xc9\x78\x94\xe8\xdd\x79\x7a\x54\x0c\x91\x43\x2d\x10\x41\x1b\x53\x0a\x28\xd2\x10\xd8\xf7\x06\x1c\x45\x95\x46\xaf\x3c\x44\xd4\x39\x1c\x72\xd8\x52\x59\xac\x89\x1d\x50\xa0\x3e\x61\xc5\x4c\x5a\x1b\x6a\x08\x02\x51\xc5\x69\x72\xe2\x03\x22\xb9\x42\x93\xc6\x4a\xa0\xf1\x10\x62\xa8\xf3\x02\xf2\xbb\xb4\xd5\x63\xc3\x10\xad\x6e\x32\xe9\xa6\x14\xcb\xf8\x35\x6f\x4e\xde\x80\x0b\xb6\x76\x45\x2e\x02\xa3\x56\xa8\x6e\x32\xff\x97\xed\x43\x3f\xd8\x18\xa0\x2b\x93\x39\xeb\x08\x1c\x5d\x85\x63\x6d\x41\x93\x55\xa8\x58\x23\x68\xe7\x15\xbe\x68\xcf\x80\xc1\xf5\x4d\x55\x20\x93\xf2\x65\x43\x25\x55\xb0\x1e\x28\x90\x9a\xd7\x94\xa5\xb6\xa9\x1d\xa3\x55\x96\xa0\xce\x0b\xca\xd5\xd2\xa1\x71\x44\x5f\xc6\xdd\x12\x93\xa0\xf8\x65\x5c\x88\x7e\x60\x5c\x65\x73\x33\xee\x01\xab\x52\x25\x5b\xaa\xe3\x1d\x4b\xb3\x71\x3c\x30\x8e\x06\xc6\xd1\x77\xe3\xe6\xe5\x2e\x70\x3e\xab\x14\x15\x1b\x07\xde\x94\x43\xfc\x4d\xf1\x62\xcf\x34\xdd\xc2\xd9\x64\xfc\x19\x00\x00\xff\xff\x95\x2f\x32\x11\xe6\x03\x00\x00")

func assetsImagesPauseSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesPauseSvg,
		"assets/images/pause.svg",
	)
}

func assetsImagesPauseSvg() (*asset, error) {
	bytes, err := assetsImagesPauseSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/pause.svg", size: 998, mode: os.FileMode(420), modTime: time.Unix(1511645360, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesPlaySvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x51\xcb\x6a\xc3\x30\x10\x3c\xc7\xe0\x7f\x10\xea\x55\x5e\xaf\xb4\xf2\x4a\x2a\x71\x02\xcd\xb9\xa7\x7e\x41\x71\x12\xc7\xe0\xd8\x21\x76\xed\xd0\xaf\x2f\x72\xd3\x17\x74\x05\xd2\x32\xcc\x8e\x34\xa3\xf5\xf6\x76\x6e\xc5\x74\xb8\x0e\x4d\xdf\x95\x52\x03\x4a\x71\xe8\xaa\x7e\xdf\x74\x75\x29\xdf\xc6\x63\xe6\xa5\xd8\x6e\xd2\x64\x3d\x4c\xf5\x6f\x9e\x96\x69\xb2\x12\x42\xdc\xce\x6d\x37\x94\xf2\x34\x8e\x97\xc7\x3c\x9f\xe7\x19\x66\x82\xfe\x5a\xe7\x06\x11\xf3\x61\xaa\xef\xbc\xa9\x39\xcc\x4f\xfd\xad\x94\x28\x50\x58\x0d\x21\x84\xfb\x21\x37\x69\xb2\x5a\x5f\x5e\xc7\x93\x38\x36\x6d\x5b\xca\x87\x7d\x11\x97\x14\xfb\x52\x3e\x13\x03\xb2\x57\x06\x41\x3b\x6e\x33\x13\x32\x83\x3b\x06\xc7\x3a\x43\x40\x2a\x14\x03\x31\xc5\xbe\x70\x8a\x17\x04\x41\x6b\xbb\x2b\xc0\x21\x2b\x04\xe3\x9d\x2a\x20\xa2\x6c\xbe\xba\x10\xc2\x64\x31\x4d\x56\x3f\x25\x84\x10\x15\x2a\x04\x72\x26\x4e\x2d\xb3\x4e\x93\x42\x28\x16\x4d\xef\xb9\x42\xd0\x36\xe2\xe8\xe2\x4e\x0b\x47\x6b\xab\x10\x2c\xdf\xef\x8d\x9c\x10\xd4\xa2\x14\x5c\x7c\x57\x24\x15\xec\xb3\xe8\xc0\xb5\x8b\x81\xcf\x48\xfe\xad\x0a\xc1\xb8\xe8\x4d\x7b\x17\x75\xc9\x64\x08\x36\xd8\xef\xde\x1b\x7a\x21\x06\xa2\x25\x14\x62\x52\x7f\x22\x7a\x97\x22\x8f\xdf\x15\xa3\xdf\xa4\xc9\x47\x00\x00\x00\xff\xff\x81\xc0\x9e\x0d\xe0\x01\x00\x00")

func assetsImagesPlaySvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesPlaySvg,
		"assets/images/play.svg",
	)
}

func assetsImagesPlaySvg() (*asset, error) {
	bytes, err := assetsImagesPlaySvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/play.svg", size: 480, mode: os.FileMode(420), modTime: time.Unix(1511641898, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsScriptScriptJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x3c\x6b\x73\xdb\x38\x92\xdf\xfd\x2b\x3a\x35\x75\x26\xb5\x96\x19\x7b\x76\xf6\xee\x4a\x1e\x5d\x2a\x7e\x64\xe3\x5b\xe7\x51\x4e\x72\x57\x57\xa9\xd4\x14\x48\xb6\x2c\xc6\x10\xa1\x01\x21\xdb\x1a\xaf\xfe\xfb\x15\x5e\x24\x00\x92\x92\x9c\x38\x99\xcd\x17\x4b\xc2\xa3\xbb\xd1\xdd\x68\x74\x37\x1a\xce\x28\xa9\x2a\x38\x26\xcb\x77\x48\x78\x36\x85\xfb\x1d\x80\x8c\x95\x95\xe0\x8b\x4c\x30\x1e\xff\xbe\x40\xbe\x1c\x42\x96\x0e\x54\x17\x80\x98\x16\x55\xa2\x5a\x61\x0c\xea\xf3\xa8\x69\xff\x2d\x4b\x61\x0c\x59\xaa\x9b\x9e\x3e\x85\x53\xa4\x64\x09\x62\x8a\xc0\xf1\xf7\x05\x56\x02\x2a\x06\x62\x4a\x04\xdc\x22\xe4\xac\x8c\x04\x54\x73\x32\x53\x23\x52\xb2\xb4\xd3\x6e\xa7\x05\x45\xd5\xb8\xa8\x90\x83\x58\xce\xb1\x02\xb6\x10\x40\xa0\xd2\x74\x2a\xcc\x89\x8b\x99\x50\xfa\xbe\x98\xa1\x1c\x35\x86\x0a\x85\xf9\x11\xc7\x03\x18\xff\x97\x21\xbe\x7b\x70\xb9\xa0\xf4\xc8\xf4\xab\xae\x63\x92\x5d\x63\x99\x3f\x7f\x7b\x1e\x47\x4f\xc9\xbc\x78\x9a\x92\xa5\xc6\xfb\x4c\xe1\x1d\x47\xb0\x07\x58\x66\x2c\xc7\x0f\x97\xe7\x27\x6c\x36\x67\x25\x96\x42\x33\x6b\x30\x48\xc4\x14\xcb\x98\xa5\x9f\x5d\xc4\x0d\x87\x62\x89\x6f\x08\x2c\xfd\x3c\xb0\x58\x57\x83\x24\x23\x22\x9b\xc6\xc8\x79\xcf\x24\xe4\x7c\xa8\x28\x75\x26\xe9\x6f\xab\x61\x23\xbf\xe4\xf4\xec\xe2\xf9\xff\xa9\x8e\xd5\x8e\x14\x25\x29\x33\xa4\xb1\x15\x5e\x31\x81\xb8\xc5\x81\x41\x8d\x2e\xa3\x48\xb8\xe5\x5b\x7b\x9c\x41\x17\x8a\x3b\xbe\x1b\xc2\x52\x31\xd9\x32\x52\xa1\xae\x04\x11\x45\x06\x57\x28\x40\x11\x55\x13\xc1\x51\x2c\x78\x09\x87\x07\x07\x07\x7a\xf0\x6a\x67\x47\xab\xe1\x89\xa2\x96\xa4\x14\x4f\x08\xa5\x2d\x5d\x5c\x70\xda\xd2\x44\x5f\xe3\x42\xe9\x2d\x38\xed\x96\x46\xaf\x2c\xfa\x24\xd1\x2b\x87\x55\x2f\xb3\x37\xb0\xa8\x5e\xf5\x31\x59\x5e\x30\x76\xbd\x98\x03\xde\x09\x2c\xf3\x8d\x7c\x28\x72\x97\x0d\xd5\x62\x8e\xbc\xd1\x53\xaa\x40\x3d\x2b\xf2\x3e\x25\x2d\xf2\x81\x9a\x1e\x50\x71\x51\x54\xe2\x45\x41\xb1\xda\x96\x8a\x29\xa9\xa6\x7d\x74\x4c\x24\xa0\x67\x72\x44\x1f\x15\xb2\x2f\xa0\x63\xb2\x28\x33\x51\xb0\xb2\x53\x8a\x0a\x89\xd1\x9c\x09\x4a\x01\x35\xb2\xe5\x58\xcd\x1b\x59\x49\x1d\x7f\x22\x9b\x12\x76\xdd\xa8\xb6\x99\xfa\x96\xb3\x59\x51\x61\xc2\xf1\x33\x66\x22\x2e\xf1\x16\xce\x38\x67\x3c\x8e\xac\x7d\x9a\x90\x82\x62\x1e\x0d\x3c\x6d\x37\xb3\x15\xd4\xcf\x15\x2b\x63\x4d\x75\x97\x6e\x49\xf4\x2c\xfd\x9c\x4c\x49\xf5\xe6\xb6\x7c\xcb\xd9\x1c\xb9\x58\xc6\x11\x4a\x34\xd1\x60\x13\x45\x2c\xfd\xfc\xd1\x8c\xfd\xd4\x45\xc2\x6f\x94\xdd\x22\xcf\x48\x85\x6f\xd2\xcf\xb1\xd5\x5b\xa9\x84\x1e\x07\x5b\xa3\x14\x5a\x49\xdb\x73\xce\xc9\x32\x29\x2a\xf5\xa9\xba\x82\x7d\x29\x89\x9f\x91\x79\xec\xc1\x30\x52\x32\x1a\x20\x19\xb1\xa0\xd2\x74\xde\xaf\x64\xc7\x9b\x54\xd2\x9e\x5c\xe3\xb2\x52\x10\x93\x09\xe3\x67\x24\x9b\xc6\xd7\x3e\x5f\xae\x61\x3c\x86\xe8\xfc\x34\x72\xb9\x20\x21\x25\x45\x0e\x63\x89\xf9\xe3\xf5\x27\xb3\x68\x40\x5a\x61\x30\xec\xe3\xf5\xc7\x83\x4f\x89\x60\x17\x92\xb2\x13\x52\x61\x3c\x80\x3d\xb8\x4e\xaa\x45\x5a\x09\x1e\x1f\x0e\x3e\x85\x50\x76\xec\x06\x6d\x24\xb8\xa0\x42\x32\xcb\xee\xbd\xec\xfa\x9d\x20\x02\x5b\xea\x2d\xcd\x17\xfe\x03\x97\x95\xb7\x9d\xeb\x56\x79\xc6\xd8\xef\x47\x3b\xf6\xdc\x92\xe0\x20\x5d\x08\xc1\x4a\x10\x0c\xa6\x6c\x86\x73\x72\x85\x10\x4f\x38\x9b\x81\xd2\x79\xa8\xa6\x6c\x41\xf3\x32\x12\x76\x12\xc7\x09\xc7\x6a\xaa\x8e\x3b\x39\x3a\xa9\xf9\x45\x59\x46\xa4\x3c\xa5\x32\x4d\x15\xef\x1c\xce\x4d\x8b\x4a\x30\xbe\x4c\x38\xce\x29\xc9\x50\xad\x22\xbe\x5f\x0d\xe1\xb6\x28\x73\x76\x9b\x88\x42\x50\x1c\x1a\x2b\xa4\x68\x7d\xcf\x5e\x92\x6a\x1a\xdf\xaf\x1a\xe5\x6e\x56\xc6\xca\x93\x29\x29\xaf\xd0\x2e\x4c\x4a\x6e\x42\x68\x85\x7a\xa8\x01\x4a\xf2\xfc\xec\x06\x4b\x21\xad\x05\x96\x72\xbf\xcf\xd9\x5c\x8d\x8f\x86\xd0\x71\xd2\x5a\xa8\xfa\x34\xc9\x16\x9c\x63\x29\x34\xa9\x83\x0e\x03\xea\xf5\x1b\x48\x81\xc6\xe9\xf5\xe0\x6c\x2e\x96\x66\xdc\x51\x37\xbf\x12\x8a\xe5\x95\x98\xc2\xaf\xf0\x73\x6b\xd3\x59\x35\x70\xce\x33\xbe\xac\x07\x19\x75\x26\x55\x55\x5c\x29\xeb\xb2\xa0\x62\x08\xff\xfd\xee\xcd\xeb\x64\x4e\x78\x85\x71\x8e\x2d\x7b\xe6\xa3\xae\x15\x72\x50\xaf\x12\xd4\xb1\x02\x31\x0e\xe0\x3e\x34\x2a\x86\x16\xc5\x83\xf9\xa2\x9a\xea\x85\x29\xb6\x5a\xd2\xad\xb4\x9b\xee\x6d\x44\xad\x41\x34\x0c\xf6\x74\xe5\x1b\xc0\xf7\xe4\xd2\x2d\x3f\x6d\x31\xc2\xed\xe4\x5b\x0c\xbb\xdb\x3f\x19\xe7\xcc\xf0\xb0\x9b\x61\x1d\x04\x19\xcc\x37\x84\x43\x35\x23\x94\xea\x1d\xbe\x1d\x6e\xd5\x2c\x51\xef\xee\x42\xdc\xcc\xd6\xc4\xd8\xce\x81\xa3\x74\x4f\x5c\xeb\xd7\x4c\x18\x18\xfd\x6b\xe9\x5e\xf4\x53\xd4\x61\xd7\xa3\x9f\x7a\x0e\x4a\xa5\x76\x95\xe0\x45\x79\x55\x4c\x96\x2e\x82\xfa\xe4\xac\xdd\x88\xf3\x72\xc2\xea\xe3\xfb\x12\x49\x26\x92\x1a\x50\xcb\xc0\xcd\x39\x9b\x57\xfe\xe1\xad\x9b\x42\x1e\x49\xc6\x99\x25\x50\x46\xf2\xa2\xbc\x1a\x81\xe0\x0b\x1c\x9a\x46\x75\x5a\x8d\x94\xa0\x6c\x53\x51\x4e\x98\x6e\xd1\x2b\x75\x43\x04\xed\xa0\x38\x6e\xb7\xde\xfa\x96\xce\xff\x2d\x28\x7d\xc5\x16\xa5\x08\xfc\xa8\x66\x1a\xde\x36\x2e\x93\xb6\x2b\x8a\xee\x44\xba\x45\xea\x67\x4a\x96\xd2\x63\x49\x49\x76\x9d\xa4\x45\x99\xab\x41\x8e\x96\x7a\xb8\x3e\x94\xb3\x5e\x6c\x89\xf5\xe8\x9c\x0d\x54\xe6\xc8\xdb\xfe\xb4\x62\x54\x62\xd8\xd3\x12\xb9\x16\x45\xc6\x91\x08\x3c\xa3\x38\x93\x72\xbd\x60\x24\x47\xfe\x96\x94\xe8\xbb\x93\xfa\xdc\x0b\x00\x2b\x16\x6f\x05\xb6\x0e\x1c\xa2\xbc\xb8\x89\x86\xf5\xcf\x7b\x50\x5a\xf2\x9a\xcc\x70\x04\xda\xc1\xd8\x9f\x93\x12\x23\x58\x0d\xfd\x60\xc3\xc1\x08\x7b\x10\x45\xa6\x77\xd0\x73\x2e\x7f\x25\x25\x29\x59\xee\x4b\x6d\xf1\xe8\x58\x0b\x0e\x20\xa2\x24\x45\xea\x80\xec\x03\xba\x5f\x92\x99\xbf\x42\x6f\x8d\x72\x48\x22\x87\xd4\xdd\x83\x6f\x40\x43\x85\x98\x23\xaf\x36\x90\x61\x46\x7d\x53\x4a\x28\x62\x36\xdd\x4c\x8a\x1d\xf6\x25\xb4\x68\xdf\x67\x1b\x62\x48\x9e\xef\x77\x8c\x06\x60\xe5\x09\x2d\xb2\xeb\x91\x71\x27\x9c\x0d\xce\xca\xe7\x79\x1e\x87\xe4\xce\xc8\x55\x89\xe2\xc3\xe5\xc5\xc0\x5f\x56\xf4\x3c\xcf\xe1\x3d\x53\x1e\x45\xd4\xac\x25\x50\x67\xbb\xb1\x1d\x9b\x11\x2b\xdd\x1f\x2a\x23\xe6\x3b\x7f\x68\x5c\x93\xfb\xc6\x10\x2a\x17\x69\x68\x6d\xa0\x33\x73\xa4\xfe\xd6\xde\x8d\xb5\xd2\x86\xa0\x13\x5a\x74\xd9\x64\x0f\x9d\xe3\x91\x69\x56\x18\x77\xcc\x31\x53\x39\xbb\x2d\x25\x29\x95\x97\xc5\xd0\x7d\x57\x28\x44\x51\x5e\x49\x4f\x0d\xc6\xae\x2b\x57\x77\xcb\x2e\x69\xdb\xf4\x09\x80\xe2\xbc\x14\xc8\x6f\x08\x8d\x1d\xce\x37\xe3\x86\x3e\xed\xc9\xe5\xd9\x8b\xcb\xb3\x77\x2f\x7f\x3b\x7f\xfd\xfe\xec\xf2\x7f\x9e\x5f\x34\x46\xb2\xa6\xca\xb3\x93\x4f\x02\x92\x5b\xe6\xac\x59\x80\x77\x32\x06\xd3\x54\x6c\x62\x22\x2e\xdf\x51\x93\x0e\x8b\x8a\x67\x1a\x42\x90\xa2\x74\x0d\x14\xd9\x3a\xe4\xf4\xac\xbc\x30\x0b\x22\x94\xc6\x91\x1e\x1c\x0d\xb5\x9b\xee\xa6\x31\xb8\xd8\x12\x84\x1a\xdb\x01\x81\xcd\xb7\x06\xc0\xe6\xad\xf9\x24\xcf\xed\x74\x47\xd7\x5d\xe7\x8a\xe4\xf9\x87\xcb\x0b\x18\x83\x8e\xbe\x49\x9e\x3f\x5b\x70\xda\x17\x7a\x37\x40\xba\x93\x26\x1a\x9a\x89\x6d\x3b\x55\xc1\x71\xf8\xea\xb6\x56\x86\xc9\xd5\xbf\x7f\xfe\xd3\x80\x20\x2a\x3e\xad\xde\x62\x29\xb7\x4f\xdc\x0a\x87\xdb\x29\x26\x5f\x8d\xa5\xdf\xd1\x4d\xb5\x5e\x7a\xad\x26\x91\xa1\x3f\x27\x82\xb4\xf3\x38\xbd\x7b\xc3\x5d\x40\x3f\xad\x3e\xb5\x96\xde\xae\x4d\x29\xd1\x2b\x8d\xbd\xf3\xd3\x7a\x77\x89\x84\x7e\x23\xf7\xf6\x9d\xf1\xb2\x9e\x8c\xe1\xe0\x28\x18\xc0\x4a\x83\x3d\xa4\xb2\xde\x1d\x77\x61\x36\x10\xdc\xdc\xa7\x67\x47\x86\x70\xd0\x4a\x72\x3d\x88\x35\x4f\x9f\xc2\xfb\x37\xa7\x6f\x46\x30\x23\xcb\x14\x61\x4a\xca\x9c\xa2\xb6\x79\x30\x45\x8e\x49\x92\x98\x91\x52\x2d\x19\xc5\x44\x70\x92\x61\x8c\xed\x48\xaf\xc5\x5c\x3f\x07\x11\x32\x72\x77\xb7\x65\x06\x26\xd2\xb1\x53\x5c\x0d\x58\xe5\x20\x71\xf7\x96\x54\x17\xb3\xb3\x0c\xae\x09\xe3\x10\x53\x14\x50\x80\x64\x3d\x14\xf0\x6b\x0b\x8b\xf6\xe1\x8f\x60\x6f\xaf\x70\xd2\xa4\x6a\xd3\xe5\xb4\x8e\x46\xeb\xf1\x1f\x8b\x4f\xae\x1e\xe5\xb4\x8e\xdc\xd5\xe7\xee\x2e\x3c\xc9\x69\x40\xae\xa3\x15\x61\x9f\xa7\xf0\xfd\x4a\x2f\xf7\xb9\xec\x90\xee\xda\xe6\xa4\x9b\xb7\xb1\xef\x9d\x03\xb3\x03\x7b\xa0\x73\xdb\xe8\x56\xa0\x4b\xf6\x8c\xb1\x1d\xb5\xea\x7d\x09\xfe\x95\x03\x68\x1b\x4a\x56\xfe\x19\xef\x64\xa4\xc3\xc3\x2b\x54\xc0\xbf\x39\xc9\x69\x7d\x70\x9f\x1a\x19\x3f\x28\xc6\xf2\xc3\xab\xce\xc8\x0a\x54\xae\xf4\xc2\x0b\xac\x74\xdb\x99\x13\x57\xe9\x16\xfd\xc3\x0b\xa7\x64\xfb\x25\xfe\xfe\xd0\x70\xca\x99\x86\xb7\x4d\xee\xd7\x0d\xa7\xac\x52\x27\x3a\xd1\x5b\x4f\xab\xbe\x32\xb6\x32\xa8\x37\xc6\x56\xe1\x2e\xf3\xa9\xf2\x32\x02\x6b\xbc\x52\x2f\xf8\xf0\x5d\x51\x0b\x2a\x8c\x3f\xd6\x07\x33\x82\xa4\x14\x7b\xc3\x19\x0f\xe6\xbe\x1e\xfb\x90\xc8\x46\xa4\x2c\x5f\x7a\x0e\xb1\x1b\x56\x6f\x01\x41\xc2\xe0\x81\x47\x1d\x82\xd8\x02\x88\x04\x93\x07\x60\xba\x00\x01\x44\x72\xe5\x91\xd7\x38\xf8\x66\xc8\x72\xea\xc7\x6b\xe0\x78\xf4\x2d\xcc\xff\x72\x9c\x7a\xcb\xd9\x15\xc7\xaa\xfa\x5e\xdc\x8a\x0f\x0f\x0e\xe0\x2f\x92\x69\x72\x57\x4a\xef\x36\x3f\x5e\x0a\xac\xe0\xa9\x6c\xab\x8a\x3f\x50\xfd\x1c\x24\x82\xbd\x28\xee\x30\x8f\x7f\x1e\xc8\x23\xe4\xdf\xa2\x1f\x94\xbf\xef\x8a\x3f\xbe\x9b\x26\x4e\x18\x9f\x11\x21\x31\xc6\x1e\x2f\x7f\x50\xd6\x9d\x58\x05\xf9\x73\xf8\xe7\xeb\xe7\x8f\xca\xc4\xd3\x0b\xb8\x24\xe2\x3b\xab\xa0\xc4\x28\x59\x68\x4f\x1e\xf9\xfb\x47\x65\xe0\x87\x3f\x93\x81\x8b\xf9\x0f\xcf\x3e\xb5\x82\x3f\x6b\x0f\x6b\xfe\xbd\x67\x82\xd0\x35\x0c\xdc\x09\xbf\x0d\xb6\x73\xbb\xd6\xe5\x90\x6b\xa7\xcb\x04\x95\x32\xfa\x89\x5b\xd1\xc4\x33\x88\xea\xcc\xd4\xfe\x84\xb3\x3f\xb0\x8c\x60\xa4\xae\x54\x1d\x07\xcd\x4c\xbb\x41\x78\xf6\xf5\xc9\xce\x80\xb0\x3a\xdf\xd9\xe4\x38\xbd\xec\xe6\x3b\xc1\xe6\x41\x0e\x53\x36\x39\xc9\x4b\x18\xfd\x09\x44\x11\x2e\x5a\x54\x11\xee\xe6\x54\x1f\x31\x3f\x5c\x53\xa7\xd3\x71\x9b\xa8\x3b\x55\xa3\x02\xf2\x74\x63\x47\xce\xd7\x8e\x6a\x62\x19\x4b\xa3\x1e\xd2\xc4\x22\x7e\x67\xf7\x6d\x8f\x1a\xf3\x88\x97\x32\x8d\x72\x4a\xc0\x7d\x17\x33\xaa\xb3\x49\x29\x6d\x62\x38\x09\x78\x7d\x8d\xcb\x11\xdc\x25\xb4\x28\xaf\x87\x30\xe5\x38\xb1\xbf\x7c\x1e\xde\x25\x73\x22\xa6\x0d\x07\xc3\xb4\x79\xe7\x2d\x55\x13\xb5\x7e\x33\xae\xec\xeb\xd2\x98\x75\xbc\x39\xfb\x4e\x37\x57\x01\x61\xe6\x46\x60\x63\xb4\xa7\xef\xfd\xcc\x9d\x5f\x40\xa1\xa7\x7d\xe1\x75\x84\xa7\x6e\xe1\x7d\x84\x9f\x44\x30\x97\x12\x6e\x16\xc1\x05\x32\xd2\x1f\xce\xdd\x44\x53\x39\xe4\xd8\xf4\x54\xf9\x62\x4d\x4e\x03\xaa\xc5\x64\x52\xdc\x61\x05\x63\xf8\x18\xc1\x3f\x8e\xa3\x21\x44\xf0\x4a\x7f\xfc\x5d\x7f\xbc\x3f\x8e\x54\x06\xac\x2b\xb7\x66\xa7\x77\x25\xd5\x5c\x04\x30\xae\x87\xd6\xf9\x34\xd3\x5f\xfc\x81\x30\x86\xd4\x04\x31\xaf\x88\x98\x26\x73\x76\x1b\x1f\x1e\x0c\xe1\xaf\xf0\x17\x88\x0b\xd8\x83\x43\xf7\x72\x5e\xcd\xf8\x15\x0e\x0f\x5a\x1a\x29\x7b\xfc\xc0\x47\x23\x6d\x29\x78\x0d\x62\x03\x8c\xc3\xad\x60\xb4\x81\xa8\x55\x70\xb6\x28\x73\x35\xac\x05\xc5\x14\x5e\x99\xd1\x7a\xed\x7b\x10\xe9\x6f\xd1\x51\x87\xf4\x94\x47\xc3\xeb\x42\x08\x5b\x35\xd7\x48\x56\xf7\xed\x41\xf4\xb4\xc2\x4c\x81\xa8\x21\xd8\x34\x97\xca\xdb\x39\x25\x02\x72\x15\x7e\x06\xc6\xca\x11\xc6\xe3\x31\x1c\x04\xf9\xb3\xed\x33\x32\x45\x3e\x82\xa8\x64\xfb\x4d\xe6\x7e\xdb\x4c\xcc\xf4\xd0\xd9\x9b\xbe\x7f\x12\xbd\x66\xf5\x4a\xea\x70\xdb\xb3\xf1\x56\xa5\xa8\xce\x73\x87\x4b\x93\xf6\x35\xa7\x4d\x86\x72\xcd\xb2\x2c\x9e\xb3\x52\xf0\xe5\x10\xee\x6b\x27\x63\x04\x79\x4d\x92\x32\xbb\x26\x1d\x6c\xdb\x82\x8b\x4e\x7b\xa4\xa9\x46\x9b\x3a\x1e\xd8\x4d\x3a\x48\x38\xde\x20\xaf\x4c\xbd\xd3\x26\x36\x47\xcc\xde\x08\x1b\x0e\xb7\xd9\x2b\x57\xbe\xa3\xf8\xe1\x6a\x90\xb7\x1a\x57\x01\x9c\x74\x5c\x3b\x13\xb7\x91\x1c\x5a\xd4\xe4\x74\xd9\x50\xe5\xb1\x69\xb0\xdb\x3a\x6d\x2d\x2e\x7a\xfc\xb3\x8b\x5c\xa7\x87\xfe\xbd\x79\x8f\x71\x0f\x2a\x08\xdc\x04\xd4\xa0\x1f\x85\xb1\xc4\xc7\x84\x4b\x85\x98\x9b\xbc\xcf\x68\x63\x2a\xc6\xa2\xc9\x18\x95\x46\xdb\x52\xa1\xcf\x8c\x13\xd9\x18\xe7\x54\xea\x84\x15\x5c\x2d\x37\x3d\xc4\x15\xd8\x46\x99\x34\xfb\xd0\x5f\xbb\x0a\x22\x9a\x33\x36\x32\x8b\x89\xda\xca\xd2\xd4\xb0\x3c\x22\x62\xbf\x2c\x65\x9b\x23\xb4\x83\x2a\xcd\xfc\xb6\xfe\x56\x62\x49\x9b\x82\xa6\xdb\x22\x17\xd3\x91\xd5\x3c\x2b\x26\xf8\x8b\x32\xf6\xb5\x61\xff\xab\xc9\x8a\x69\x82\xe4\x91\x7c\xa5\xcc\xf5\x89\x16\x92\x9e\xac\x24\xb6\x63\x4a\x9d\xbe\x8a\x03\x45\x79\xb5\x9f\x12\xbe\x96\x03\x1a\x40\xff\x64\xe9\x93\x50\xe4\xd1\x50\x2f\x78\x64\xd6\xbd\xea\xe0\x56\x9f\x8e\x59\xa3\xdf\x56\xd9\x5f\xfd\xec\xa1\xe3\x1c\xd7\xc1\x53\x47\xd1\xdb\xbf\xff\x2d\xcd\xf2\x5f\xa2\x75\xbe\x58\xf4\xd3\x04\xd3\x5f\xd2\xc3\xa8\xf3\xe4\x8b\x7e\x22\xff\x81\xbf\xfc\x67\x1a\x35\xd5\xbb\x97\x8c\x89\x2f\xbf\x8b\x69\x1c\xa9\xb4\xae\x02\xb6\xe5\x65\xe6\x77\xfc\x31\xb2\x35\xa9\xea\x79\x85\xf4\x71\x4c\x83\x35\x94\x2f\x49\xe5\x36\x1f\x93\xe5\xf9\x69\x5d\xba\xed\x43\xf7\x6a\x6c\xeb\x6b\xf5\xda\x8b\xeb\xac\xbc\x0b\x20\xf8\x15\xb2\xee\x1a\xb4\x07\xbc\xa6\x20\x24\xd3\x25\x27\x0f\xbc\x28\x6a\x66\xe1\xad\x5f\x00\xe2\x5d\x67\xe9\x61\xed\x92\x95\xd0\x4f\xad\xe9\x1b\x79\xf3\xdc\x8a\x91\xd5\x86\x1b\xa1\x8c\x94\x67\x77\x45\x5d\x0a\x5c\x79\x7c\xd1\x8f\x83\x6c\xb9\x81\xd7\xe7\x0a\xac\x7b\x84\x92\xdd\x17\x5d\x2c\xb9\xde\x87\x5e\x17\x2b\x05\x96\x42\x99\xc6\xb5\x19\x8e\xf7\x6c\x6e\x4e\x09\xfd\xc0\x68\xd4\xbb\xaa\xc6\xbb\x31\x1c\x18\xd9\x2f\x4d\x0f\x33\x1d\x0e\xf3\xf5\x2d\xbd\x6c\x8e\x07\xee\x40\x0d\x54\x8b\x6b\xe4\xa8\xa3\x1e\xef\xf6\xc6\x95\x14\xca\x76\x3e\x59\x2b\xbe\x37\xee\x87\x5b\xed\xd5\x59\xe1\xa5\xd1\x3e\x57\xa5\x27\xb1\x97\x91\xe9\xaa\xe3\x0a\xc3\x75\x8f\xdd\xad\x9a\xa3\x60\x6b\x7c\x55\x79\x66\x10\xf2\x7a\x12\xda\x0a\xb0\x11\x26\xb4\xf7\x42\x40\x66\xc3\x01\xf5\xac\x6c\x1b\xc5\x30\x8c\x3d\xad\x1d\x50\x5d\x7d\x60\xb7\xe1\x94\xdd\xda\x2e\xf3\xfe\x26\x9c\x79\x4c\x96\x23\x28\x72\x6f\xca\x31\x59\xc6\x45\x3e\x68\x9e\x9b\x75\xc6\xfe\x1d\x9b\x2c\x2c\x98\xf0\x4b\xf8\x83\xd5\x3a\xf5\x1c\x61\x95\x0d\xdc\xd9\x2a\x8a\xae\x2d\xef\x62\x6c\xd7\xc2\x48\x2a\x35\xde\x76\xf5\xce\x5a\x6f\xfe\xbc\x9c\x30\xdf\x99\x37\xef\x00\x9c\x24\x89\x49\x8e\x79\x7a\x6c\x0c\x9a\x57\x35\x66\xde\xb8\x04\x2c\xd7\xf3\xd9\xbc\x7b\x7a\x53\x32\xd6\x3f\x5b\xe7\xb9\x3a\xb6\xd1\xa9\x57\xf7\xe6\x02\x70\x58\x13\x9c\xc1\xdb\x65\x44\x5a\x39\x91\x2d\x2b\x8b\x01\x22\xcb\x59\xc8\x19\x56\x50\xaa\x93\xbb\xa8\x44\xe2\xe4\xe9\x82\xba\x8d\x75\x8a\xa6\x6c\xf5\x56\x1b\xce\xd4\xc5\x0f\x8d\x29\xea\x01\xe5\x6e\x85\xe7\x79\x3e\x82\x45\xdb\x34\xbd\xe0\x6c\x26\x77\xc3\xa2\xb5\x19\xb6\x20\xc3\x0d\xac\x1f\xb4\xfb\x6b\x6b\xb9\x61\x33\x37\x34\xd5\xf5\x2e\xed\x31\xee\x41\x5a\xe2\x6d\xfd\x30\x02\x3a\x76\x93\xc1\xb8\xea\x74\x65\x9a\x77\x22\x16\x8c\xe7\xbd\xd8\x13\x7f\xad\xfb\xe2\x94\x48\x3a\x76\x66\x13\x89\x4a\x5c\xca\x4a\x7d\x0f\xca\x3a\x8e\x43\xfd\xca\xd7\xa3\x93\xd1\xdc\xb8\x1e\xfd\x5e\xc9\x51\xf7\xba\x42\x0f\xc9\x9b\x33\xd2\xb6\x1f\x56\xe1\xe3\x2a\xf5\xca\xb0\x46\xba\xbb\x0b\x1e\x51\x1d\x5c\xf1\x5e\xfe\x34\x24\xf6\x5b\x83\x5e\xae\x76\x4d\xde\x01\xbf\xbc\xcf\x75\x3a\x5c\x6f\xb2\x0b\xde\xfd\xea\xeb\xe5\x73\xba\xbe\xd0\xd7\x7a\x99\xed\x51\x0e\x66\x97\xe6\x00\x7c\xed\x96\xb8\x32\x5f\x70\x93\x0b\x99\xcd\x45\x1c\xbd\x52\x45\xb5\xf0\xe1\xf2\x22\x72\xd2\x8f\xf5\xcb\xd5\x90\x14\xa7\xa6\x57\x8e\x09\x36\x6e\xdb\xe2\x34\x70\x36\x42\xe9\x59\xcc\x6a\x67\xa7\xf7\x0d\x9f\x4a\xc1\x0c\xa1\x8e\x09\xcd\x4a\x95\x19\x3b\x7d\xf3\x2a\x31\x7e\x78\x97\x59\x93\x21\x98\xf1\x90\x86\x90\xb3\x6c\x21\x5b\x93\x2b\x14\x66\xc0\xf1\xf2\x3c\x8f\x23\xe3\x9f\xa9\x57\xb5\x52\xdc\x3a\x7c\x33\xda\xfb\x2d\x1f\x2c\xa5\x64\x79\xa9\x8e\xbf\xca\x7f\xa0\x94\x92\xe5\x45\xd7\x5b\xa6\x94\x2c\x9d\xb2\x3b\x2d\x15\xcf\xca\x2c\xeb\x7d\xfe\xa0\x30\xca\x9b\xa8\x1f\x30\xe9\xdf\x6e\xc5\x9d\xf9\x5f\x0b\x8f\xf4\x86\xa9\x46\xd9\xae\xb4\xf3\x26\x5f\x62\x86\xc5\x0d\xbe\x95\x24\xf8\x3c\x6e\x72\xbe\xda\x0a\x3d\x19\x8f\x43\xd0\x81\xd9\x59\x83\xb8\xbd\xc3\xef\xdb\xd2\x69\xcb\x25\x90\x88\xe3\xbf\x6c\xe0\xeb\x83\x58\xea\xec\xbd\x20\xe6\xdc\x22\x10\x64\x7d\x49\x44\x1d\xd1\xed\x6b\xff\x6b\x53\x5e\x5b\x93\xfd\x12\xd5\xe2\x87\xf6\xa6\x2e\x9a\xea\x86\xfd\xc3\x68\x08\x02\xef\xc4\x08\xa2\xf3\x52\x3d\x15\xd6\x36\x20\x72\x42\x33\xb5\xca\xdc\xf1\x33\x54\x65\xf5\x57\x20\xfd\xb9\x41\xfa\xa6\xb4\xff\xa3\xa3\x85\x51\xca\xcc\x22\x0b\xe2\xb2\x16\x31\x7e\x6d\xa7\x93\xac\x98\x14\x54\x20\xaf\x73\xf6\x5d\x85\xa8\xd5\x10\xc2\xcd\x32\x70\x0f\x55\xa4\x38\x53\x35\xf7\x5e\x16\x3f\xce\x87\x50\x78\x67\xe7\xc6\xe0\xcc\x50\x2b\xf9\xb1\xee\x31\x92\x17\x6b\xc5\x79\xe8\xa1\x6b\x56\xe6\x74\x3f\x82\x3d\x28\x86\x50\x2a\xa5\xc8\x55\xfe\xb8\xf1\xd5\x82\xbc\xbe\xde\x74\x6a\x25\xcd\xf5\x0a\xb4\x2f\x8d\xfa\x89\x3f\x9b\xcd\xc5\xb2\x11\x65\x4e\xf7\xd5\x9b\xdc\x68\x83\xcb\xaa\x50\xb6\xdf\x44\x85\x82\x0b\x9c\xf1\x66\x03\x87\xc1\x9e\x15\x46\xe7\x60\x2d\x18\x1e\x0a\xe6\x91\x45\x23\x0f\x4e\x9e\x14\xb9\x17\x35\x69\xae\xa4\x64\xe9\x8b\x85\xfb\x62\x09\x43\xc8\x40\x20\x9e\x44\x1e\x2e\x13\x89\x3d\x10\x4a\x7f\x38\xe6\x08\x66\x7d\x60\x64\x0d\xe5\x43\x74\x45\x5f\x0a\x7b\x74\xa9\xfb\xf5\x21\xcc\xb0\xaa\xc8\x15\x8e\xa0\x03\xc3\x17\x44\x3f\x46\x7a\x2c\x30\x34\x12\x63\x73\x71\xbe\xc5\x9b\x3c\xee\x6b\x9b\x7e\x7b\x32\x36\x9f\xbb\xbb\xfa\x4b\x22\xd8\x3b\xf5\x60\x3a\xee\xf4\x2c\xfd\x73\xc7\x40\xf4\x8f\x1e\x73\x81\xde\x9c\x3d\xe8\xac\xdb\xbf\x30\xf7\x4c\xe8\xa3\x5c\x83\x98\x63\xc3\x18\xe1\xfa\xd8\xd0\xba\x2d\xcd\x71\x3b\x89\xef\x6d\x8e\xc7\x24\x82\x6a\x90\x6e\xd2\xae\xf3\x9e\x4d\x37\x9a\xab\xb1\x4e\xe2\xd4\x1e\x88\x1f\x87\x2a\xbb\x79\xcc\x05\xd5\x6b\x66\xa5\xd8\x71\x47\xe5\x69\xde\x23\xe1\x0f\x6b\x3d\xbe\xe0\x92\xca\xd9\x80\x8f\x29\x2f\xbf\x3c\x46\x4b\xc5\x6c\xe5\x36\x0d\xe1\x99\xeb\x1c\xb4\x8e\x5f\xe7\xfd\xaf\x2f\xff\x9f\xaf\x38\x77\x5d\x6e\x22\x4f\x42\xb5\x4f\xb3\xa4\x4a\xf8\x93\x92\xa2\xcc\xe8\x22\xc7\xca\xfe\xbb\xac\xa3\x7f\xc5\xd8\x44\xe7\xe5\x1f\xf5\xa1\x8f\x16\xd1\x0b\x96\x2d\x2a\xcc\x8d\x8d\xd1\xd1\xc5\x17\x3a\x9e\xfd\x4f\x5b\x04\x9b\xeb\x3b\xc4\x3d\x7b\x44\x68\x27\xf9\x19\x44\x20\xd8\x3c\x25\x7c\x5f\xb7\x28\x2d\x0e\x8a\x20\x9d\x93\xd4\xde\xb5\xec\xee\x3e\x3c\xef\xdf\x41\xcf\x3e\xde\x15\x62\x53\x49\x9f\x42\xe8\xe6\xff\xff\xce\xe0\x25\x6b\xde\x98\xac\x75\x68\xa3\xa2\x9c\x2f\x44\xeb\x6a\xd4\xe2\x37\xbb\x24\x65\x77\x91\x9b\x60\x53\x32\x19\xf5\x5c\x59\x05\x62\x93\x51\x89\xe3\x01\xcb\xe9\xc7\x74\xc1\xb7\x9c\x6d\x84\xee\x67\xde\xcd\x1d\x0c\xb6\xdc\x18\x2f\xed\x84\x89\x20\xfc\x0a\x45\x72\x43\xe8\x02\x1d\x08\xea\xb7\xc7\xc4\xaa\xbe\x06\x8b\x9c\x75\xaa\x04\xd0\x94\xd1\x1c\xf9\x08\x22\x73\xa1\xa9\xef\x84\x6b\x9f\x7d\xb5\xf3\xff\x01\x00\x00\xff\xff\xdb\x00\x9b\x2d\x11\x50\x00\x00")

func assetsScriptScriptJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsScriptScriptJs,
		"assets/script/script.js",
	)
}

func assetsScriptScriptJs() (*asset, error) {
	bytes, err := assetsScriptScriptJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/script/script.js", size: 20497, mode: os.FileMode(420), modTime: time.Unix(1511725311, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsStyleStyleCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5a\xef\x6e\xa3\xb8\x16\xff\x9e\xa7\xb0\x54\x5d\xb5\xbd\x2a\x19\xd2\x36\x69\x87\x7e\x99\x07\xb8\xba\x5f\xf6\x09\x0c\x1c\x12\xab\x60\x23\xdb\xb4\xc9\xac\xf2\xee\x2b\x1b\x0c\xc6\x60\x48\x32\x19\x75\x77\xd5\xd1\x08\xb0\x7d\xce\xef\xfc\x3f\x07\x12\xb3\xf4\x80\xfe\x5c\x20\x94\x31\x2a\x83\x0c\x17\x24\x3f\x44\x48\x60\x2a\x02\x01\x9c\x64\x6f\x0b\x84\x62\x9c\xbc\x6f\x39\xab\x68\x1a\x24\x2c\x67\x3c\x42\x37\xe9\x5a\xfd\xbd\x2d\x8e\x8b\x65\xb2\xc3\x3c\xf8\xe4\xb8\x2c\x21\xd5\x94\x3e\x19\x4f\xf5\x83\x08\xc5\x1c\xf0\x7b\xa0\x1e\xbc\x99\x05\xfd\xc8\xac\xe0\x3c\xd7\x34\x72\x86\x53\xe0\xfa\x74\x4a\x44\x99\xe3\x43\x84\xe2\x9c\x25\xef\xfa\x18\x49\xe5\x2e\x42\x8f\x61\xb9\x57\xb7\x3b\x20\xdb\x9d\xec\xee\x1b\x48\x92\x63\x2a\x4a\xcc\x81\xca\x37\x23\x8e\x20\x3f\x21\x42\xa1\x23\x03\x29\xf0\x16\x22\x54\xf1\xfc\x6e\xb9\xfc\xa6\xef\xc4\xb7\x1a\xc1\x52\x7c\x6c\xef\x9d\xed\x35\x91\x55\x18\xfe\x47\xff\xa7\x56\x31\x25\x05\x96\x84\xd1\x80\xe2\x02\x22\xc4\x99\xc4\x12\xfa\x2b\x69\xc5\xf5\x45\x84\x56\xa2\xbf\x42\x24\xd4\x4b\x41\xc2\x2a\x2a\x23\x44\x68\x46\x28\x71\x09\x48\x52\x10\xba\x0d\xb2\x8a\x26\x35\x9d\x9c\x50\xc0\x5c\xe9\xeb\xc7\x3b\x1c\x32\x8e\x0b\x10\x0d\xeb\xda\x82\x9c\x15\xfa\x02\xd5\xca\xc8\x18\x2f\x0c\xb6\xbb\x30\x85\x5a\xb2\xe3\x02\x21\xc9\xbc\xfb\x9e\x36\xd6\xce\xc6\x32\x0a\x46\x8c\x6b\xf3\x94\x4c\x90\x1a\x0e\x87\x1c\x4b\xf2\x01\xb6\x4d\x9e\x95\x49\xfa\xa7\xa2\x28\x86\x8c\x71\x78\xe8\xd3\xb2\x6f\x82\x8c\xe4\x39\xb8\xf4\x71\x2c\x58\x5e\xd5\x5a\xc9\x21\x93\x8d\x21\x4f\x60\xa5\x09\x25\x8c\x4a\x50\xda\xbd\xbd\x7d\x9b\x72\x2b\x63\xd3\x69\x27\x3f\x05\xfa\x08\x85\xcd\x3a\x4e\xd2\x67\x45\x21\xae\xa4\x64\x54\xef\x33\x12\x3c\x6d\x6a\x07\x56\x76\x0d\xdc\x87\x31\xe3\x29\xf0\x08\x51\x46\xb5\x06\x4a\x9c\x2a\x9e\x11\x0a\x5b\xc7\xb7\x5c\x7c\xf5\xda\x8b\x85\xcf\x5d\xe3\x4d\x23\x90\xbe\x7f\xff\xae\x77\x56\x5c\xa8\xfb\x92\x11\x2a\x81\x77\x10\xa3\x1d\xfb\xf0\x0b\xf4\xf2\xf2\x62\x6d\xcd\x58\x52\x09\xbd\x95\x55\x52\x89\xa1\x6d\x74\x5c\xdc\xe0\x34\x0d\x2c\x89\x3b\xa3\x66\x64\x0f\x69\x2d\x9f\x94\xac\x50\xea\xaf\x91\xf3\x5a\x7c\x73\xdb\x18\xe7\xf9\xb9\x1f\xf3\xe6\xbe\xd6\x4e\xc0\x71\x4a\x2a\x11\xa1\xc7\xc7\xfa\x71\x81\xf9\x96\xd0\xc6\x51\x3a\x8d\x8d\xe9\x73\x28\x9b\x93\x40\x4e\x4b\x2b\x03\x35\xfa\x32\xcd\x6d\x97\x6a\x0a\xbc\xa5\x20\x55\xaa\xb9\x75\x73\x8d\xeb\x37\x23\x89\xc8\xc8\x6a\x2d\x70\x28\x01\x4b\x25\x5b\x73\xe9\xac\x77\xea\x4f\xa0\x45\xc9\xf6\x81\xd8\xe1\x94\x7d\x2a\x97\x0a\xd1\x4b\xb9\x47\x7c\x1b\xe3\xbb\xf0\x01\x35\xff\x96\x4f\x1a\x9e\xd6\x40\x73\xbe\x3b\x85\xc2\xe5\x4a\x58\x29\xc9\x32\xf9\xb4\x07\x59\xa2\x39\x10\x94\xed\x07\x18\xd6\xf7\x75\x91\xa9\xa3\x39\x28\x31\x05\x0f\xe5\xd6\xe9\xc7\x53\x88\x64\x65\x84\xd6\xaf\xb6\xa3\x04\xae\x13\x6a\x44\xe4\xa7\xf6\x9a\xc6\xc5\x62\xa6\xd3\xcc\x8f\x02\x52\x82\xd1\x5d\x81\xf7\x41\xe3\x9b\x1b\x75\xea\x5e\x83\x19\xc2\x6b\x3d\x38\xc1\x79\x72\xa7\x8b\x47\x80\x74\xe4\x6a\x9d\x9a\x8c\x66\x18\x1f\x6d\x16\x84\x9e\xc7\x62\x13\x36\x54\x0c\x55\xcd\x73\x5d\xb3\x7c\x0a\x0d\xcf\x63\x57\x68\xbf\x48\x8d\x5d\x1c\x6f\xc2\xf2\x14\xb5\xba\x68\xaf\xaf\x55\x2f\x87\x4b\x95\x6a\xb7\x32\x13\x1a\x34\x39\x7c\x48\x7b\x55\x93\x3e\x2e\x96\xc0\x39\xfb\x3a\x53\x9d\xdb\xc5\x59\x09\x57\x09\xd7\x72\x90\xb0\x97\x01\xce\xc9\xb6\x97\x7e\x1a\x09\xb8\x2a\x06\xb3\x6e\xe0\x28\xe2\xfa\x5e\xe0\x63\x70\x96\x13\x10\x21\xf5\x69\x75\x11\x08\x79\xc8\x21\x90\x87\x12\xba\x92\xe3\xad\x4e\xc7\xc5\x4d\xca\x3e\xa9\xf2\x1c\xf1\x15\xa6\xbe\x04\xf1\xb4\xc9\x1c\x79\xae\x6e\x31\x1f\xfd\x33\x0c\x66\x91\x58\x9a\xcb\x89\x0e\x77\x22\x50\xfa\x7d\x64\xab\xa6\xd5\x66\x50\xa8\xfb\xc6\x1c\xc7\x10\x51\x26\xef\xa2\x1c\x0b\x19\x24\x3b\x92\xa7\xb5\xc0\x2d\xcb\xc6\xa6\xe5\x1e\x09\x96\x93\xd4\x6e\x52\x47\xa9\x4d\xd6\xe2\x2c\x54\x7f\x9e\x76\x70\x54\x41\xff\x6d\x54\xa4\x77\x05\xf0\x01\x54\x0a\xe3\x2f\x9e\x23\xed\x95\x1e\x96\x2e\x9a\x10\xdb\x7c\x51\xf7\x9f\xca\x31\x5b\xaf\xab\xf5\xee\xe3\xed\x8e\x2f\x4d\x6c\xe8\x78\x59\xad\xeb\x22\x74\x43\x59\xf0\xa5\xf1\x67\xaa\xe2\x2a\x3c\xa9\x2c\x0e\xf1\x5e\x3f\xbe\xfc\x2c\xce\x09\xb1\x1e\x95\xdd\xca\xb2\xc0\x68\x8f\xee\x44\x52\x6f\x2e\x5a\x85\x93\xf5\xc4\xea\xcb\x9f\xec\xf1\xe8\xd3\x8c\x55\xa1\xce\x5a\x4b\xc9\xca\x91\x51\xb6\x9d\x4a\xb4\x1d\x43\x67\xe2\x74\x60\xb5\xb3\xc8\xab\x2f\xbe\xad\xb1\xaf\x65\x68\x2e\x02\x01\x98\x27\x3b\x65\xfa\xb9\x1e\x61\x7a\x34\x7a\x0c\xdd\xf7\x21\xaf\x73\x7e\xe6\x9d\x29\x55\x3a\x31\xe9\xca\x9e\x2a\x37\xa3\xd3\xd6\xca\x8c\xde\x13\xb2\x79\x47\xc3\xe1\x21\xd8\x13\x39\x3e\x2c\x7a\x35\xd2\x77\x67\xa3\x90\xd7\x71\x7d\xfc\x33\x86\x42\xb5\x61\x74\x24\xec\x5e\x3f\x69\xf5\x35\x2a\xe6\x20\xaa\x5c\xfe\x4b\xba\x85\x31\xa1\xae\xdf\xe4\x4d\x31\x39\xa7\xd1\x73\xe8\x98\xfb\x1d\xe8\x4a\x73\x8d\x16\xa2\x97\xb9\x36\x61\x5f\x9f\xab\xa6\x46\xcc\xe0\xb8\xbc\x8d\xf0\x11\x56\x76\x27\x74\xfb\xe0\xdd\x00\x45\x29\x0f\x13\xcb\xaa\xc9\xbe\xb0\xfc\x77\xd2\xaf\xdb\xd1\xc2\x8f\xf4\x64\x20\xd7\xb0\x93\x8e\x84\x08\x11\x89\x73\x92\xcc\xa2\x1a\x98\x65\x06\xe6\xf5\xcd\xd8\x49\xdf\x9f\xc1\x66\xcc\xfe\xeb\xfa\x9a\x65\xf1\xdb\x5c\xf6\x17\x9a\xe0\x39\xad\x4c\xf7\xc3\xde\xd3\xec\x6a\xb9\xc2\x54\xbb\xf5\x4c\x4c\x34\x2c\x7f\x83\x8e\x1b\x59\x4e\x7c\xf1\x51\x37\xdd\xd3\x2f\x3e\xda\x81\x81\xd0\x8c\x7d\x45\x89\x1b\x24\xdb\x99\xfa\x35\x04\x7c\xfd\xf2\x35\xc1\xe3\x9c\xea\xd5\x27\xd3\xdd\x66\x9c\xfd\x04\x3a\xe1\xcd\x08\xb1\x12\x27\x44\x1e\x22\x14\x2e\xd7\x23\x76\xea\x6e\xb1\xfe\x60\x25\x86\x03\xd7\x44\x0b\x7f\x02\x39\xab\x47\x6c\x5b\x0d\xd4\xcc\x70\xce\x61\x89\xe3\x1c\x7a\x3b\x71\x25\x99\x77\xa3\x4c\xa3\x8c\x70\x13\x13\xdd\xe7\x50\xa7\x06\xdb\xb8\x75\x53\x6e\xf9\x4a\xd0\xeb\xd2\xfd\x7c\x74\xfc\x59\xcc\xee\x2f\xfd\x64\xea\x35\x24\xc9\x41\x3c\xcc\xac\x9b\xa8\x9d\xdd\xd7\x55\x8b\xa1\x21\xe7\x40\x9c\x90\xe6\xda\x59\xea\x3c\x82\xf3\xb9\xc6\x9b\x5e\x7a\x93\xc4\x2c\xc3\x5f\xe9\x59\x4e\x79\xf1\x39\xcd\x1e\xe1\x0b\x59\xbb\x1f\x3b\x8f\x8b\x65\x8c\x0f\x7f\x97\x74\xea\x4b\x00\x33\x49\xb6\x27\xc1\xf5\xf3\xeb\x38\xf9\x73\x52\x6b\x4b\xa1\xbd\xd2\x6f\xbc\x1e\x46\x57\x04\x40\x0a\x5c\x8c\x2f\xe6\x00\xc9\x0e\xb8\xf0\xfc\x20\xc2\x31\xc0\xa3\xf1\x65\x0f\x00\xeb\x0b\xbc\x1f\xc8\xf4\x26\x03\xa8\xf7\x85\x7d\x98\x22\xe7\x31\x38\x9f\xe6\xff\xaf\x7f\x3e\x71\xeb\x3b\xe9\x60\x73\x0e\xff\xd1\xac\xfa\xcf\x8f\xc2\xee\x08\xfc\xcf\x2c\xfb\x29\x5c\xfc\xca\xf2\xb8\xf8\x2b\x00\x00\xff\xff\xfc\x46\x01\x09\x5a\x23\x00\x00")

func assetsStyleStyleCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsStyleStyleCss,
		"assets/style/style.css",
	)
}

func assetsStyleStyleCss() (*asset, error) {
	bytes, err := assetsStyleStyleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/style/style.css", size: 9050, mode: os.FileMode(420), modTime: time.Unix(1511725311, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/index.html": assetsIndexHtml,
	"assets/images/back.svg": assetsImagesBackSvg,
	"assets/images/loader.svg": assetsImagesLoaderSvg,
	"assets/images/magnet.svg": assetsImagesMagnetSvg,
	"assets/images/pause.svg": assetsImagesPauseSvg,
	"assets/images/play.svg": assetsImagesPlaySvg,
	"assets/script/script.js": assetsScriptScriptJs,
	"assets/style/style.css": assetsStyleStyleCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"images": &bintree{nil, map[string]*bintree{
			"back.svg": &bintree{assetsImagesBackSvg, map[string]*bintree{}},
			"loader.svg": &bintree{assetsImagesLoaderSvg, map[string]*bintree{}},
			"magnet.svg": &bintree{assetsImagesMagnetSvg, map[string]*bintree{}},
			"pause.svg": &bintree{assetsImagesPauseSvg, map[string]*bintree{}},
			"play.svg": &bintree{assetsImagesPlaySvg, map[string]*bintree{}},
		}},
		"index.html": &bintree{assetsIndexHtml, map[string]*bintree{}},
		"script": &bintree{nil, map[string]*bintree{
			"script.js": &bintree{assetsScriptScriptJs, map[string]*bintree{}},
		}},
		"style": &bintree{nil, map[string]*bintree{
			"style.css": &bintree{assetsStyleStyleCss, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
