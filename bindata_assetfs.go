// Code generated by go-bindata.
// sources:
// assets/index.html
// assets/images/loader.svg
// assets/script/script.js
// assets/style/style.css
// DO NOT EDIT!

package main

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x51\x4b\x6e\xc3\x20\x10\x5d\x27\xa7\xa0\xac\x63\x93\x2c\x2a\x55\x15\xf8\x12\x3d\x01\x81\x97\x32\x2d\x60\x0b\x26\x4e\x72\xfb\xca\xc6\x52\xab\xae\xb2\x01\xde\x0f\xc4\x3c\xfd\xe2\x47\xc7\x8f\x09\x22\x70\x8a\xc3\x5e\xb7\x6d\xa7\x03\xac\x1f\xf6\xbb\x9d\x4e\x60\x2b\x5c\xb0\xa5\x82\x8d\xbc\xf2\xa5\x7b\x93\xbf\x42\xb6\x09\x46\xce\x84\xdb\x34\x16\x96\xc2\x8d\x99\x91\xd9\xc8\x1b\x79\x0e\xc6\x63\x26\x87\x6e\x05\x07\x41\x99\x98\x6c\xec\xaa\xb3\x11\xe6\xd4\x1f\x0f\x22\xd9\x3b\xa5\x6b\xfa\x4b\x5d\x2b\xca\x8a\xed\x39\xc2\xe4\xb1\xbd\xc6\xc4\x11\xc3\x07\xe0\x3f\x6d\xf1\xc8\x5a\x35\x66\xbf\x88\x91\xf2\xb7\x28\x88\x46\x56\x7e\x44\xd4\x00\xb0\x14\xa1\xe0\xb2\x31\x6a\x5d\x7b\x57\xab\x14\xcb\x6f\x8d\x64\xdc\x59\x2d\xb8\xdd\x50\x5d\xa1\x89\x45\x2d\xce\xc8\xc0\x3c\xd5\x77\xa5\x2e\xe7\x3e\x41\x15\x58\xc7\xdd\xe9\xb5\x3f\xf6\xc7\xfe\xab\xca\x41\xab\x66\x1e\x9e\xc9\xf9\x31\x3d\x95\x6d\xe7\x4d\xfd\x6f\xd5\x6a\x6b\x43\x9f\x47\xff\x58\xb3\x9e\x66\x41\xde\xc8\x6d\xde\x6d\x46\xca\xd3\xbc\xda\x9b\x4d\xab\x56\xe6\x4f\x00\x00\x00\xff\xff\x55\xab\x4e\xde\xe4\x01\x00\x00")

func assetsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsIndexHtml,
		"assets/index.html",
	)
}

func assetsIndexHtml() (*asset, error) {
	bytes, err := assetsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/index.html", size: 484, mode: os.FileMode(420), modTime: time.Unix(1511559486, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesLoaderSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\xcd\x41\x6e\xc3\x20\x14\x04\xd0\x3d\xa7\x18\xfd\x6e\x1d\x03\x69\x5a\xa1\x0a\x88\x7a\x80\x1e\xa2\x0d\x04\xa3\x12\xb0\x0c\x35\x3e\x7e\x65\xc9\x8b\xcc\xec\x66\xf1\x46\x5f\xb7\x47\xc2\xea\x97\x1a\x4b\x36\x24\x47\x41\xf0\xf9\x56\x5c\xcc\xc1\xd0\x5f\xbb\x9f\x14\xe1\x6a\x99\xae\x6b\xc0\xf6\x48\xb9\x1a\x9a\x5a\x9b\x3f\x38\xef\xbd\x8f\xfd\x75\x2c\x4b\xe0\x67\x21\x04\xaf\x6b\x20\x86\x3d\x4f\x9c\x24\xcb\x00\x3d\x7f\xb7\x09\xb5\x2d\xe5\xd7\x1b\x7a\x79\x7f\xfb\xb9\xb9\x0b\x1d\xc3\xa9\x47\xd7\x26\x43\x17\xc2\x3d\xa6\x64\x28\x97\xec\x0f\x09\x80\x33\xf4\x75\x1e\xa4\xc0\xa7\x1a\x14\x04\xe4\x5e\x31\x48\x45\xe0\x96\xe9\xfd\xd6\xb2\xff\x00\x00\x00\xff\xff\x24\x9c\x62\x4d\xc7\x00\x00\x00")

func assetsImagesLoaderSvgBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesLoaderSvg,
		"assets/images/loader.svg",
	)
}

func assetsImagesLoaderSvg() (*asset, error) {
	bytes, err := assetsImagesLoaderSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/loader.svg", size: 199, mode: os.FileMode(420), modTime: time.Unix(1511559486, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsScriptScriptJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x3c\x5d\x73\xdb\x38\x92\xef\xfe\x15\x3d\xba\xba\x90\xda\xc8\x8c\x3d\x57\xf7\x22\x8f\x2e\xe5\xaf\x6c\x7c\xeb\xc4\x29\xdb\xb9\xab\xa9\x54\x2a\x05\x91\x90\xc5\x18\x02\x34\x20\x18\x5b\xf1\xea\xbf\x6f\xe1\x8b\x04\x40\x52\xa2\x27\xce\x64\xf3\x32\xb1\x40\xa0\xbb\xd1\xe8\x2f\x74\x37\x26\x25\xa8\x28\xe0\x08\xad\xce\xe8\x8c\x01\xbe\x17\x98\x66\x05\x5c\x62\x94\x8a\xe4\x98\x2d\x96\x8c\x62\x2a\xe0\x61\x07\x20\x65\xb4\x10\xbc\x4c\x05\xe3\xf1\x92\xb3\x65\x31\x54\xc3\x00\x45\xb9\xc4\x76\xe8\x40\x8d\x88\x79\x5e\x24\x85\x40\x02\xc3\xc4\x4c\x02\x20\x0c\x65\x39\xbd\x19\x83\xe0\x25\x1e\x99\x41\xcc\x39\xe3\x63\xa0\x25\x21\x76\x28\xa7\x33\xa6\x47\xd4\xc0\xda\x01\xf9\x89\x30\x76\x5b\x2e\x61\xa2\x3e\xcb\x0f\xeb\x1d\x45\x99\xa1\xf3\xff\x73\x42\xde\xb0\x92\x8a\xd8\xd2\x16\x2e\xc3\x77\x72\xaf\xe7\xea\x77\xac\x3e\x2a\xba\x93\x3c\x1b\xe9\xb9\x53\xb4\x3a\x46\x84\x4c\x51\x7a\x9b\x4c\x73\x9a\xa9\x49\xc3\x61\x3b\xae\xf7\x74\xd1\x89\x2d\x49\x11\x4d\x31\x89\xeb\xa5\x1c\xd3\x0c\xf3\x6a\x72\x3e\x83\xb8\x66\x54\x62\xd8\x33\xac\xf8\xc5\xb1\x28\x39\x35\x47\x91\x72\x8c\x04\x3e\x25\x78\x81\xa9\x88\xcf\x19\xca\x30\x7f\x87\x28\x1e\x29\x4e\x18\xb6\xaf\x01\x93\x02\x87\x80\x15\x8b\x7b\x81\x35\x33\x00\x06\x59\xfe\x65\x30\xaa\x7e\x3e\x80\x92\x92\xb7\x68\x81\xc7\x30\x50\xf0\x76\x97\x88\xe2\x01\xac\xeb\x49\x21\x46\xf3\xc1\x27\xed\xc9\x88\x98\xa2\xd5\xae\x14\x14\x8f\x84\x8d\xe0\x00\x06\x04\x4d\x31\x71\x40\x76\x01\xdd\xa5\x68\xe1\x6f\xce\xdb\x9e\x9c\x92\xc8\x29\xd5\xe7\xe1\x77\xa0\xa1\xc0\x38\xc3\xbc\xd8\x42\x86\x99\xf5\x5d\x29\x21\x18\xa7\xf3\xed\xa4\xd8\x69\x7f\x86\x96\x69\x29\x04\xa3\x7d\x88\x41\x59\xb6\xdb\x32\x1b\x80\xd1\x63\x92\xa7\xb7\x63\x88\x87\x30\xf9\x1f\x70\x74\x9b\xd1\xc3\x2c\x8b\x43\x72\x17\xe8\x86\x62\xf1\xfe\xf2\x7c\xe8\x6f\x6b\x70\x98\x65\x70\xcd\x38\xc7\x54\x0c\xea\xbd\x04\xe2\x6c\x75\xda\x31\x17\xb1\x12\xfb\x91\xb2\x5f\x9e\x41\x28\xb0\xb8\x92\x78\xe3\x87\xda\x06\xce\x10\x29\xf0\xc8\x9a\x3f\x67\xe5\x58\xfd\x17\xd6\xc6\x6c\xac\x77\x94\xd9\x85\xcb\xd3\x57\x97\xa7\x57\xaf\x3f\x9d\xbd\xbd\x3e\xbd\xfc\xbf\xc3\x73\x98\xc0\x7f\xef\xed\xed\x1d\x98\xcf\x47\x87\xbf\x7f\xba\x3a\x3d\xbc\x3c\x7e\xfd\xe9\xe4\xf4\xfc\xf0\x77\x98\xc0\xbe\xfa\xbc\xa3\xed\xbb\xd9\xcf\x31\xc9\xdb\xac\xb9\x47\x2d\xa3\xc7\x73\x44\x6f\xa4\xe5\xd6\x9c\x54\xa4\x1e\xec\x38\x06\x2e\x63\x77\x54\xee\xa4\x70\x0c\xb1\xfd\x76\x83\x85\xc8\xe9\xcd\x79\x5e\x08\x98\xd8\xb5\xde\x67\xf9\x49\x5a\x45\xed\x3b\xb0\x38\xa3\x02\xf3\x2f\x88\xc4\xce\xc1\xd5\xf3\x46\x8d\xad\xd7\x06\xb5\xa2\xc3\xb3\xa9\xbf\x04\x44\x36\x4c\x5f\x4d\xf2\x7a\xc7\x19\x0e\x96\x25\x0b\xb4\x8c\xd9\xf4\xb3\xa4\xe9\x62\xfa\x19\xa7\x22\x41\x45\x91\xdf\xd0\xf8\x61\x3d\x02\x36\xfd\xec\x38\x85\x0c\x13\x2c\xb0\x61\x72\x3c\x47\xc5\xdc\xf7\x08\xc2\xb0\x1f\x11\x12\x47\x7a\x72\x34\x02\x35\xaf\x82\x51\x08\xc4\x45\x4f\x10\x6a\x6e\x0b\x04\xb6\xec\x0d\x80\x2d\x1b\xeb\x51\x96\xd9\xe5\x8e\x72\x68\x18\x9f\x52\x44\xc8\x11\x4a\x6f\x31\xcd\x0e\xdf\x9d\xc5\xd1\x0b\xb4\xcc\x5f\xa0\x2c\x7b\x59\x72\x32\x89\xe0\x39\x60\x9a\xb2\x0c\xbf\xbf\x3c\xab\xa2\x06\x07\x4a\x8d\xa4\x3e\xd9\xd0\x0d\x7a\xa2\xf3\xcf\x7f\x1a\xb2\x51\x2a\x72\x46\x8b\x77\x98\x4a\xc5\x89\x87\xe1\x69\xba\x07\xd9\x26\x81\x32\xd8\x38\xd8\xb0\x85\xea\xbc\xa3\x61\x22\xe6\x98\xc6\x19\x12\x48\x9e\xb9\x45\xb3\x45\xac\xdd\x0d\x74\xd3\xea\x53\x6b\xe9\x6d\xd3\x27\x89\x5e\x89\xde\xbd\x4b\x04\xc0\x7d\x22\xa1\x7f\x91\x6a\x79\x6f\x42\xab\x5f\x26\xb0\x77\x10\x4c\x60\xd4\x60\x0f\xa9\xac\xc4\xfc\xbe\xa2\x61\x68\xff\x2a\xb0\xb8\xce\x17\x98\x95\x22\xf6\x4c\xc0\x08\xf6\xac\xbd\x1b\x26\x29\x12\xe9\x3c\xc6\x8f\x62\xcd\x8b\x17\x70\x7d\x71\x72\x31\x86\x05\x5a\x4d\x31\xcc\x11\xcd\x08\xd6\xd6\x0e\xe6\x98\xe3\x24\x49\xcc\x4c\x69\x8e\x18\xc1\x89\xe0\x28\xc5\x31\xae\xd0\xd6\x72\x13\x32\xd7\x50\xd1\xae\xbc\xf0\xec\x59\x43\x9f\x67\x32\x9a\x53\x5c\x0d\x58\xe5\x20\x71\x95\x44\x8a\x8b\x51\x11\x83\x6b\xc6\x38\xc4\x04\x0b\xc8\x41\xb2\x1e\x72\xf8\xad\x81\x85\x60\x7a\x23\xe6\x07\xf0\xfc\x79\x5e\x1f\xbf\x5c\x93\x11\x29\x8d\xfe\xec\x0f\xf9\x47\x57\x8a\x32\x92\x48\x74\x30\x99\x28\xb4\x72\x13\xbf\x64\x24\x20\xd6\x91\x89\xf0\x9b\x27\xee\xdd\x22\x2f\xb5\x55\x7e\x80\xe7\x10\xbd\x94\x88\xba\xf4\x57\xed\xdd\xa8\x85\x36\xce\x0f\x8e\xa3\x6c\xc1\x1e\x48\x5c\x1f\xc9\x0a\x24\xc9\x3a\x07\xfb\xa1\x12\xbc\x3f\x83\xbf\x96\xf0\xb5\xe3\xb5\xd7\xd6\x29\x1e\xa1\xd5\x15\x46\x3c\x9d\x37\x1c\xe2\x1f\x25\xe6\xab\x11\xa4\x53\xcf\x84\xaa\x51\x98\x80\xfa\xd7\x75\x6a\xe9\x14\x26\x90\x4e\xf5\xd0\x8b\x17\x70\x82\x09\x5a\x81\x98\x63\xe0\xf8\x8f\x12\x17\x02\x0a\x06\x62\x8e\x04\xdc\x61\xc8\x18\x8d\x04\x14\x4b\xb4\x50\x33\xa6\x68\x65\x97\xdd\xcd\x73\x82\xd5\x60\x59\x60\x0e\x62\xb5\xc4\x05\xb0\x52\x00\x82\x42\xd3\xa9\x30\x27\x2e\x66\x44\x88\x61\x30\x4c\x5c\x6e\xfb\xec\x6a\x9b\x5c\x7b\xc1\x2e\x39\x99\xa2\x95\xc6\xfb\x52\xe1\xed\x92\x12\xf5\xd1\x8a\x89\x71\x98\x0f\xfe\xb5\xe0\x53\x3a\x8d\xd5\x15\x4f\xf9\xcd\xda\x00\x59\xa3\xc2\x79\xc7\x22\xcc\xb9\x77\xc3\xa9\xcf\x74\x3d\x6a\x04\x3d\xce\x25\xcd\x5c\xbd\x1a\x2e\xc6\x61\x41\xad\x48\x29\xc1\x88\x7b\x62\xea\xcd\x6b\x7a\x18\x75\xde\xf1\xfd\x08\x56\x8a\xcb\xf5\x5d\xb4\x12\xad\x63\x45\x00\x9a\x12\x2c\x4d\x49\x43\xbe\x4a\x4e\x1a\xd2\xe5\x4b\x51\x78\x22\x25\x27\xed\x1c\xee\xe4\x6f\x17\x77\x3b\x79\xbb\xee\xe4\x5f\xdf\x5d\x57\x37\xeb\x2a\x8f\xb0\x85\x0f\xf2\xd6\x5d\xb3\x41\xe7\x11\x2a\xd9\xd3\xd7\xe8\x97\x79\xd6\x25\x78\x79\x36\x54\xcb\x03\x2a\xa4\x09\x79\x95\x13\x5c\xf4\xa5\x42\x9a\xb9\x2e\x3a\x66\x12\xd0\x76\x23\xe9\xd3\x31\x2b\xa9\x32\x4c\xad\xa7\xa8\x90\x18\xaf\x35\xc3\xf2\x80\xea\xb3\xe5\xb8\x58\xd6\x67\xa5\x82\x59\x39\x94\xb0\xdb\x46\x10\xfb\x8e\xb3\x45\x5e\xe0\x84\x63\x19\x9a\xc6\x14\xdf\xc1\xa9\xf4\xab\x71\x64\x6d\xce\x0c\xe5\x04\x67\xd1\x70\xd8\x12\xeb\x2a\xa8\x9f\x0b\x46\x4d\x7a\xa2\x4d\xb6\x24\x7a\x36\xfd\x2c\x5d\xd2\xc5\x1d\x7d\xc7\xd9\x12\x73\xb1\x8a\x23\xe5\xbe\xa3\x46\x20\x16\x52\xc4\xa6\x9f\x3f\x98\xb9\x1f\xdb\x48\xf8\x44\xd8\x1d\xe6\x29\x2a\xf0\xc5\xf4\x73\x6c\xe5\x56\x0a\xa1\xc7\xc1\xc6\x2c\x85\x56\xd2\x76\xc8\x39\x5a\x25\x79\xa1\xfe\x55\x9f\x82\x98\x40\x12\x2f\x23\x29\x0f\x86\x39\x25\xed\x93\x39\x2e\x4a\x22\x8d\xe1\x83\xca\x32\x99\x30\xff\x16\xaf\x0a\x05\x2f\x99\x31\x7e\x8a\xd2\x79\x7c\xeb\x73\xe5\x56\x7a\xe8\xe8\xec\x24\x72\x79\x20\x21\x25\x79\x06\x13\x89\xf7\xc3\xed\xc7\x8e\xbc\x87\x9c\xf6\xe1\xf6\xc3\xde\xc7\x44\xb0\x73\x49\xd7\x31\x2a\x70\x3c\x84\xe7\x70\x9b\x14\xe5\xb4\x10\x3c\xde\x1f\x7e\x0c\xa1\xec\x58\xf5\xac\xcf\xaf\x24\x42\xb2\x4a\xcb\xfc\x89\x89\x28\x1e\x95\xc4\xf3\xe5\xbd\x35\x75\x07\x4a\xfe\xcf\xbd\xcc\x9d\x1e\x3b\x75\x12\x77\x7a\x44\xff\xf0\xf2\x75\x72\xfc\x12\xff\xf1\xd8\x7c\x9d\xb3\x0c\xdf\xd5\xfa\xec\xe6\xeb\x6c\x08\x95\x68\xe5\xad\x96\x15\xdf\x98\xbc\x33\xa8\xb7\x26\xef\xf4\xb5\xbb\x8e\xe9\x7c\xaa\x0e\x5c\x31\xdc\x90\xfb\xf0\x52\x5c\x7e\xc2\xc3\x82\x0a\xb3\x5c\x9b\x53\x66\x42\x1a\xb9\xce\xa4\x99\x07\x73\x57\xcf\x7d\x4c\xfe\x4c\x4c\x59\xb6\xf2\xd2\x2e\x6e\xde\xb6\x07\x04\x09\x83\x07\x79\x9b\x10\x44\x0f\x20\x12\x4c\x16\x80\x69\x03\x04\x30\x90\x3b\x1f\x78\x83\xc3\xef\x86\x2c\x23\x7e\x56\x10\x9c\xbc\x51\x03\xf3\xbf\x1d\xa7\xde\x71\x76\xc3\x71\x51\xfc\x55\xdc\x8a\xf7\xf7\xf6\xe0\x6f\x92\x69\x52\x2b\x09\x16\x38\x3b\x5a\x09\x5c\xc0\x0b\x39\x56\xe4\x5f\xb1\xfa\x39\x4c\x04\x7b\x95\xdf\xe3\x2c\xfe\x55\x1a\xc9\xe8\x3f\xa3\x9f\x94\xbf\x57\xf9\xd7\xbf\x4c\x12\x67\x8c\x2f\x90\x90\x18\x63\x8f\x97\x3f\x29\xeb\x8e\xad\x80\xfc\x18\xfe\xf9\xf2\xf9\xb3\x32\xf1\xe4\x1c\x2e\x91\xf8\x8b\x45\x50\x62\x94\x2c\xb4\x9e\x47\xfe\xfe\x59\x19\xf8\xfe\x47\x32\xb0\x5c\xfe\xf4\xec\x53\x3b\xf8\x51\x3a\xac\xf9\x77\xcd\x04\x22\x1b\x18\xb8\x13\xfe\x35\xec\x17\x76\x6d\xa8\x54\x46\x55\xd0\x65\x12\x98\xf2\x1a\x19\x37\x72\x57\x2f\x21\xaa\xca\x19\xbb\x33\xce\xbe\x62\x1a\xc1\x18\xa2\xc8\xab\x4e\x99\x65\x5f\x30\xbc\xfc\xf6\x92\x5a\x40\x58\x55\x55\xab\x2b\x69\x5e\x0d\xed\x4a\xb0\x65\x50\x29\x93\x43\x4e\x89\x0c\xc6\x3f\x80\x28\xc4\x45\x83\x2a\xc4\xdd\xca\xdd\x13\x56\x21\x2b\xea\x74\x0d\x67\x1b\x75\x27\x6a\x56\x40\x9e\x1e\x6c\xa9\x2c\xda\x59\xf5\x5d\xc6\xd2\xa8\xa7\xd4\x77\x11\xff\x63\x7b\x3b\x81\x9a\xf3\x84\x55\xff\x5a\x38\x25\xe0\xae\xca\xbf\xfa\x58\x97\x2f\xb6\x31\x1c\x05\xbc\xbe\xc5\xab\x31\xdc\x27\x24\xa7\xb7\x23\x98\x73\x3c\xb3\xbf\x7c\x1e\xde\x27\x4b\x24\xe6\x35\x07\xc3\xe2\x6c\x6b\x1b\x44\x7d\x6b\xfd\x6e\x5c\xd9\x55\xe9\x8e\x8d\xbc\x39\xfd\xfe\xad\x11\x01\x4d\xa6\xe4\xbc\xf5\xa2\xa7\x7b\x4a\x4c\x46\x30\xa0\xd0\x13\xbc\xb0\xde\xed\x49\x5a\x58\xf0\xf6\xf3\x07\xa6\xea\xed\x26\x10\x5c\x20\x63\xfd\x8f\x53\xfc\xae\x13\x41\x8e\x39\x9f\xaa\x30\xac\x4e\x67\x40\x51\xce\x66\xf9\x3d\x2e\x60\x02\x1f\x22\xf8\xc7\x51\x34\x82\x08\xde\xe8\x7f\xfe\xae\xff\xb9\x3e\x8a\x54\x2e\xa5\xad\x84\x63\x97\xb7\xd5\x6e\x5c\x04\x30\xa9\xa6\x56\x85\x1b\xf3\x3d\xff\x8a\x61\x02\x53\x73\x7f\x79\x83\xc4\x3c\x59\xb2\xbb\x78\x7f\x6f\x04\xff\x05\x7f\x83\x38\x87\xe7\xb0\x6f\x33\x71\x52\x30\xd5\x8a\xdf\x60\x7f\xaf\x21\x8c\xf2\x8b\x7f\xe7\xd1\x48\x1b\xb2\x5d\x81\xd8\x02\x63\xbf\x17\x8c\x26\x10\xb5\x0b\xce\x4a\x9a\xa9\x69\x0d\x28\x26\x8f\x66\x66\xeb\xbd\x3f\x87\x48\xff\x15\x1d\xb4\x9c\x9e\x0a\x66\xb8\x8c\x61\xbc\x24\x68\x7d\xb2\xfa\xdb\x73\x88\x5e\x14\x38\x55\x20\x2a\x08\x36\xc3\xa5\x0a\x44\x4e\xfb\x99\xdc\x85\x9f\x7c\xb1\xe7\x08\x93\xc9\x04\xf6\x82\x9c\x60\xff\x64\x4c\x9e\x8d\x61\x40\xd9\x6e\x05\xb6\x77\x12\x66\xbe\xef\xe8\xa6\x1f\x9a\x0c\xde\xb2\x6a\x27\xd5\x4d\xdb\x33\xef\x3a\x31\x49\x74\x31\x35\xdc\x98\x34\xac\x19\xa9\x93\x91\x1b\x36\x65\xb1\x9c\x52\xc1\x57\x23\x78\xa8\xa2\x8b\x31\x64\x15\x41\xca\xde\x9a\xaa\xa3\x1d\x0b\xfa\x68\xac\x2f\x53\x83\xb6\x42\x39\xb4\x2a\x3a\x4c\x38\xfe\x82\x79\x81\x63\x37\x3b\xd9\xc9\x9e\x01\xb3\x0d\x47\x86\xbf\x4d\xe6\xca\x9d\xef\x28\x6e\xb8\xf2\xe3\xed\xc6\x3d\xfe\xad\x18\x49\x5e\x61\x6c\x8b\xca\x54\x34\xa6\xf7\xd8\x37\x20\x6b\x30\xca\x63\x91\xdd\x47\x1b\x45\x5a\xc2\xba\xe2\x43\xe5\x25\x76\x1d\x82\xaa\x1c\x67\x15\xf3\x45\xfa\x2f\x45\x48\x4e\xcd\x0f\x79\x18\xdd\x38\xad\x70\xfb\xdd\x5e\x1d\x1e\x23\xe8\x7b\x0b\xc8\xa8\x92\x5b\x3d\xd0\xf5\x48\x6c\xca\xfd\xf6\x57\xaa\xb0\x5b\xad\x0b\x68\xfe\xd5\xcf\x69\x3a\xd6\x25\xd8\x4e\x23\x2d\xd2\x33\xd8\xef\x49\x89\xbe\x71\xf4\xa4\xa5\xe5\x7a\x32\xec\x38\x05\x23\x0c\xcf\x9e\x3d\x0d\x99\xd2\xe4\xb6\x10\xa9\x4c\x75\x80\xb9\xed\x12\x6f\x6c\x97\xd5\xd8\x4a\x61\x75\x34\xf1\x28\x4d\xad\x45\xc6\x27\x55\x5d\x1b\xeb\xa8\x6a\x60\xa2\x89\x41\xd3\x4a\xd4\x6d\xb1\x4f\x88\xd8\xef\x74\xed\x13\x39\x29\xaa\x74\x60\x70\x75\x7d\x78\x7d\xfa\xe9\x1f\xa7\xbf\x5f\xa9\xd8\x24\x2d\x55\x7b\x89\xee\x3a\x90\x71\x89\x19\xb0\xe6\xed\x35\x2a\xdc\xe1\x23\xb4\x3a\x3b\x91\x71\x8b\xa9\xf2\x5c\x32\x26\x9e\xb0\xba\x93\xd3\x5c\xe4\x88\xa8\x50\xed\x15\x67\x0b\x89\xdd\x4e\xbc\xcb\x69\xc6\xee\x12\x46\x97\x6c\x69\xe7\x3b\xfd\x79\xba\x93\xe7\x1d\x5b\xea\x38\xcf\x85\x9e\xea\x1e\xc3\x47\x96\x7c\xea\x55\xf8\xce\xef\x56\x6c\x01\xde\xec\x51\x0c\xc3\xce\xca\xaf\x8c\xbd\x75\x6e\xc3\xa0\x53\xee\x0e\x77\xd3\x1a\xcb\x72\xc6\x44\xc0\x2a\xa7\xb0\xa4\xc8\xd1\xe7\x6a\x1a\x22\xfc\x00\x52\x2e\xbc\x98\x7e\xae\x4a\x8d\xe0\x88\x86\x5f\x66\xb4\x53\x3f\xdc\x7e\xb4\xc5\x25\x35\xf4\xe1\xd6\x96\x51\xed\x8c\xc4\x13\x27\xbf\x31\x25\xb8\xfc\xf8\x33\x9f\x3d\x03\x8f\x46\x80\x79\x5e\x08\xc6\x57\x09\xc7\x4b\x82\x52\x6c\xd8\xb8\x1e\x59\x39\x10\xb9\x20\x78\x04\xd1\x7f\x48\xf7\xf4\xbf\x57\x17\x6f\x93\x42\xf0\x9c\xde\xe4\xb3\x55\x6c\xc9\x19\xb6\xdf\x67\x2c\xe8\x65\x59\xcc\xbf\x0d\x6e\xeb\x05\xc3\xdb\xd9\x58\xef\xcb\x3d\xdb\x62\xce\xee\xac\x7a\x79\x5d\x91\xfa\x60\xca\x65\x66\x4b\x9d\x2d\xba\x38\xd6\x7d\x58\x6e\x49\x53\x6e\xe3\xb5\xde\x92\x26\x41\x43\xf0\xf4\xcb\x52\xe7\xb7\x8d\xe2\xc5\x52\x98\x35\xc3\x91\x41\x3c\xf4\x09\x3d\x42\xab\x38\xcf\xb6\x51\xa8\xcc\xc2\x18\xf2\xec\xaf\x21\x0c\xdf\xe7\x42\xd9\xd4\x76\xbd\x70\x57\x0f\x37\xd1\xf3\xb0\xee\xdd\x30\x6b\xd5\xb5\x39\xcb\x41\x50\xd3\xe5\x76\xb0\xbe\xbf\x3c\x0f\x8a\xb4\x25\x27\x3a\x94\x5e\x2c\x45\x1c\xbd\x51\x3d\xa9\xf0\xfe\xf2\x3c\x72\xae\x63\x55\x63\x46\x48\x82\xd3\x13\x2b\xe7\x04\xf7\x61\x94\x65\xd2\x1a\xc8\x63\x73\x20\x6c\x5d\xdf\x45\x7e\x83\x65\x4a\x05\x2c\xd8\x6f\x53\xa4\xe1\x96\x52\x76\x8a\xe8\xe9\x7d\x2e\x3c\x93\x13\x98\x0d\xdb\x93\xeb\x7d\x73\xd5\xa5\x7d\x86\x12\xd7\x3f\x55\x11\x77\xef\x4e\x9a\xa9\x8c\x0a\x4c\x0d\xdb\x36\x45\x6b\xd7\x6c\x79\x84\xb8\x0c\xb5\x0b\x63\x18\xba\x76\x55\x07\x3e\x86\x03\x63\xfb\x47\xfd\x85\x99\x0f\x8e\xaf\xa9\x4f\xcf\x9d\xa6\x41\x6a\xdf\x34\x86\xa2\x9a\xed\xb9\x87\xc2\x5b\x72\x98\x65\x1e\xe0\x4a\x84\xd7\x61\xd6\xcf\xdb\x7c\xa3\xdf\x5d\x6f\xad\xbb\xe9\xfd\x31\xcf\x88\x36\x39\x8f\x5e\x80\x0d\x6b\xa1\xe9\x88\x03\x32\x6b\x4e\x28\xc3\xdd\xe7\x98\xcc\x3d\xeb\xa4\xba\xce\xea\x96\x59\x1b\x03\x34\xcc\x7d\x63\xe5\x11\x5a\x29\xe3\xe9\x2e\xb1\x86\x77\xbd\x31\x85\xd8\x22\xf2\x4e\x17\xa1\x52\xa3\xaa\xa3\xa8\x6d\xb7\x4e\x0b\x72\xd8\x18\x0e\xf7\xb6\xf5\xb7\x4d\x01\x5d\x8c\xcd\xf6\x6d\x49\xa5\xc6\xdb\x6c\x38\xdf\x98\x1b\x38\xa3\x33\xe6\xa7\x06\x34\x18\x37\xd7\x6a\x72\xec\x9e\x8c\x1a\xdb\xe6\xbd\x58\x30\x0d\x50\x01\xcb\xf5\x7a\xb6\x6c\x5f\x5e\x3f\x57\xe8\x5e\xad\xd3\xe5\xde\x7a\xdf\x2d\xb8\x4b\xdd\x8e\x5f\x3f\x0a\xe9\x97\x57\x6d\x64\x56\x7b\xbe\x7d\x03\x18\x58\x9e\x42\xc6\x70\x01\x54\x05\xea\x79\x21\x12\x27\xd1\x1f\x34\x23\x6f\x12\x31\x65\x33\x7b\xa9\x9a\x79\xb9\x39\x32\x19\x95\x0e\x50\x0d\x8b\x53\xba\x06\xa7\xf2\x61\x0d\x05\xe8\x41\x80\x9b\x98\x7b\x94\xc6\x57\xf9\x93\x2d\x0a\x5c\xd3\xd4\x48\x0a\xb7\xdf\x60\x14\xd5\x5e\x7b\x5f\x4b\xec\xae\xd3\x55\x4a\x74\xda\x9e\x33\x35\xfa\xec\x6a\xa4\x2d\xc0\x9a\x18\xdd\xa8\xe8\xc0\xa4\x29\x09\x4b\x91\x84\xa0\x64\xd5\x26\x29\x7f\x83\x5f\x83\x14\xa5\xc5\xa9\x37\x2c\xf8\xca\x7c\xf6\x83\x36\xa3\xa9\xda\xd7\x2f\x11\x2f\x70\x00\xbf\x6a\x26\x34\x9e\x1f\x54\x37\x30\xc4\x32\x9e\x58\x6f\xde\xa1\x4b\x7c\x73\x6b\xfa\x02\xd3\x75\x7d\xb1\x1d\x8e\x1f\x0d\x33\xdb\xbb\x16\x77\x4c\xd8\x82\xb2\xec\xf4\x0b\xa6\xaa\xed\x1f\x53\xcc\xe3\x48\x25\xe5\x46\x50\xd1\x62\x28\x50\x92\x77\x72\xf1\x26\x31\xc1\x4b\x9b\x24\xca\xeb\xb1\x71\x64\x23\xc8\x58\x5a\xca\xd1\xe4\x06\x0b\x33\xe1\x68\x75\x96\xc5\x91\x71\xa3\xaa\x2f\x56\x4a\x96\xbe\x5a\x9b\x10\xe7\x7b\xbe\x7f\x9e\xa2\xd5\xa5\x62\x40\xe1\xbf\x77\x9e\xa2\xd5\x79\xdb\xd3\xe8\x29\x5a\x39\x4d\x96\x5a\x03\x1c\xf0\xd3\xea\xf5\xc2\x23\xaf\xda\xde\x42\xfd\x1e\xda\x44\x26\x4e\xf1\xd2\xbc\x80\x78\xa2\x27\xd1\x15\xca\x66\x5f\xa5\xb7\xf8\x12\xa7\x38\xff\x82\xdf\x49\x12\x7c\x1e\xd7\x69\x7e\x7d\xc3\xfb\xc5\xfa\xc9\x1a\x74\x70\xa5\xdd\x80\x18\x5a\xee\x91\x8d\xd3\x69\x9e\x4b\x70\x22\x8e\xb3\xd9\xc2\xd7\x47\xb1\xd4\xb9\x5e\xb4\xf7\x9c\x3a\xd6\x6a\x96\x13\x81\x79\x55\x50\x68\x6b\x90\x2d\x46\x10\x1e\xab\x41\xa3\x1e\x25\xd9\xbc\x3a\xc1\x0b\xf5\xfa\xcc\x2b\x35\xc4\xd9\x08\x72\xef\x21\xc9\xd6\x98\x4f\x2a\x72\x4e\x6f\xa4\x23\xd8\xf4\x20\xd7\x0b\xe1\xe2\x2c\x74\xfc\xaa\x2e\x11\x65\x44\x65\xc3\xf3\x11\x50\xe5\x7d\x75\x06\xba\x76\x07\x41\xf1\xc1\xbc\xa1\x72\x77\x54\x57\x82\xc0\xa9\x6f\x85\x9b\xee\xde\xcd\xa9\x34\x84\x23\x5b\x98\x1e\x64\x64\x57\x99\xc6\x81\xe7\x92\x34\x27\xa5\x6c\x6c\x85\x67\xe4\xa9\x86\x38\x45\x2b\xa7\x40\x3b\xac\x6b\x8a\x8c\xe0\x84\xb0\x9b\x38\x5a\x31\xc6\x58\x34\x72\x7d\xa9\x15\xc3\x61\x6b\xaa\xa7\x16\xe4\xa1\x6b\x7a\x2c\x71\xad\x33\xf5\x69\xf3\xf0\xb4\x9f\xf8\xbc\x65\x88\xc1\x93\x3c\xf3\x22\x3c\x7d\xd4\x92\x0f\xde\x59\x73\xff\xac\xc3\x70\xd7\x6e\xa8\xb5\xd4\x17\xec\xb8\xf7\xf1\x4a\x22\x82\xf3\xdd\x1c\xac\x55\x07\xd1\xc6\xe8\x0d\x68\x75\xc9\xdb\x43\xab\x1a\x07\x46\xb0\xc0\x45\x81\xe4\xdd\xb1\x05\x4b\x20\x74\x3d\xee\xd2\xac\xab\xe0\xa3\x2f\xc5\xbb\xda\x1f\x6f\xab\xc1\x68\xa2\x5f\xe3\x40\x74\xe7\x7a\x60\x77\x7f\x30\x02\x81\xef\xc5\x18\x06\x67\x54\xbd\x5e\xd3\xf1\xfd\xa0\x2a\x4b\x05\x1a\xf7\x0d\xb8\x7e\xad\x71\x5d\x50\xfb\x7c\xce\x45\x64\xf9\x1f\x5c\x9d\x5b\x5e\xe9\x73\x5f\x47\xf4\x9b\xd4\x89\xf9\xf7\xd9\x33\xfd\x47\x22\xd8\x95\x4a\xa3\xc4\xad\x69\x34\xdf\x6b\x18\x88\xbe\xe3\x30\x1d\x0f\xb5\xe7\xc0\xce\x51\xfa\xc1\xac\xb7\xf7\x27\x29\x60\x98\x63\x36\xdc\xab\x8e\x59\x2b\xa5\xe4\x63\xb3\x84\xe2\x69\xf5\x53\x12\x41\x34\x48\xb7\x57\xaa\xb5\x6e\xaa\x07\x4d\xa9\xb1\x95\x38\xa5\xb5\xf1\xd3\x50\x65\xd5\xdd\x94\x96\xde\x32\x7b\x8a\x2d\xd5\x25\xcf\x84\x3f\x11\xfe\xb0\x39\xa7\x77\x79\xa9\xc1\x14\xf5\xf6\xeb\x09\xcf\xcb\x6f\x65\xd2\xa7\x62\xac\x53\x93\x86\x30\x0e\x71\x82\x0f\x27\x2a\xf3\xde\xcf\xfa\xcf\x9f\x9c\x4b\x82\x9b\x2d\x91\x50\xed\x93\x6d\x29\x12\xfe\xa2\x24\xa7\x29\x29\x33\x5c\xd8\x27\xa8\xff\x96\x37\x0b\x9d\x8a\x7c\xd2\x47\x59\xfa\x88\x5e\xb1\xb4\x2c\x70\x66\x6c\x8c\xbe\x1b\xb4\x85\x8d\xdf\xf2\x0c\x29\x12\x6c\xb9\x3b\x45\x5c\x75\x25\x18\xe3\xa7\x42\xdc\x97\x10\x81\x60\xcb\x29\xe2\xbb\x7a\x24\xa7\x37\x8d\x86\x55\x27\x04\xb0\xe9\xe5\xad\x65\xeb\x46\x0f\xa6\x2f\x9d\x86\x9e\x5d\x7c\x9f\x8b\x6d\xed\x97\x0a\xa1\x93\xa5\x19\xfc\x9d\xc1\x6b\x56\xbf\x07\xea\x59\xef\xef\x49\x91\xfb\x3f\xa6\xe9\x20\xe8\x30\xcb\x3c\x7a\xe4\xef\xba\x1e\xd1\x8b\xac\x41\x4e\x97\xa5\x08\x9b\x48\x2a\x22\x8c\xf2\x4e\xd9\xfd\xc0\x4d\xb4\x28\x51\x19\x77\xd4\x4a\x03\x69\x92\x57\x1d\xc7\xa3\xca\xe5\x47\xa4\xe4\x3d\x57\x1b\x59\xf4\xb3\xae\x26\x1f\x8e\x1b\x61\xa1\x9b\x2f\x8f\x71\x22\x10\xbf\xc1\x22\xf9\x82\x48\x89\x1d\x08\xea\xb7\xc7\xca\xa2\x2a\x48\x44\x51\x3d\x4f\x95\x2e\xe7\x8c\x64\x98\x8f\x61\xa0\x61\x0f\x82\x3c\xfa\x7a\xe7\x5f\x01\x00\x00\xff\xff\xe0\xff\xd3\xe0\xf1\x4c\x00\x00")

func assetsScriptScriptJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsScriptScriptJs,
		"assets/script/script.js",
	)
}

func assetsScriptScriptJs() (*asset, error) {
	bytes, err := assetsScriptScriptJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/script/script.js", size: 19697, mode: os.FileMode(420), modTime: time.Unix(1511576680, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsStyleStyleCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5a\xcd\x6e\xdb\x38\x10\xbe\xfb\x29\x08\x14\x8b\xa4\x45\xe8\xc8\x8d\x9d\xb6\xca\x65\x0f\x3d\x16\xdb\xc3\xee\x3e\x00\x25\x8d\x6c\x22\x12\x29\x90\x54\x62\x77\xe1\x77\x5f\x88\x14\xf5\xff\x67\x45\x5d\x2f\x8a\x00\x81\x28\x92\x33\xdf\xfc\x70\x38\x33\xb2\xc7\x83\x13\xfa\x67\x85\x50\xc8\x99\xc2\x21\x89\x69\x74\x72\x91\x24\x4c\x62\x09\x82\x86\x4f\x2b\x84\x3c\xe2\x3f\xef\x05\x4f\x59\x80\x7d\x1e\x71\xe1\xa2\x77\xc1\x2e\xfb\x7b\x5a\x9d\x57\x6b\xff\x40\x04\x7e\x15\x24\x49\x20\xd0\x94\x5e\xb9\x08\xf4\x0b\x17\x79\x02\xc8\x33\xce\x5e\x3c\xd9\x09\xfd\xca\xce\x90\x28\xd2\x34\x22\x4e\x02\x10\x7a\x77\x40\x65\x12\x91\x93\x8b\xbc\x88\xfb\xcf\x7a\x1b\x0d\xd4\xc1\x45\x1f\x9d\xe4\x98\x0d\x0f\x40\xf7\x07\x55\x8e\x73\x48\x4a\x10\x26\x13\x22\x80\xa9\x27\x2b\x8e\xa4\x3f\xc0\x45\x4e\x43\x06\x1a\x93\x3d\xb8\x28\x15\xd1\xed\x7a\x7d\xaf\x47\xf2\xde\x20\x58\xcb\x97\xfd\xfb\xc6\x72\x43\x64\xe3\x38\xbf\xe9\x7f\xd9\x2c\x61\x34\x26\x8a\x72\x86\x19\x89\xc1\x45\x82\x2b\xa2\xa0\x3e\x13\xa4\x42\x3f\xb8\x68\x23\xeb\x33\x54\x81\x99\xc2\x3e\x4f\x99\x72\x11\x65\x21\x65\xb4\x49\x40\xd1\x98\xb2\x3d\x0e\x53\xe6\x1b\x3a\x11\x65\x40\x44\xa6\xaf\xdf\x9f\xe1\x14\x0a\x12\x83\xcc\x59\x1b\x0b\x0a\x1e\xeb\x07\x64\x94\x11\x72\x11\x5b\x6c\xb7\x4e\x00\x46\xb2\xf3\x0a\x21\xc5\x7b\xd7\x3d\x3c\x56\x56\x9e\x57\x5e\xaa\x14\x67\x7a\xb5\xd5\xfb\xc3\xa3\xd1\x7b\x06\x07\x37\x5f\x7a\x5c\x04\x20\x5c\xc4\x38\xd3\xe2\x24\x24\x08\x28\xdb\xbb\xc8\x29\xec\x55\xb1\xcc\xe6\x73\xcd\x84\xaf\x87\x5c\x09\x1d\x0e\xf7\xe5\xcb\x17\xbd\x32\x15\x32\x1b\x27\x9c\x32\x05\x5a\x19\x06\xa2\x7b\xe0\x2f\xb9\x07\x75\xec\xfe\xf4\xe9\x93\xf1\x55\xce\x14\x30\x85\x13\xc2\xa0\x67\x6d\x01\x22\xe1\x92\x1a\xc5\x13\x4f\xf2\x28\x35\x6f\x15\x4f\x5c\xb4\xdb\x1a\xdc\x31\x11\x7b\xca\xb0\xc7\x95\xe2\x71\xe6\x23\x56\x09\xc7\x4c\x40\x2d\xb7\x51\x08\xf6\xf8\x51\x1b\x2e\x86\x80\x12\x74\x1b\x93\x23\xce\xdd\xfa\x31\xdb\xf5\x5e\x83\x69\xc3\x2b\x9c\xdf\x27\x91\x7f\xab\x7d\x10\x23\xad\x49\x6d\x21\x84\x22\x08\x55\xc9\xf8\x5c\x65\x41\xd9\x65\x2c\x1e\x9d\x9c\x8a\xa5\xaa\x79\xee\x0c\xcb\x07\xc7\xf2\x3c\x97\xe7\xf5\x4a\x6a\x2c\x5d\xf1\x51\xaf\x1c\x55\x6b\x13\xed\xf2\x5a\xed\xe5\x30\x57\xa9\xd5\x88\x38\xa0\x41\x7b\xa6\xda\xb4\x37\x86\xf4\x79\xb5\x06\x21\xf8\xf5\x4c\x75\xe9\x65\x50\x09\x19\x99\x70\x05\x07\x05\x47\x85\x49\x44\xf7\xcc\x45\x3e\x98\xb3\x5f\x04\x0e\x01\xc1\x04\x37\x68\x28\x62\x79\x2f\xe8\x63\x70\x91\x13\x50\xa9\xf4\xee\xec\x01\x4b\x75\x8a\x00\xab\x53\x02\x65\x48\x35\x26\xc8\xaf\xb5\x32\xbe\x6a\x5b\x27\x44\x4a\xfa\x02\x58\x6f\xa6\x0a\xe2\x86\x03\x09\x88\x88\xa2\x2f\x30\x62\x33\x03\xdb\xdc\x76\x5d\x54\x5d\xc6\xd5\xad\x1b\x11\xa9\xb0\x7f\xa0\x51\x60\xe4\x2f\x88\xe4\xbe\x91\x1c\x91\xe4\x11\x0d\x6a\xd9\xc2\xb2\xc8\x16\x45\x34\x7c\x85\x84\x4e\xf6\xd7\x73\x07\x55\xc4\xfa\x90\x0b\xa6\xe7\x30\xbc\x00\x53\xd2\x1a\xef\xbc\x7a\x17\xf0\x57\x96\x9d\x6d\x79\x8d\xc3\x38\xc7\xa7\x86\x0f\x55\x43\x9e\xc5\xcf\x54\x1f\xfd\x0b\x8e\x54\x85\xc4\xda\x3e\xbe\xdd\xf9\x2a\x6a\xda\xd8\x38\x65\xfe\x3d\xe4\x97\x52\x17\xdf\xf9\x6e\xda\x49\x6d\xbe\xc3\x76\x2a\x65\xb2\xeb\x96\x5b\x8a\x27\x2c\x8b\x3c\x74\xc0\x73\xab\x56\xda\xe5\x36\xaa\xbb\x44\xa1\xe4\x7a\xb2\xbf\x19\x50\x6a\x13\x04\x26\x7e\x66\xcc\x9f\x8c\xa5\x4b\xe7\x7b\x01\xc0\x26\xc3\xa4\xec\x6a\x40\xdf\x79\x9e\x37\x01\x67\x56\xdd\xcc\x2a\xe9\xf2\x2c\xff\xb5\xc8\xd3\x1c\x13\x65\x8a\x10\x62\x23\xf8\x04\x45\x99\x93\x9f\xc7\x3a\x13\xff\x26\xfb\x82\xac\x8e\xe9\x0f\xb8\xbb\x74\x93\x20\xea\xf2\x4d\x69\x52\xc4\x98\x1c\xb6\xa8\x1b\x44\x07\x79\x2c\x13\xe2\xeb\x18\x9c\x29\xf6\xa9\x5a\xfa\x52\xa6\x8b\xab\xbc\x02\x9e\x25\xa9\xeb\x7a\x10\x72\x31\x4f\xe2\xd9\x9b\x8d\xe4\x76\x7b\xd9\x57\xd0\x77\x8e\x8b\xa8\x22\x11\xf5\xdf\x28\x91\xa6\x9a\x97\x31\x2e\xba\xf9\x53\x57\x92\x37\x33\x88\x76\x80\x2d\xc9\xfe\xad\x27\x21\x98\x47\xba\xaa\xc4\x06\xe1\xaf\xdf\x2c\x49\xc6\xf1\x55\xb3\x81\x32\x4c\x4c\x2a\xa3\xda\x78\x97\xbf\xed\xfb\x59\x5c\x72\xe1\xd7\xa8\x1c\x36\x95\x83\xd8\x91\xe1\xb4\xee\xf5\x5a\x5f\x63\xe3\x0c\xd6\x1f\x95\x5e\xc6\x43\xb5\xbd\x61\x03\xdf\x83\x63\xf2\x72\xc5\x13\xec\x91\x66\x39\x17\xd2\x23\x04\x85\x1d\x9d\x32\xae\x77\xc1\xb2\x88\xb6\xdb\xde\xa0\xbe\xdd\x6e\x6b\xdc\xec\x03\x96\x40\x84\x7f\xc8\xec\x3e\x76\xd7\x7c\xee\xaf\x27\xad\x8a\x8b\x76\x5c\xb3\x1f\xf7\x79\xcc\xe1\xca\x8c\x29\x39\x9a\x20\x5e\xef\x06\x3d\x1a\x37\x1c\xc2\xef\x86\xdc\x4f\x8d\x6b\xf0\x54\x65\xa6\xb2\xa5\x4f\x6b\x13\x09\x02\x5c\x69\x5f\x0d\x08\x6d\x1d\xb4\x19\xa5\x73\x41\xb7\x0d\x39\x6b\xe7\xad\xd3\xa3\x9a\x5d\xb0\xb6\xad\x1a\xdd\xca\x69\x3d\xcc\xae\xc2\x63\x40\xec\x32\x8a\x0f\xaf\x22\xa1\xca\xb3\xc8\x32\x4a\xdd\x3c\x75\xb6\x62\xbb\x95\xd8\x1b\xb7\xa6\xe1\x33\x19\x46\xb7\xb2\xf3\x61\xcd\x4c\xc5\x19\x19\x23\x5f\x0a\x96\x53\xef\xb1\x64\xf3\xf8\xd9\x64\xb3\x4d\x1d\x8e\x54\xfd\xea\x4e\x85\xd0\xfd\x07\xf4\xd7\xf7\xaf\xdf\x5d\xc4\x59\x74\xb2\x1d\x66\x63\xab\x7b\xa3\xd3\x0f\xf7\xab\xae\xe6\xf1\x76\x67\x7b\xc7\xf5\xc8\x9f\xeb\x80\xa4\x8a\x8f\xea\x75\xc8\x6b\x6b\xcb\xfe\x5b\xb7\xed\x40\xb8\xa8\xdf\xf6\x88\x36\xd3\x71\xf3\x80\x29\x40\xa6\x91\xfa\x45\x5a\x0d\x5d\x42\x2d\xdf\xc3\x1b\x62\x72\x49\x1f\xaf\x41\xc7\x8e\x0f\x40\x32\x81\x97\xe8\x3f\x74\x55\x58\xb5\x9e\x44\x97\x27\x34\x70\xbc\xa1\x6d\xd6\x43\x38\xb3\x3b\x65\xfb\xbb\xde\x05\x10\x27\xea\x34\x30\x2d\x04\x17\x33\x6b\xce\x52\xfa\x5d\xd1\x39\xee\x47\x3a\x19\xc8\x12\x76\x6a\x15\x40\x83\xa8\x5a\x66\x19\x81\xb9\xbc\x19\x4b\xe9\xeb\x2d\xf6\x11\xb3\x2f\xd2\xd4\x1d\x66\xf1\xd3\x5c\xf6\x2d\xed\xdf\x11\xad\x0c\x37\xd6\x7a\x77\xf3\xc5\x62\x85\xbd\x38\x76\x23\x67\x22\x67\xf9\x13\x74\x9c\xcb\x32\xf1\xbb\xd6\x66\x37\xfe\x5d\xab\x28\xb6\x29\x0b\xf9\x35\xae\xb8\x56\xb0\x1d\xb9\xbf\xda\x80\x97\xbf\xbe\x06\x78\x5c\x72\x7b\xd5\xc9\x94\xc3\x50\xf0\x1f\xc0\x06\xbc\x19\x21\x9e\x10\x9f\xaa\x93\x8b\x9c\xf5\xae\xc3\x4e\xe5\x90\xe8\x9f\x35\xb4\xbb\x7b\x43\x5f\xfc\x26\x90\xab\x64\xe7\x45\xaa\x61\x3b\x86\x8d\xcd\x8a\x78\x11\xd4\x56\x16\x19\x6a\xd7\x42\x15\xb8\x21\x15\xf6\x4c\x94\xcd\xad\xc6\x1d\x5c\xc5\xad\x13\xdf\x8a\xaf\xd4\x1b\x81\xfd\x7c\xf4\xf9\xab\x30\x7b\x3f\xf7\x87\x35\xbd\x86\xa4\x11\xc8\xbb\x91\x79\x7b\x6a\x47\xd7\x95\xb7\x45\xdb\x90\x63\x20\x26\x84\xb9\x22\xa9\xbe\x8c\xe0\x78\xac\xe9\x0d\x2f\xb5\xcc\x7d\x94\xe1\x5b\x72\x96\x29\xdf\xb5\x87\xd9\x23\x32\x93\x75\xb3\x4e\x3a\xaf\xd6\x1e\x39\xfd\x5f\xc2\x69\x5f\x00\x18\x09\xb2\x35\x09\x96\x8f\xaf\xdd\xe4\x2f\x09\xad\x05\x85\xe2\x49\x7f\x66\xb9\xeb\x9c\x91\x00\x01\x08\xd9\x3d\x19\x01\xf8\x07\x10\xb2\xe7\x67\x73\x0d\x03\x7c\xb4\xbe\xdc\x03\xa0\x52\x77\xf7\x03\x19\x5e\x64\x01\xb5\xfb\xff\xb5\x10\x39\x8e\xa1\x51\xd5\xff\xa1\x7f\x64\x77\xd3\xb7\xb3\x81\xad\xf9\x7d\x20\x9f\xed\xdf\xdf\x09\xbb\x24\xf0\xcd\x4e\xf7\x53\x98\xfd\x9d\xec\xbc\xfa\x37\x00\x00\xff\xff\xe9\x40\xfd\x3d\x80\x29\x00\x00")

func assetsStyleStyleCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsStyleStyleCss,
		"assets/style/style.css",
	)
}

func assetsStyleStyleCss() (*asset, error) {
	bytes, err := assetsStyleStyleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/style/style.css", size: 10624, mode: os.FileMode(420), modTime: time.Unix(1511576680, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/index.html": assetsIndexHtml,
	"assets/images/loader.svg": assetsImagesLoaderSvg,
	"assets/script/script.js": assetsScriptScriptJs,
	"assets/style/style.css": assetsStyleStyleCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"images": &bintree{nil, map[string]*bintree{
			"loader.svg": &bintree{assetsImagesLoaderSvg, map[string]*bintree{}},
		}},
		"index.html": &bintree{assetsIndexHtml, map[string]*bintree{}},
		"script": &bintree{nil, map[string]*bintree{
			"script.js": &bintree{assetsScriptScriptJs, map[string]*bintree{}},
		}},
		"style": &bintree{nil, map[string]*bintree{
			"style.css": &bintree{assetsStyleStyleCss, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
